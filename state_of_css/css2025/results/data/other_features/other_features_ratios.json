{
  "dataAPI": {
    "surveys": {
      "state_of_css": {
        "css2025": {
          "other_features": {
            "other_features_ratios": [
              {
                "id": "feature_support_queries",
                "entity": {
                  "name": "`@supports`",
                  "nameClean": "@supports",
                  "nameHtml": "<code>@supports</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-supports-api",
                    "url": "https://caniuse.com/css-supports-api"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@supports",
                    "title": "@supports",
                    "summary": "The @supports CSS at-rule lets you specify CSS declarations that depend on a browser's support for CSS features.\nUsing this at-rule is commonly called a feature query.\nThe rule must be placed at the top level of your code or nested inside any other conditional group at-rule."
                  },
                  "example": {
                    "language": "css",
                    "code": "@supports (display: table-cell) and (display: list-item) {\n  //...\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@supports</span> (<span class=\"hljs-attribute\">display</span>: table-cell) <span class=\"hljs-keyword\">and</span> (<span class=\"hljs-attribute\">display</span>: list-item) {\n  //...\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.71,
                        "interest": 0.9,
                        "usage": 0.41,
                        "retention": 0.97,
                        "positivity": 0.37,
                        "positivityRelative": 0.93,
                        "appreciation": 0.06
                      },
                      "completion": {
                        "count": 7278,
                        "percentageSurvey": 74.98,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 1,
                        "interest": 0,
                        "usage": 0.77,
                        "retention": 0,
                        "positivity": 0,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 77,
                        "percentageSurvey": 81.91,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "at_property",
                "entity": {
                  "name": "`@property`",
                  "nameClean": "@property",
                  "nameHtml": "<code>@property</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_at-rules_property",
                    "url": "https://caniuse.com/mdn-css_at-rules_property"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@property",
                    "title": "@property",
                    "summary": "The @property CSS at-rule is part of the CSS Houdini set of APIs. It allows developers to explicitly define CSS custom properties, allowing for property type checking and constraining, setting default values, and defining whether a custom property can inherit values or not."
                  },
                  "example": {
                    "language": "css",
                    "code": "@property --property-name {\n  syntax: \"<color>\";\n  inherits: false;\n  initial-value: #c0ffee;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@property</span> --property-name {\n  syntax: <span class=\"hljs-string\">&quot;&lt;color&gt;&quot;</span>;\n  inherits: false;\n  initial-value: <span class=\"hljs-number\">#c0ffee</span>;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.57,
                        "interest": 0.92,
                        "usage": 0.14,
                        "retention": 0.92,
                        "positivity": 0.38,
                        "positivityRelative": 0.92,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 7277,
                        "percentageSurvey": 74.97,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.84,
                        "interest": 1,
                        "usage": 0.52,
                        "retention": 1,
                        "positivity": 0.46,
                        "positivityRelative": 1,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 78,
                        "percentageSurvey": 82.98,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "has_selector",
                "entity": {
                  "name": "`:has()`",
                  "nameClean": ":has()",
                  "nameHtml": "<code>:has()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-has",
                    "url": "https://caniuse.com/css-has"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/:has",
                    "title": ":has()",
                    "summary": "The functional :has() CSS pseudo-class represents an element if any of the relative selectors that are passed as an argument match at least one element when anchored against this element. This pseudo-class presents a way of selecting a parent element or a previous sibling element with respect to a reference element by taking a relative selector list as an argument."
                  },
                  "example": {
                    "language": "css",
                    "code": "a:has(> img) {\n  border: 2px solid grey;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">a</span><span class=\"hljs-selector-pseudo\">:has</span>(&gt; <span class=\"hljs-selector-tag\">img</span>) {\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">2px</span> solid grey;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.94,
                        "interest": 0.97,
                        "usage": 0.73,
                        "retention": 0.98,
                        "positivity": 0.47,
                        "positivityRelative": 0.98,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 7277,
                        "percentageSurvey": 74.97,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 1,
                        "interest": 0,
                        "usage": 1,
                        "retention": 1,
                        "positivity": 0.58,
                        "positivityRelative": 1,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 78,
                        "percentageSurvey": 82.98,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "where_selector",
                "entity": {
                  "name": "`:where()`",
                  "nameClean": ":where()",
                  "nameHtml": "<code>:where()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-where",
                    "url": "https://caniuse.com/css-where"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/:where",
                    "title": ":where()",
                    "summary": "The :where() CSS pseudo-class function takes a selector list as its argument, and selects any element that can be selected by one of the selectors in that list."
                  },
                  "example": {
                    "language": "css",
                    "code": ":where(header, main, footer) p:hover {\n  color: red;\n  cursor: pointer;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-pseudo\">:where</span>(<span class=\"hljs-selector-tag\">header</span>, <span class=\"hljs-selector-tag\">main</span>, <span class=\"hljs-selector-tag\">footer</span>) <span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-pseudo\">:hover</span> {\n  <span class=\"hljs-attribute\">color</span>: red;\n  <span class=\"hljs-attribute\">cursor</span>: pointer;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.7,
                        "interest": 0.96,
                        "usage": 0.35,
                        "retention": 0.98,
                        "positivity": 0.43,
                        "positivityRelative": 0.97,
                        "appreciation": 0.02
                      },
                      "completion": {
                        "count": 7270,
                        "percentageSurvey": 74.9,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 1,
                        "interest": 0,
                        "usage": 0.78,
                        "retention": 1,
                        "positivity": 0.46,
                        "positivityRelative": 1,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 78,
                        "percentageSurvey": 82.98,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "cascade_layers",
                "entity": {
                  "name": "Cascade Layers",
                  "nameClean": "Cascade Layers",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-cascade-layers",
                    "url": "https://caniuse.com/css-cascade-layers"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@layer",
                    "title": "@layer",
                    "summary": "The @layer CSS at-rule is used to declare a cascade layer and can also be used to define the order of precedence in case of multiple cascade layers."
                  },
                  "example": {
                    "language": "css",
                    "code": "@layer layer-name {rules}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@layer</span> layer-name {rules}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.6,
                        "interest": 0.89,
                        "usage": 0.18,
                        "retention": 0.9,
                        "positivity": 0.37,
                        "positivityRelative": 0.9,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 7271,
                        "percentageSurvey": 74.91,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 1,
                        "interest": 0,
                        "usage": 0.52,
                        "retention": 1,
                        "positivity": 0.28,
                        "positivityRelative": 1,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 78,
                        "percentageSurvey": 82.98,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "css_nesting",
                "entity": {
                  "name": "CSS Nesting",
                  "nameClean": "CSS Nesting",
                  "entityType": "feature",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_nesting",
                    "title": "CSS nesting",
                    "summary": "The CSS nesting module defines a syntax for nesting selectors, providing the ability to nest one style rule inside another, with the selector of the child rule relative to the selector of the parent rule."
                  },
                  "example": {
                    "language": "css",
                    "code": ".parent {\n  color: blue;\n\n  .child {\n    color: red;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">color</span>: blue;\n\n  <span class=\"hljs-selector-class\">.child</span> {\n    <span class=\"hljs-attribute\">color</span>: red;\n  }\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.91,
                        "interest": 0.88,
                        "usage": 0.51,
                        "retention": 0.95,
                        "positivity": 0.42,
                        "positivityRelative": 0.93,
                        "appreciation": 0.06
                      },
                      "completion": {
                        "count": 7297,
                        "percentageSurvey": 75.18,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 1,
                        "interest": 0,
                        "usage": 0.86,
                        "retention": 1,
                        "positivity": 0.51,
                        "positivityRelative": 1,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 78,
                        "percentageSurvey": 82.98,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "image_set",
                "entity": {
                  "name": "`image-set()`",
                  "nameClean": "image-set()",
                  "nameHtml": "<code>image-set()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-image-set",
                    "url": "https://caniuse.com/css-image-set"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/image/image-set",
                    "title": "image-set()",
                    "summary": "The image-set() CSS functional notation is a method of letting the browser pick the most appropriate CSS image from a given set, primarily for high pixel density screens."
                  },
                  "example": {
                    "language": "css",
                    "code": ".box {\n  background-image: image-set(\n    url(\"small-balloons.jpg\") 1x,\n    url(\"large-balloons.jpg\") 2x);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.box</span> {\n  <span class=\"hljs-attribute\">background-image</span>: <span class=\"hljs-built_in\">image-set</span>(\n    <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">&quot;small-balloons.jpg&quot;</span>) <span class=\"hljs-number\">1</span>x,\n    <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">&quot;large-balloons.jpg&quot;</span>) <span class=\"hljs-number\">2</span>x);\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.48,
                        "interest": 0.92,
                        "usage": 0.17,
                        "retention": 0.89,
                        "positivity": 0.38,
                        "positivityRelative": 0.93,
                        "appreciation": -0.04
                      },
                      "completion": {
                        "count": 7280,
                        "percentageSurvey": 75.01,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.57,
                        "interest": 0,
                        "usage": 0.2,
                        "retention": 0,
                        "positivity": 0,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 78,
                        "percentageSurvey": 82.98,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "at_scope",
                "entity": {
                  "name": "`@scope`",
                  "nameClean": "@scope",
                  "nameHtml": "<code>@scope</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-cascade-scope",
                    "url": "https://caniuse.com/css-cascade-scope"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@scope",
                    "title": "@scope",
                    "summary": "The @scope CSS at-rule enables you to select elements in specific DOM subtrees, targeting elements precisely without writing overly-specific selectors that are hard to override, and without coupling your selectors too tightly to the DOM structure."
                  },
                  "example": {
                    "language": "css",
                    "code": "@scope (.card) {\n  :scope {\n    padding: 1rem;\n  }\n\n  .title {\n    font-size: 1.2rem;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@scope</span> (.card) {\n  <span class=\"hljs-selector-pseudo\">:scope</span> {\n    <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">1rem</span>;\n  }\n\n  <span class=\"hljs-selector-class\">.title</span> {\n    <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">1.2rem</span>;\n  }\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.41,
                        "interest": 0.93,
                        "usage": 0.04,
                        "retention": 0.91,
                        "positivity": 0.39,
                        "positivityRelative": 0.94,
                        "appreciation": -0.02
                      },
                      "completion": {
                        "count": 7282,
                        "percentageSurvey": 75.03,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.71,
                        "interest": 0,
                        "usage": 0.24,
                        "retention": 0,
                        "positivity": 0,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 78,
                        "percentageSurvey": 82.98,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "nth_child_of_s",
                "entity": {
                  "name": "`nth-child of S`",
                  "nameClean": "nth-child of S",
                  "nameHtml": "<code>nth-child of S</code>",
                  "entityType": "feature",
                  "description": "Pre-filter a set of child elements before applying `nth-child` to it.\n",
                  "descriptionClean": "Pre-filter a set of child elements before applying nth-child to it.",
                  "descriptionHtml": "Pre-filter a set of child elements before applying <code>nth-child</code> to it.\n",
                  "example": {
                    "language": "css",
                    "code": ":nth-child(2 of .highlight)\n  border: 2px red solid;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-pseudo\">:nth-child</span>(<span class=\"hljs-number\">2</span> of <span class=\"hljs-selector-class\">.highlight</span>)\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">2px</span> red solid;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.35,
                        "interest": 0.96,
                        "usage": 0.15,
                        "retention": 0.95,
                        "positivity": 0.43,
                        "positivityRelative": 0.96,
                        "appreciation": -0.02
                      },
                      "completion": {
                        "count": 7271,
                        "percentageSurvey": 74.91,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.59,
                        "interest": 0,
                        "usage": 0.36,
                        "retention": 1,
                        "positivity": 0.33,
                        "positivityRelative": 1,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 78,
                        "percentageSurvey": 82.98,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "field_sizing",
                "entity": {
                  "name": "`field-sizing`",
                  "nameClean": "field-sizing",
                  "nameHtml": "<code>field-sizing</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_properties_field-sizing",
                    "url": "https://caniuse.com/mdn-css_properties_field-sizing"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/field-sizing",
                    "title": "field-sizing",
                    "summary": "The field-sizing CSS property enables you to control the sizing behavior of elements that are given a default preferred size, such as form control elements. This property enables you to override the default sizing behavior, allowing form controls to adjust in size to fit their contents."
                  },
                  "example": {
                    "language": "css",
                    "code": "input,\ntextarea {\n  field-sizing: content;\n  min-width: 50px;\n  max-width: 350px;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">input</span>,\n<span class=\"hljs-selector-tag\">textarea</span> {\n  <span class=\"hljs-attribute\">field-sizing</span>: content;\n  <span class=\"hljs-attribute\">min-width</span>: <span class=\"hljs-number\">50px</span>;\n  <span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">350px</span>;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.53,
                        "interest": 1,
                        "usage": 0.21,
                        "retention": 0,
                        "positivity": 0.14,
                        "positivityRelative": 1,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 78,
                        "percentageSurvey": 82.98,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "target_text_selector",
                "entity": {
                  "name": "`::target-text`",
                  "nameClean": "::target-text",
                  "nameHtml": "<code>::target-text</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_selectors_target-text",
                    "url": "https://caniuse.com/mdn-css_selectors_target-text"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/::target-text",
                    "title": "::target-text",
                    "summary": "The ::target-text CSS pseudo-element represents the text that has been scrolled to if the browser supports text fragments. It allows authors to choose how to highlight that section of text."
                  },
                  "example": {
                    "language": "css",
                    "code": "::target-text {\n  background-color: pink;\n}\n",
                    "codeHighlighted": "::target-text {\n  <span class=\"hljs-attribute\">background-color</span>: pink;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.35,
                        "interest": 0,
                        "usage": 0.16,
                        "retention": 0,
                        "positivity": 0,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 78,
                        "percentageSurvey": 82.98,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "at_function",
                "entity": {
                  "name": "`@function`",
                  "nameClean": "@function",
                  "nameHtml": "<code>@function</code>",
                  "entityType": "feature",
                  "example": {
                    "language": "css",
                    "code": "@function --negate(--value) {\n  result: calc(-1 * var(--value));\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@function</span> --negate(--value) {\n  result: <span class=\"hljs-built_in\">calc</span>(-<span class=\"hljs-number\">1</span> * <span class=\"hljs-built_in\">var</span>(--value));\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.69,
                        "interest": 1,
                        "usage": 0,
                        "retention": 0,
                        "positivity": 0.33,
                        "positivityRelative": 1,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 78,
                        "percentageSurvey": 82.98,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "display_contents",
                "entity": {
                  "name": "`display: contents`",
                  "nameClean": "display: contents",
                  "nameHtml": "<code>display: contents</code>",
                  "entityType": "feature"
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.76,
                        "interest": 0,
                        "usage": 0.47,
                        "retention": 0,
                        "positivity": 0,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 78,
                        "percentageSurvey": 82.98,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "advanced_attr_function",
                "entity": {
                  "name": "Advanced `attr()`",
                  "nameClean": "Advanced attr()",
                  "nameHtml": "Advanced <code>attr()</code>",
                  "entityType": "feature",
                  "description": "Support for properties other than content",
                  "descriptionClean": "Support for properties other than content",
                  "example": {
                    "language": "css",
                    "code": ".title {\n  background-color: attr(data-color type(<color>));\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.title</span> {\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">attr</span>(data-color <span class=\"hljs-built_in\">type</span>(&lt;color&gt;));\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.85,
                        "interest": 1,
                        "usage": 0.32,
                        "retention": 1,
                        "positivity": 0.39,
                        "positivityRelative": 1,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 78,
                        "percentageSurvey": 82.98,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "if_function",
                "entity": {
                  "name": "`if()`",
                  "nameClean": "if()",
                  "nameHtml": "<code>if()</code>",
                  "entityType": "feature",
                  "example": {
                    "language": "css",
                    "code": "div {\n  color: var(--color);\n  background-color: if(style(--color: white): black; else: white);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">div</span> {\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-built_in\">var</span>(--color);\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">if</span>(<span class=\"hljs-built_in\">style</span>(--color: white): black; else: white);\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.82,
                        "interest": 0,
                        "usage": 0,
                        "retention": 0,
                        "positivity": 0,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 78,
                        "percentageSurvey": 82.98,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "sibling_index",
                "entity": {
                  "name": "`sibling-index()`",
                  "nameClean": "sibling-index()",
                  "nameHtml": "<code>sibling-index()</code>",
                  "entityType": "feature"
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.41,
                        "interest": 1,
                        "usage": 0,
                        "retention": 0,
                        "positivity": 0.25,
                        "positivityRelative": 1,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 77,
                        "percentageSurvey": 81.91,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "sibling_count",
                "entity": {
                  "name": "`sibling-count()`",
                  "nameClean": "sibling-count()",
                  "nameHtml": "<code>sibling-count()</code>",
                  "entityType": "feature"
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.43,
                        "interest": 1,
                        "usage": 0,
                        "retention": 0,
                        "positivity": 0.25,
                        "positivityRelative": 1,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 78,
                        "percentageSurvey": 82.98,
                        "total": 94
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  }
}