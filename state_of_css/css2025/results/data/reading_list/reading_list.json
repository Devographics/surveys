{
  "dataAPI": {
    "surveys": {
      "state_of_css": {
        "css2025": {
          "reading_list": {
            "reading_list": {
              "id": "reading_list",
              "responses": {
                "currentEdition": {
                  "_metadata": {
                    "axis1Sort": {
                      "property": "count",
                      "order": "desc"
                    },
                    "limit": 20,
                    "cutoff": 10
                  },
                  "completion": {
                    "count": 63,
                    "percentageSurvey": 25.2,
                    "total": 250
                  },
                  "buckets": [
                    {
                      "count": 27,
                      "id": "offset_path",
                      "percentageQuestion": 42.86,
                      "percentageSurvey": 10.8,
                      "entity": {
                        "name": "`offset-path`\n",
                        "nameHtml": "<code>offset-path</code>\n",
                        "nameClean": "offset-path",
                        "id": "offset_path",
                        "entityType": "feature",
                        "example": {
                          "language": "css",
                          "code": ".blueBox {\n  background-color: blue;\n  offset-path: border-box;\n  offset-distance: 5%;\n}\n",
                          "codeHighlighted": "<span class=\"hljs-selector-class\">.blueBox</span> {\n  <span class=\"hljs-attribute\">background-color</span>: blue;\n  <span class=\"hljs-attribute\">offset-path</span>: border-box;\n  <span class=\"hljs-attribute\">offset-distance</span>: <span class=\"hljs-number\">5%</span>;\n}"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/offset-path"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/css-motion-paths"
                        },
                        "webFeature": {
                          "id": "motion-path",
                          "description_html": "The <code>offset</code> CSS property animates an element along a defined motion path.",
                          "group": [
                            "css"
                          ],
                          "name": "Motion path",
                          "spec": [
                            "https://drafts.fxtf.org/motion-1/"
                          ],
                          "status": {
                            "baseline": "low",
                            "baseline_low_date": "2022-09-12",
                            "support": {
                              "chrome": "55",
                              "chrome_android": "55",
                              "edge": "79",
                              "firefox": "72",
                              "firefox_android": "79",
                              "safari": "16",
                              "safari_ios": "16"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 27,
                      "id": "target_text_selector",
                      "percentageQuestion": 42.86,
                      "percentageSurvey": 10.8,
                      "entity": {
                        "name": "`::target-text`",
                        "nameHtml": "<code>::target-text</code>",
                        "nameClean": "::target-text",
                        "id": "target_text_selector",
                        "entityType": "feature",
                        "example": {
                          "language": "css",
                          "code": "::target-text {\n  background-color: pink;\n}\n",
                          "codeHighlighted": "::target-text {\n  <span class=\"hljs-attribute\">background-color</span>: pink;\n}"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/::target-text"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/mdn-css_selectors_target-text"
                        }
                      }
                    },
                    {
                      "count": 22,
                      "id": "hanging_punctuation",
                      "percentageQuestion": 34.92,
                      "percentageSurvey": 8.8,
                      "entity": {
                        "name": "`hanging-punctuation`",
                        "nameHtml": "<code>hanging-punctuation</code>",
                        "nameClean": "hanging-punctuation",
                        "id": "hanging_punctuation",
                        "entityType": "feature",
                        "example": {
                          "language": "css",
                          "code": "p.hanging {\n  hanging-punctuation: first last;\n}\n",
                          "codeHighlighted": "<span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-class\">.hanging</span> {\n  <span class=\"hljs-attribute\">hanging-punctuation</span>: first last;\n}"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/hanging-punctuation"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/css-hanging-punctuation"
                        },
                        "webFeature": {
                          "id": "hanging-punctuation",
                          "description_html": "The <code>hanging-punctuation</code> CSS property puts punctuation characters outside of the box to align the text with the rest of the document.",
                          "name": "Hanging punctuation",
                          "spec": [
                            "https://drafts.csswg.org/css-text-4/#hanging-punctuation-property"
                          ],
                          "status": {
                            "baseline": "false"
                          }
                        }
                      }
                    },
                    {
                      "count": 21,
                      "id": "sibling_index",
                      "percentageQuestion": 33.33,
                      "percentageSurvey": 8.4,
                      "entity": {
                        "name": "`sibling-index()`",
                        "nameHtml": "<code>sibling-index()</code>",
                        "nameClean": "sibling-index()",
                        "id": "sibling_index",
                        "entityType": "feature",
                        "resources": [
                          {
                            "url": "https://www.w3.org/TR/css-values-5/#tree-counting",
                            "title": "Tree Counting Functions: the sibling-count() and sibling-index() notations"
                          },
                          {
                            "url": "https://nerdy.dev/sibling-index",
                            "title": "Let the stagger experiments begin"
                          }
                        ]
                      }
                    },
                    {
                      "count": 20,
                      "id": "at_function",
                      "percentageQuestion": 31.75,
                      "percentageSurvey": 8,
                      "entity": {
                        "name": "`@function`",
                        "nameHtml": "<code>@function</code>",
                        "nameClean": "@function",
                        "id": "at_function",
                        "entityType": "feature",
                        "example": {
                          "language": "css",
                          "code": "@function --negate(--value) {\n  result: calc(-1 * var(--value));\n}\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">@function</span> --negate(--value) {\n  result: <span class=\"hljs-built_in\">calc</span>(-<span class=\"hljs-number\">1</span> * <span class=\"hljs-built_in\">var</span>(--value));\n}"
                        },
                        "resources": [
                          {
                            "url": "https://css-tricks.com/functions-in-css/",
                            "title": "Functions in CSS?!"
                          },
                          {
                            "url": "https://www.bram.us/2025/02/09/css-custom-functions-teaser/",
                            "title": "CSS Custom Functions are coming … and they are going to be a game changer!"
                          }
                        ]
                      }
                    },
                    {
                      "count": 20,
                      "id": "field_sizing",
                      "percentageQuestion": 31.75,
                      "percentageSurvey": 8,
                      "entity": {
                        "name": "`field-sizing`",
                        "nameHtml": "<code>field-sizing</code>",
                        "nameClean": "field-sizing",
                        "id": "field_sizing",
                        "entityType": "feature",
                        "example": {
                          "language": "css",
                          "code": "input,\ntextarea {\n  field-sizing: content;\n  min-width: 50px;\n  max-width: 350px;\n}\n",
                          "codeHighlighted": "<span class=\"hljs-selector-tag\">input</span>,\n<span class=\"hljs-selector-tag\">textarea</span> {\n  <span class=\"hljs-attribute\">field-sizing</span>: content;\n  <span class=\"hljs-attribute\">min-width</span>: <span class=\"hljs-number\">50px</span>;\n  <span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">350px</span>;\n}"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/field-sizing"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/mdn-css_properties_field-sizing"
                        }
                      }
                    },
                    {
                      "count": 20,
                      "id": "scroll_state",
                      "percentageQuestion": 31.75,
                      "percentageSurvey": 8,
                      "entity": {
                        "name": "Container scroll-state queries",
                        "nameClean": "Container scroll-state queries",
                        "id": "scroll_state",
                        "entityType": "feature",
                        "example": {
                          "language": "css",
                          "code": "@container scroller scroll-state(scrollable: top) {\n  .back-to-top {\n    translate: 0 0;\n  }\n}\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">@container</span> scroller scroll-state(<span class=\"hljs-attribute\">scrollable</span>: top) {\n  <span class=\"hljs-selector-class\">.back-to-top</span> {\n    <span class=\"hljs-attribute\">translate</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span>;\n  }\n}"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_conditional_rules/Container_scroll-state_queries"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/mdn-css_at-rules_container_scroll-state_queries"
                        }
                      }
                    },
                    {
                      "count": 20,
                      "id": "sibling_count",
                      "percentageQuestion": 31.75,
                      "percentageSurvey": 8,
                      "entity": {
                        "name": "`sibling-count()`",
                        "nameHtml": "<code>sibling-count()</code>",
                        "nameClean": "sibling-count()",
                        "id": "sibling_count",
                        "entityType": "feature",
                        "resources": [
                          {
                            "url": "https://www.w3.org/TR/css-values-5/#tree-counting",
                            "title": "Tree Counting Functions: the sibling-count() and sibling-index() notations"
                          }
                        ]
                      }
                    },
                    {
                      "count": 19,
                      "id": "calc_size",
                      "percentageQuestion": 30.16,
                      "percentageSurvey": 7.6,
                      "entity": {
                        "name": "`calc-size()`",
                        "nameHtml": "<code>calc-size()</code>",
                        "nameClean": "calc-size()",
                        "id": "calc_size",
                        "entityType": "feature",
                        "example": {
                          "language": "css",
                          "code": ".element {\n  height: 0;\n  overflow: hidden;\n  transition: height 0.3s;\n}\n\n.element.open {\n  height: calc-size(auto);\n}\n",
                          "codeHighlighted": "<span class=\"hljs-selector-class\">.element</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">overflow</span>: hidden;\n  <span class=\"hljs-attribute\">transition</span>: height <span class=\"hljs-number\">0.3s</span>;\n}\n\n<span class=\"hljs-selector-class\">.element</span><span class=\"hljs-selector-class\">.open</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-built_in\">calc-size</span>(auto);\n}"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/mdn-css_types_calc-size"
                        },
                        "resources": [
                          {
                            "url": "https://chromestatus.com/feature/5196713071738880",
                            "title": "CSS interpolate-size property and calc-size() function"
                          }
                        ],
                        "webFeature": {
                          "id": "calc-size",
                          "description_html": "The <code>calc-size()</code> CSS function computes mathematical expressions that include <code>height</code> and <code>width</code> keyword values, for example <code>calc-size(fit-content, size / 2)</code>. Not to be confused with the <code>calc()</code> CSS function, which cannot use keyword values.",
                          "group": [
                            "css"
                          ],
                          "name": "calc-size()",
                          "spec": [
                            "https://drafts.csswg.org/css-values-5/#calc-size"
                          ],
                          "status": {
                            "baseline": "false",
                            "support": {
                              "chrome": "129",
                              "chrome_android": "129",
                              "edge": "129"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 19,
                      "id": "css_carousels",
                      "percentageQuestion": 30.16,
                      "percentageSurvey": 7.6,
                      "entity": {
                        "name": "CSS Carousels",
                        "nameClean": "CSS Carousels",
                        "id": "css_carousels",
                        "entityType": "feature",
                        "example": {
                          "language": "css",
                          "code": ".carousel {\n  &::scroll-button(left) {\n    content: \"⬅\" / \"Scroll Left\";\n  }\n  \n  &::scroll-button(right) {\n    content: \"⮕\" / \"Scroll Right\";\n  }\n\n  &::scroll-button(*):focus-visible {\n    outline-offset: 5px;\n  }\n}\n",
                          "codeHighlighted": "<span class=\"hljs-selector-class\">.carousel</span> {\n  &amp;::<span class=\"hljs-built_in\">scroll-button</span>(left) {\n    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot;⬅&quot;</span> / <span class=\"hljs-string\">&quot;Scroll Left&quot;</span>;\n  }\n  \n  &amp;::<span class=\"hljs-built_in\">scroll-button</span>(right) {\n    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot;⮕&quot;</span> / <span class=\"hljs-string\">&quot;Scroll Right&quot;</span>;\n  }\n\n  &amp;::<span class=\"hljs-built_in\">scroll-button</span>(*):focus-visible {\n    <span class=\"hljs-attribute\">outline-offset</span>: <span class=\"hljs-number\">5px</span>;\n  }\n}"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_overflow/CSS_carousels"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/mdn-css_selectors_scroll-marker"
                        },
                        "resources": [
                          {
                            "url": "https://developer.chrome.com/blog/carousels-with-css",
                            "title": "Carousels with CSS"
                          },
                          {
                            "url": "https://chrome.dev/carousel/",
                            "title": "CSS Carousel Gallery"
                          },
                          {
                            "url": "https://css-tricks.com/css-carousels/",
                            "title": "CSS Carousels"
                          }
                        ]
                      }
                    },
                    {
                      "count": 19,
                      "id": "image_set",
                      "percentageQuestion": 30.16,
                      "percentageSurvey": 7.6,
                      "entity": {
                        "name": "`image-set()`",
                        "nameHtml": "<code>image-set()</code>",
                        "nameClean": "image-set()",
                        "id": "image_set",
                        "entityType": "feature",
                        "example": {
                          "language": "css",
                          "code": ".box {\n  background-image: image-set(\n    url(\"small-balloons.jpg\") 1x,\n    url(\"large-balloons.jpg\") 2x);\n}\n",
                          "codeHighlighted": "<span class=\"hljs-selector-class\">.box</span> {\n  <span class=\"hljs-attribute\">background-image</span>: <span class=\"hljs-built_in\">image-set</span>(\n    <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">&quot;small-balloons.jpg&quot;</span>) <span class=\"hljs-number\">1</span>x,\n    <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">&quot;large-balloons.jpg&quot;</span>) <span class=\"hljs-number\">2</span>x);\n}"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/image/image-set"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/css-image-set"
                        },
                        "webFeature": {
                          "id": "image-set",
                          "description_html": "The <code>image-set()</code> CSS function provides a set of images at different resolutions or pixel densities, which the browser can pick from, depending on the device capabilities.",
                          "group": [
                            "css"
                          ],
                          "name": "image-set()",
                          "spec": [
                            "https://drafts.csswg.org/css-images-4/#image-set-notation"
                          ],
                          "status": {
                            "baseline": "low",
                            "baseline_low_date": "2023-09-18",
                            "support": {
                              "chrome": "113",
                              "chrome_android": "113",
                              "edge": "113",
                              "firefox": "89",
                              "firefox_android": "89",
                              "safari": "17",
                              "safari_ios": "17"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 19,
                      "id": "text_box_trim",
                      "percentageQuestion": 30.16,
                      "percentageSurvey": 7.6,
                      "entity": {
                        "name": "`text-box-edge`/`text-box-trim`",
                        "nameHtml": "<code>text-box-edge</code>/<code>text-box-trim</code>",
                        "nameClean": "text-box-edge/text-box-trim",
                        "id": "text_box_trim",
                        "entityType": "feature",
                        "example": {
                          "language": "css",
                          "code": "p {\n  text-box-edge: cap alphabetic;\n  text-box-trim: trim-both;\n}\n",
                          "codeHighlighted": "<span class=\"hljs-selector-tag\">p</span> {\n  <span class=\"hljs-selector-tag\">text</span>-box-edge: cap alphabetic;\n  <span class=\"hljs-selector-tag\">text</span>-box-trim: trim-both;\n}"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/css-text-box-trim"
                        },
                        "resources": [
                          {
                            "url": "https://medium.com/microsoft-design/leading-trim-the-future-of-digital-typesetting-d082d84b202",
                            "title": "Leading-Trim: The Future of Digital Typesetting"
                          }
                        ]
                      }
                    },
                    {
                      "count": 18,
                      "id": "anchor_positioning",
                      "percentageQuestion": 28.57,
                      "percentageSurvey": 7.2,
                      "entity": {
                        "name": "Anchor Positioning",
                        "nameClean": "Anchor Positioning",
                        "id": "anchor_positioning",
                        "entityType": "feature",
                        "example": {
                          "language": "css",
                          "code": ".anchor {\n  anchor-name: --my-anchor;\n}\n.target {\n  position: absolute;\n  position-anchor: --my-anchor;\n  position-area: start end;\n}\n",
                          "codeHighlighted": "<span class=\"hljs-selector-class\">.anchor</span> {\n  <span class=\"hljs-attribute\">anchor-name</span>: --my-anchor;\n}\n<span class=\"hljs-selector-class\">.target</span> {\n  <span class=\"hljs-attribute\">position</span>: absolute;\n  <span class=\"hljs-attribute\">position-anchor</span>: --my-anchor;\n  <span class=\"hljs-attribute\">position</span>-area: start end;\n}"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_anchor_positioning"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/css-anchor-positioning"
                        },
                        "resources": [
                          {
                            "url": "https://kizu.dev/anchor-positioning-experiments/",
                            "title": "Future CSS: Anchor Positioning\n"
                          },
                          {
                            "url": "https://developer.chrome.com/blog/tether-elements-to-each-other-with-css-anchor-positioning/",
                            "title": "Tether elements to each other with CSS anchor positioning\n"
                          },
                          {
                            "url": "https://css-tricks.com/css-anchor-positioning-guide/",
                            "title": "CSS Anchor Positioning Guide"
                          }
                        ],
                        "webFeature": {
                          "id": "anchor-positioning",
                          "description_html": "Anchor positioning places an element based on the position of another element. For example, you can place a tooltip next to the content it references.",
                          "name": "Anchor positioning",
                          "spec": [
                            "https://drafts.csswg.org/css-anchor-position-1/#anchoring"
                          ],
                          "status": {
                            "baseline": "false",
                            "support": {
                              "chrome": "125",
                              "chrome_android": "125",
                              "edge": "125"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 18,
                      "id": "nth_child_of_s",
                      "percentageQuestion": 28.57,
                      "percentageSurvey": 7.2,
                      "entity": {
                        "name": "`nth-child of S`",
                        "nameHtml": "<code>nth-child of S</code>",
                        "nameClean": "nth-child of S",
                        "description": "Pre-filter a set of child elements before applying `nth-child` to it.\n",
                        "descriptionHtml": "Pre-filter a set of child elements before applying <code>nth-child</code> to it.\n",
                        "descriptionClean": "Pre-filter a set of child elements before applying nth-child to it.",
                        "id": "nth_child_of_s",
                        "entityType": "feature",
                        "example": {
                          "language": "css",
                          "code": ":nth-child(2 of .highlight)\n  border: 2px red solid;\n}\n",
                          "codeHighlighted": "<span class=\"hljs-selector-pseudo\">:nth-child</span>(<span class=\"hljs-number\">2</span> of <span class=\"hljs-selector-class\">.highlight</span>)\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">2px</span> red solid;\n}"
                        },
                        "resources": [
                          {
                            "url": "https://developer.chrome.com/docs/css-ui/css-nth-child-of-s",
                            "title": "More control over :nth-child() selections with the of S syntax\n"
                          }
                        ],
                        "webFeature": {
                          "id": "nth-child-of",
                          "description_html": "The <code>of</code> syntax for the <code>:nth-child()</code> and <code>:nth-last-child()</code> CSS functional pseudo-classes match elements by the relative position of elements, counted from the first or last sibling matching a selector list.",
                          "group": [
                            "selectors"
                          ],
                          "name": ":nth-child() of <selector>",
                          "spec": [
                            "https://drafts.csswg.org/selectors-4/#the-nth-child-pseudo",
                            "https://drafts.csswg.org/selectors-4/#the-nth-last-child-pseudo"
                          ],
                          "status": {
                            "baseline": "low",
                            "baseline_low_date": "2023-05-09",
                            "support": {
                              "chrome": "111",
                              "chrome_android": "111",
                              "edge": "111",
                              "firefox": "113",
                              "firefox_android": "113",
                              "safari": "9",
                              "safari_ios": "9"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 17,
                      "id": "css_shape_function",
                      "percentageQuestion": 26.98,
                      "percentageSurvey": 6.8,
                      "entity": {
                        "name": "`shape()`",
                        "nameHtml": "<code>shape()</code>",
                        "nameClean": "shape()",
                        "id": "css_shape_function",
                        "entityType": "feature",
                        "example": {
                          "language": "css",
                          "code": ".clipped {\n  clip-path: shape(\n    from top left,\n    hline to 100%,\n    vline to 100%,\n    curve to 0% 100% with 50% 0%,\n  );\n}\n",
                          "codeHighlighted": "<span class=\"hljs-selector-class\">.clipped</span> {\n  <span class=\"hljs-attribute\">clip-path</span>: <span class=\"hljs-built_in\">shape</span>(\n    from top left,\n    hline to <span class=\"hljs-number\">100%</span>,\n    vline to <span class=\"hljs-number\">100%</span>,\n    curve to <span class=\"hljs-number\">0%</span> <span class=\"hljs-number\">100%</span> with <span class=\"hljs-number\">50%</span> <span class=\"hljs-number\">0%</span>,\n  );\n}"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/basic-shape/shape"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/mdn-css_types_basic-shape_shape"
                        },
                        "resources": [
                          {
                            "url": "https://css-tricks.com/css-shape-commands/",
                            "title": "CSS shape() Commands"
                          }
                        ]
                      }
                    },
                    {
                      "count": 15,
                      "id": "display_contents",
                      "percentageQuestion": 23.81,
                      "percentageSurvey": 6,
                      "entity": {
                        "name": "`display: contents`",
                        "nameHtml": "<code>display: contents</code>",
                        "nameClean": "display: contents",
                        "id": "display_contents",
                        "entityType": "feature"
                      }
                    },
                    {
                      "count": 15,
                      "id": "if_function",
                      "percentageQuestion": 23.81,
                      "percentageSurvey": 6,
                      "entity": {
                        "name": "`if()`",
                        "nameHtml": "<code>if()</code>",
                        "nameClean": "if()",
                        "id": "if_function",
                        "entityType": "feature",
                        "example": {
                          "language": "css",
                          "code": "div {\n  color: var(--color);\n  background-color: if(style(--color: white): black; else: white);\n}\n",
                          "codeHighlighted": "<span class=\"hljs-selector-tag\">div</span> {\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-built_in\">var</span>(--color);\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">if</span>(<span class=\"hljs-built_in\">style</span>(--color: white): black; else: white);\n}"
                        },
                        "resources": [
                          {
                            "url": "https://chromestatus.com/feature/6313805904347136",
                            "title": "Feature: CSS if() function"
                          },
                          {
                            "url": "https://css-tricks.com/if-css-gets-inline-conditionals/",
                            "title": "“If” CSS Gets Inline Conditionals"
                          }
                        ]
                      }
                    },
                    {
                      "count": 15,
                      "id": "stepped_value_functions",
                      "percentageQuestion": 23.81,
                      "percentageSurvey": 6,
                      "entity": {
                        "name": "Stepped Value Functions",
                        "nameClean": "Stepped Value Functions",
                        "description": "`round()`, `mod()`, `rem()`\n",
                        "descriptionHtml": "<code>round()</code>, <code>mod()</code>, <code>rem()</code>\n",
                        "descriptionClean": "round(), mod(), rem()",
                        "id": "stepped_value_functions",
                        "entityType": "feature",
                        "example": {
                          "language": "css",
                          "code": "div {\n  width: round(var(--width), 50px);\n  line-height: mod(7, 2); /* 1 */\n}\n",
                          "codeHighlighted": "<span class=\"hljs-selector-tag\">div</span> {\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-built_in\">round</span>(<span class=\"hljs-built_in\">var</span>(--width), <span class=\"hljs-number\">50px</span>);\n  <span class=\"hljs-attribute\">line-height</span>: <span class=\"hljs-built_in\">mod</span>(<span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">2</span>); <span class=\"hljs-comment\">/* 1 */</span>\n}"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Values_and_Units/CSS_Value_Functions"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/mdn-css_types_round"
                        },
                        "webFeature": {
                          "id": "round-mod-rem",
                          "description_html": "The <code>round()</code>, <code>mod()</code>, and <code>rem()</code> CSS functions compute rounded values and the remainder after division.",
                          "group": [
                            "css"
                          ],
                          "name": "round(), mod(), and rem()",
                          "spec": [
                            "https://drafts.csswg.org/css-values-4/#round-func"
                          ],
                          "status": {
                            "baseline": "low",
                            "baseline_low_date": "2024-05-17",
                            "support": {
                              "chrome": "125",
                              "chrome_android": "125",
                              "edge": "125",
                              "firefox": "118",
                              "firefox_android": "118",
                              "safari": "15.4",
                              "safari_ios": "15.4"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 14,
                      "id": "light_dark",
                      "percentageQuestion": 22.22,
                      "percentageSurvey": 5.6,
                      "entity": {
                        "name": "`light-dark()`",
                        "nameHtml": "<code>light-dark()</code>",
                        "nameClean": "light-dark()",
                        "id": "light_dark",
                        "entityType": "feature",
                        "example": {
                          "language": "css",
                          "code": "code {\n  color: light-dark(black, white);\n}\n",
                          "codeHighlighted": "<span class=\"hljs-selector-tag\">code</span> {\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-built_in\">light-dark</span>(black, white);\n}"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/light-dark"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/mdn-css_types_color_light-dark"
                        },
                        "webFeature": {
                          "id": "light-dark",
                          "description_html": "The <code>light-dark()</code> CSS function accepts two colors and uses one depending on the current color scheme.",
                          "group": [
                            "css"
                          ],
                          "name": "light-dark()",
                          "spec": [
                            "https://drafts.csswg.org/css-color-5/#light-dark"
                          ],
                          "status": {
                            "baseline": "low",
                            "baseline_low_date": "2024-05-13",
                            "support": {
                              "chrome": "123",
                              "chrome_android": "123",
                              "edge": "123",
                              "firefox": "120",
                              "firefox_android": "120",
                              "safari": "17.5",
                              "safari_ios": "17.5"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 14,
                      "id": "scroll_driven_animations",
                      "percentageQuestion": 22.22,
                      "percentageSurvey": 5.6,
                      "entity": {
                        "name": "Scroll-driven animations",
                        "nameClean": "Scroll-driven animations",
                        "id": "scroll_driven_animations",
                        "entityType": "feature",
                        "example": {
                          "language": "css",
                          "code": "html {\n  scroll-timeline: --page-scroll block;\n}\n\n@keyframes grow-progress {\n  from { transform: scaleX(0); }\n  to { transform: scaleX(1); }\n}\n\n#progress {\n  animation: grow-progress auto linear;\n  animation-timeline: --page-scroll;\n}\n",
                          "codeHighlighted": "<span class=\"hljs-selector-tag\">html</span> {\n  <span class=\"hljs-attribute\">scroll-timeline</span>: --page-scroll block;\n}\n\n<span class=\"hljs-keyword\">@keyframes</span> grow-progress {\n  <span class=\"hljs-selector-tag\">from</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scaleX</span>(<span class=\"hljs-number\">0</span>); }\n  <span class=\"hljs-selector-tag\">to</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scaleX</span>(<span class=\"hljs-number\">1</span>); }\n}\n\n<span class=\"hljs-selector-id\">#progress</span> {\n  <span class=\"hljs-attribute\">animation</span>: grow-progress auto linear;\n  <span class=\"hljs-attribute\">animation-timeline</span>: --page-scroll;\n}"
                        },
                        "mdn": {
                          "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_scroll-driven_animations"
                        },
                        "caniuse": {
                          "url": "https://caniuse.com/mdn-css_properties_animation-timeline"
                        },
                        "resources": [
                          {
                            "url": "https://scroll-driven-animations.style/",
                            "title": "Scroll-driven Animations"
                          },
                          {
                            "url": "https://css-tricks.com/unleash-the-power-of-scroll-driven-animations/",
                            "title": "Unleash the Power of Scroll-Driven Animations"
                          },
                          {
                            "url": "https://developer.chrome.com/docs/css-ui/scroll-driven-animations",
                            "title": "Animate elements on scroll with Scroll-driven animations"
                          }
                        ],
                        "webFeature": {
                          "id": "scroll-driven-animations",
                          "description_html": "The <code>animation-timeline</code>, <code>scroll-timeline</code>, and <code>view-timeline</code> CSS properties advance animations based on the user's scroll position.",
                          "group": [
                            "scrolling",
                            "animation"
                          ],
                          "name": "Scroll-driven animations",
                          "spec": [
                            "https://drafts.csswg.org/scroll-animations-1/"
                          ],
                          "status": {
                            "baseline": "false",
                            "support": {
                              "chrome": "115",
                              "chrome_android": "115",
                              "edge": "115"
                            }
                          }
                        }
                      }
                    },
                    {
                      "count": 250,
                      "id": "cutoff_answers",
                      "percentageQuestion": 396.81,
                      "percentageSurvey": 100
                    },
                    {
                      "count": 187,
                      "id": "no_answer",
                      "percentageQuestion": 0,
                      "percentageSurvey": 74.8
                    },
                    {
                      "count": 153,
                      "id": "overlimit_answers",
                      "percentageQuestion": 242.84,
                      "percentageSurvey": 61.2
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}