{
  "dataAPI": {
    "surveys": {
      "state_of_css": {
        "css2025": {
          "reading_list": {
            "reading_list": {
              "id": "reading_list",
              "combined": {
                "allEditions": [
                  {
                    "_metadata": {
                      "axis1Sort": {
                        "property": "count",
                        "order": "desc"
                      },
                      "limit": 20,
                      "cutoff": 10
                    },
                    "editionId": "css2024",
                    "year": 2024,
                    "completion": {
                      "count": 3299,
                      "percentageSurvey": 33.99,
                      "total": 9706
                    },
                    "buckets": [
                      {
                        "count": 1712,
                        "id": "hanging_punctuation",
                        "index": 0,
                        "percentageQuestion": 51.89,
                        "percentageSurvey": 17.64,
                        "entity": {
                          "name": "`hanging-punctuation`",
                          "nameHtml": "<code>hanging-punctuation</code>",
                          "nameClean": "hanging-punctuation",
                          "id": "hanging_punctuation",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "p.hanging {\n  hanging-punctuation: first last;\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-class\">.hanging</span> {\n  <span class=\"hljs-attribute\">hanging-punctuation</span>: first last;\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/hanging-punctuation"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/css-hanging-punctuation"
                          },
                          "webFeature": {
                            "id": "hanging-punctuation",
                            "description_html": "The <code>hanging-punctuation</code> CSS property puts punctuation characters outside of the box to align the text with the rest of the document.",
                            "name": "Hanging punctuation",
                            "spec": [
                              "https://drafts.csswg.org/css-text-4/#hanging-punctuation-property"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/hanging-punctuation/",
                            "status": {
                              "baseline": "false"
                            }
                          }
                        }
                      },
                      {
                        "count": 1632,
                        "id": "offset_path",
                        "index": 1,
                        "percentageQuestion": 49.47,
                        "percentageSurvey": 16.81,
                        "entity": {
                          "name": "`offset-path`\n",
                          "nameHtml": "<code>offset-path</code>\n",
                          "nameClean": "offset-path",
                          "id": "offset_path",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": ".blueBox {\n  background-color: blue;\n  offset-path: border-box;\n  offset-distance: 5%;\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-class\">.blueBox</span> {\n  <span class=\"hljs-attribute\">background-color</span>: blue;\n  <span class=\"hljs-attribute\">offset-path</span>: border-box;\n  <span class=\"hljs-attribute\">offset-distance</span>: <span class=\"hljs-number\">5%</span>;\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/offset-path"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/css-motion-paths"
                          },
                          "webFeature": {
                            "id": "motion-path",
                            "description_html": "The <code>offset</code> CSS property animates an element along a defined motion path.",
                            "group": [
                              "css"
                            ],
                            "name": "Motion path",
                            "spec": [
                              "https://drafts.fxtf.org/motion-1/"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/motion-path/",
                            "status": {
                              "baseline": "high",
                              "baseline_low_date": "2022-09-12",
                              "support": {
                                "chrome": "55",
                                "chrome_android": "55",
                                "edge": "79",
                                "firefox": "72",
                                "firefox_android": "79",
                                "safari": "16",
                                "safari_ios": "16"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1611,
                        "id": "at_scope",
                        "index": 2,
                        "percentageQuestion": 48.83,
                        "percentageSurvey": 16.6,
                        "entity": {
                          "name": "`@scope`",
                          "nameHtml": "<code>@scope</code>",
                          "nameClean": "@scope",
                          "id": "at_scope",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "@scope (.card) {\n  :scope {\n    padding: 1rem;\n  }\n\n  .title {\n    font-size: 1.2rem;\n  }\n}\n",
                            "codeHighlighted": "<span class=\"hljs-keyword\">@scope</span> (.card) {\n  <span class=\"hljs-selector-pseudo\">:scope</span> {\n    <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">1rem</span>;\n  }\n\n  <span class=\"hljs-selector-class\">.title</span> {\n    <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">1.2rem</span>;\n  }\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@scope"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/css-cascade-scope"
                          },
                          "webFeature": {
                            "id": "scope",
                            "description_html": "The <code>@scope</code> CSS at-rule sets the scope for a group of rules.",
                            "group": [
                              "css"
                            ],
                            "name": "@scope",
                            "spec": [
                              "https://drafts.csswg.org/css-cascade-6/#scope-atrule"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/scope/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "118",
                                "chrome_android": "118",
                                "edge": "118",
                                "safari": "17.4",
                                "safari_ios": "17.4"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1600,
                        "id": "anchor_positioning",
                        "index": 3,
                        "percentageQuestion": 48.5,
                        "percentageSurvey": 16.48,
                        "entity": {
                          "name": "Anchor Positioning",
                          "nameClean": "Anchor Positioning",
                          "id": "anchor_positioning",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": ".anchor {\n  anchor-name: --my-anchor;\n}\n.target {\n  position: absolute;\n  position-anchor: --my-anchor;\n  position-area: start end;\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-class\">.anchor</span> {\n  <span class=\"hljs-attribute\">anchor-name</span>: --my-anchor;\n}\n<span class=\"hljs-selector-class\">.target</span> {\n  <span class=\"hljs-attribute\">position</span>: absolute;\n  <span class=\"hljs-attribute\">position-anchor</span>: --my-anchor;\n  <span class=\"hljs-attribute\">position</span>-area: start end;\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_anchor_positioning"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/css-anchor-positioning"
                          },
                          "resources": [
                            {
                              "url": "https://kizu.dev/anchor-positioning-experiments/",
                              "title": "Future CSS: Anchor Positioning\n"
                            },
                            {
                              "url": "https://developer.chrome.com/blog/tether-elements-to-each-other-with-css-anchor-positioning/",
                              "title": "Tether elements to each other with CSS anchor positioning\n"
                            },
                            {
                              "url": "https://css-tricks.com/css-anchor-positioning-guide/",
                              "title": "CSS Anchor Positioning Guide"
                            }
                          ],
                          "webFeature": {
                            "id": "anchor-positioning",
                            "description_html": "Anchor positioning places an element based on the position of another element. For example, you can place a tooltip next to the content it references.",
                            "name": "Anchor positioning",
                            "spec": [
                              "https://drafts.csswg.org/css-anchor-position-1/#anchoring"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/anchor-positioning/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "125",
                                "chrome_android": "125",
                                "edge": "125"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1563,
                        "id": "view_timeline",
                        "index": 4,
                        "percentageQuestion": 47.38,
                        "percentageSurvey": 16.1,
                        "entity": {
                          "name": "`view-timeline`",
                          "nameHtml": "<code>view-timeline</code>",
                          "nameClean": "view-timeline",
                          "id": "view_timeline",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": ".animation {\n  view-timeline: --subjectReveal block;\n  animation-name: appear;\n  animation-fill-mode: both;\n  animation-duration: 1ms;\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-class\">.animation</span> {\n  <span class=\"hljs-attribute\">view-timeline</span>: --subjectReveal block;\n  <span class=\"hljs-attribute\">animation-name</span>: appear;\n  <span class=\"hljs-attribute\">animation-fill-mode</span>: both;\n  <span class=\"hljs-attribute\">animation-duration</span>: <span class=\"hljs-number\">1ms</span>;\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/view-timeline"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/css-view-timeline"
                          },
                          "webFeature": {
                            "id": "scroll-driven-animations",
                            "description_html": "The <code>animation-timeline</code>, <code>scroll-timeline</code>, and <code>view-timeline</code> CSS properties advance animations based on the user's scroll position.",
                            "group": [
                              "scrolling",
                              "animation"
                            ],
                            "name": "Scroll-driven animations",
                            "spec": [
                              "https://drafts.csswg.org/scroll-animations-1/"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/scroll-driven-animations/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "115",
                                "chrome_android": "115",
                                "edge": "115"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1557,
                        "id": "scroll_timeline",
                        "index": 5,
                        "percentageQuestion": 47.2,
                        "percentageSurvey": 16.04,
                        "entity": {
                          "name": "`scroll-timeline`",
                          "nameHtml": "<code>scroll-timeline</code>",
                          "nameClean": "scroll-timeline",
                          "id": "scroll_timeline",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "#container {\n  height: 300px;\n  overflow-y: scroll;\n  scroll-timeline: --squareTimeline y;\n  position: relative;\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-id\">#container</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">300px</span>;\n  <span class=\"hljs-attribute\">overflow-y</span>: scroll;\n  <span class=\"hljs-attribute\">scroll-timeline</span>: --squareTimeline y;\n  <span class=\"hljs-attribute\">position</span>: relative;\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-timeline"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/css-scroll-timeline"
                          },
                          "webFeature": {
                            "id": "scroll-driven-animations",
                            "description_html": "The <code>animation-timeline</code>, <code>scroll-timeline</code>, and <code>view-timeline</code> CSS properties advance animations based on the user's scroll position.",
                            "group": [
                              "scrolling",
                              "animation"
                            ],
                            "name": "Scroll-driven animations",
                            "spec": [
                              "https://drafts.csswg.org/scroll-animations-1/"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/scroll-driven-animations/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "115",
                                "chrome_android": "115",
                                "edge": "115"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1459,
                        "id": "discrete_properties_animations",
                        "index": 6,
                        "percentageQuestion": 44.23,
                        "percentageSurvey": 15.03,
                        "entity": {
                          "name": "Discrete Properties Animations",
                          "nameClean": "Discrete Properties Animations",
                          "description": "Animate to and from properties such as `display: none`\n",
                          "descriptionHtml": "Animate to and from properties such as <code>display: none</code>\n",
                          "descriptionClean": "Animate to and from properties such as display: none",
                          "id": "discrete_properties_animations",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "/*   IS-OPEN STATE   */\ndialog[open] {\n  translate: 0 0;\n}\n\n/*   EXIT STATE   */\ndialog {\n  transition: opacity 1s, display 1s allow-discrete, overlay 1s allow-discrete;\n  translate: 0 100vh;\n}\n\n/*   0. BEFORE-OPEN STATE   */\n@starting-style {\n  dialog[open] {\n    translate: 0 100vh;\n  }\n}\n",
                            "codeHighlighted": "<span class=\"hljs-comment\">/*   IS-OPEN STATE   */</span>\ndialog<span class=\"hljs-selector-attr\">[open]</span> {\n  <span class=\"hljs-attribute\">translate</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span>;\n}\n\n<span class=\"hljs-comment\">/*   EXIT STATE   */</span>\ndialog {\n  <span class=\"hljs-attribute\">transition</span>: opacity <span class=\"hljs-number\">1s</span>, display <span class=\"hljs-number\">1s</span> allow-discrete, overlay <span class=\"hljs-number\">1s</span> allow-discrete;\n  <span class=\"hljs-attribute\">translate</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">100vh</span>;\n}\n\n<span class=\"hljs-comment\">/*   0. BEFORE-OPEN STATE   */</span>\n<span class=\"hljs-keyword\">@starting-style</span> {\n  dialog<span class=\"hljs-selector-attr\">[open]</span> {\n    <span class=\"hljs-attribute\">translate</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">100vh</span>;\n  }\n}"
                          },
                          "webFeature": {
                            "id": "transition-behavior",
                            "description_html": "The <code>transition-behavior: allow-discrete</code> CSS declaration allows transitions for properties whose animation behavior is discrete. Such properties can't be interpolated and swap from their start value to the end value at 50%.",
                            "group": [
                              "transitions"
                            ],
                            "name": "transition-behavior",
                            "spec": [
                              "https://drafts.csswg.org/css-transitions-2/#transition-behavior-property"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/transition-behavior/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2024-08-06",
                              "support": {
                                "chrome": "117",
                                "chrome_android": "117",
                                "edge": "117",
                                "firefox": "129",
                                "firefox_android": "129",
                                "safari": "17.4",
                                "safari_ios": "17.4"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1416,
                        "id": "image_function",
                        "index": 7,
                        "percentageQuestion": 42.92,
                        "percentageSurvey": 14.59,
                        "entity": {
                          "name": "`image()`",
                          "nameHtml": "<code>image()</code>",
                          "nameClean": "image()",
                          "id": "image_function",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": ".foo {\n  background-image: image(\"myimage.webp#xywh=0,20,40,60\");\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-class\">.foo</span> {\n  <span class=\"hljs-attribute\">background-image</span>: <span class=\"hljs-built_in\">image</span>(<span class=\"hljs-string\">&quot;myimage.webp#xywh=0,20,40,60&quot;</span>);\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/image/image"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/mdn-css_types_image_image"
                          }
                        }
                      },
                      {
                        "count": 1410,
                        "id": "nth_child_of_s",
                        "index": 8,
                        "percentageQuestion": 42.74,
                        "percentageSurvey": 14.53,
                        "entity": {
                          "name": "`nth-child of S`",
                          "nameHtml": "<code>nth-child of S</code>",
                          "nameClean": "nth-child of S",
                          "description": "Pre-filter a set of child elements before applying `nth-child` to it.\n",
                          "descriptionHtml": "Pre-filter a set of child elements before applying <code>nth-child</code> to it.\n",
                          "descriptionClean": "Pre-filter a set of child elements before applying nth-child to it.",
                          "id": "nth_child_of_s",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": ":nth-child(2 of .highlight)\n  border: 2px red solid;\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-pseudo\">:nth-child</span>(<span class=\"hljs-number\">2</span> of <span class=\"hljs-selector-class\">.highlight</span>)\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">2px</span> red solid;\n}"
                          },
                          "resources": [
                            {
                              "url": "https://developer.chrome.com/docs/css-ui/css-nth-child-of-s",
                              "title": "More control over :nth-child() selections with the of S syntax\n"
                            }
                          ],
                          "webFeature": {
                            "id": "nth-child-of",
                            "description_html": "The <code>of</code> syntax for the <code>:nth-child()</code> and <code>:nth-last-child()</code> CSS functional pseudo-classes match elements by the relative position of elements, counted from the first or last sibling matching a selector list.",
                            "group": [
                              "selectors"
                            ],
                            "name": ":nth-child() of <selector>",
                            "spec": [
                              "https://drafts.csswg.org/selectors-4/#the-nth-child-pseudo",
                              "https://drafts.csswg.org/selectors-4/#the-nth-last-child-pseudo"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/nth-child-of/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2023-05-09",
                              "support": {
                                "chrome": "111",
                                "chrome_android": "111",
                                "edge": "111",
                                "firefox": "113",
                                "firefox_android": "113",
                                "safari": "9",
                                "safari_ios": "9"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1377,
                        "id": "light_dark",
                        "index": 9,
                        "percentageQuestion": 41.74,
                        "percentageSurvey": 14.19,
                        "entity": {
                          "name": "`light-dark()`",
                          "nameHtml": "<code>light-dark()</code>",
                          "nameClean": "light-dark()",
                          "id": "light_dark",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "code {\n  color: light-dark(black, white);\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-tag\">code</span> {\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-built_in\">light-dark</span>(black, white);\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/light-dark"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/mdn-css_types_color_light-dark"
                          },
                          "webFeature": {
                            "id": "light-dark",
                            "description_html": "The <code>light-dark()</code> CSS function accepts two colors and uses one depending on the current color scheme.",
                            "group": [
                              "css"
                            ],
                            "name": "light-dark()",
                            "spec": [
                              "https://drafts.csswg.org/css-color-5/#light-dark"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/light-dark/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2024-05-13",
                              "support": {
                                "chrome": "123",
                                "chrome_android": "123",
                                "edge": "123",
                                "firefox": "120",
                                "firefox_android": "120",
                                "safari": "17.5",
                                "safari_ios": "17.5"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1353,
                        "id": "view_transitions",
                        "index": 10,
                        "percentageQuestion": 41.01,
                        "percentageSurvey": 13.94,
                        "entity": {
                          "name": "View Transition API",
                          "nameClean": "View Transition API",
                          "id": "view_transitions",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "::view-transition-old(main-image),\n::view-transition-new(main-image) {\n  transform-origin: right top;\n}\n\n::view-transition-new(main-image) {\n  animation: 400ms ease-out both grow;\n}\n\nfigure {\n  view-transition-name: main-image;\n}\n",
                            "codeHighlighted": "::<span class=\"hljs-built_in\">view-transition-old</span>(main-image),\n::<span class=\"hljs-built_in\">view-transition-new</span>(main-image) {\n  <span class=\"hljs-attribute\">transform-origin</span>: right top;\n}\n\n::<span class=\"hljs-built_in\">view-transition-new</span>(main-image) {\n  <span class=\"hljs-attribute\">animation</span>: <span class=\"hljs-number\">400ms</span> ease-out both grow;\n}\n\n<span class=\"hljs-selector-tag\">figure</span> {\n  <span class=\"hljs-attribute\">view-transition-name</span>: main-image;\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/View_Transition_API"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/mdn-api_viewtransition"
                          },
                          "resources": [
                            {
                              "url": "https://developer.chrome.com/docs/web-platform/view-transitions/",
                              "title": "Smooth and simple transitions with the View Transitions API"
                            }
                          ],
                          "webFeature": {
                            "id": "cross-document-view-transitions",
                            "description_html": "The <code>@view-transition</code> CSS rule sets whether a document opts-in to transitions between documents in a multi-page application. Both the old and new document must opt-in for a transition to be triggered.",
                            "group": [
                              "view-transitions"
                            ],
                            "name": "Cross-document view transitions",
                            "spec": [
                              "https://drafts.csswg.org/css-view-transitions-2/#cross-doc-opt-in"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/cross-document-view-transitions/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "126",
                                "chrome_android": "126",
                                "edge": "126",
                                "safari": "18.2",
                                "safari_ios": "18.2"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1339,
                        "id": "at_container_style",
                        "index": 11,
                        "percentageQuestion": 40.59,
                        "percentageSurvey": 13.8,
                        "entity": {
                          "name": "`@container` style queries\n",
                          "nameHtml": "<code>@container</code> style queries\n",
                          "nameClean": "@container style queries",
                          "id": "at_container_style",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "@container style(--fontColor: green) {\n  /* <stylesheet> */\n}\n",
                            "codeHighlighted": "<span class=\"hljs-keyword\">@container</span> style(<span class=\"hljs-attribute\">--fontColor</span>: green) {\n  <span class=\"hljs-comment\">/* &lt;stylesheet&gt; */</span>\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_containment/Container_size_and_style_queries"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/css-container-queries-style"
                          },
                          "webFeature": {
                            "id": "container-style-queries",
                            "description_html": "Container style queries with the <code>@container</code> at-rule apply styles to an element based on the values of custom properties of its container.",
                            "group": [
                              "container-queries"
                            ],
                            "name": "Container style queries",
                            "spec": [
                              "https://drafts.csswg.org/css-conditional-5/#style-container"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/container-style-queries/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "111",
                                "chrome_android": "111",
                                "edge": "111",
                                "safari": "18",
                                "safari_ios": "18"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1314,
                        "id": "scrollbar_gutter",
                        "index": 12,
                        "percentageQuestion": 39.83,
                        "percentageSurvey": 13.54,
                        "entity": {
                          "name": "`scrollbar-gutter`",
                          "nameHtml": "<code>scrollbar-gutter</code>",
                          "nameClean": "scrollbar-gutter",
                          "id": "scrollbar_gutter",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": ".container {\n  scrollbar-gutter: stable;\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">scrollbar-gutter</span>: stable;\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-gutter"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/mdn-css_properties_scrollbar-gutter"
                          },
                          "webFeature": {
                            "id": "scrollbar-gutter",
                            "description_html": "The <code>scrollbar-gutter</code> CSS property reserves space for the scrollbar, preventing unwanted layout changes as the scrollbar appears and disappears.",
                            "group": [
                              "scrolling"
                            ],
                            "name": "scrollbar-gutter",
                            "spec": [
                              "https://drafts.csswg.org/css-overflow-3/#scrollbar-gutter-property"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/scrollbar-gutter/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2024-12-11",
                              "support": {
                                "chrome": "94",
                                "chrome_android": "94",
                                "edge": "94",
                                "firefox": "97",
                                "firefox_android": "97",
                                "safari": "18.2",
                                "safari_ios": "18.2"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1309,
                        "id": "text_wrap_pretty",
                        "index": 13,
                        "percentageQuestion": 39.68,
                        "percentageSurvey": 13.49,
                        "entity": {
                          "name": "`text-wrap: pretty`",
                          "nameHtml": "<code>text-wrap: pretty</code>",
                          "nameClean": "text-wrap: pretty",
                          "id": "text_wrap_pretty",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": ".pretty {\n  text-wrap: pretty;\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-class\">.pretty</span> {\n  <span class=\"hljs-attribute\">text-wrap</span>: pretty;\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/text-wrap"
                          },
                          "resources": [
                            {
                              "url": "https://developer.chrome.com/blog/css-text-wrap-pretty",
                              "title": "CSS text-wrap: pretty\n"
                            }
                          ],
                          "webFeature": {
                            "id": "text-wrap-pretty",
                            "description_html": "The <code>text-wrap: pretty</code> CSS declaration prioritizes better layout over speed when text is broken into multiple lines.",
                            "group": [
                              "text-wrap"
                            ],
                            "name": "text-wrap: pretty",
                            "spec": [
                              "https://drafts.csswg.org/css-text-4/#valdef-text-wrap-style-pretty"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/text-wrap-pretty/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "117",
                                "chrome_android": "117",
                                "edge": "117"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1269,
                        "id": "initial_letter",
                        "index": 14,
                        "percentageQuestion": 38.47,
                        "percentageSurvey": 13.07,
                        "entity": {
                          "name": "`initial-letter`",
                          "nameHtml": "<code>initial-letter</code>",
                          "nameClean": "initial-letter",
                          "id": "initial_letter",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": ".intro {\n  /* Initial letter occupies 3 lines */\n  initial-letter: 3;\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-class\">.intro</span> {\n  <span class=\"hljs-comment\">/* Initial letter occupies 3 lines */</span>\n  <span class=\"hljs-attribute\">initial-letter</span>: <span class=\"hljs-number\">3</span>;\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/initial-letter"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/css-initial-letter"
                          },
                          "webFeature": {
                            "id": "initial-letter",
                            "description_html": "The <code>initial-letter</code> CSS property sets the number of lines the first letter of an element occupies. You can use the property to make a raised capital or drop cap.",
                            "group": [
                              "css"
                            ],
                            "name": "initial-letter",
                            "spec": [
                              "https://drafts.csswg.org/css-inline-3/#sizing-drop-initials"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/initial-letter/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "110",
                                "chrome_android": "110",
                                "edge": "110"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1262,
                        "id": "overscroll_behavior",
                        "index": 15,
                        "percentageQuestion": 38.25,
                        "percentageSurvey": 13,
                        "entity": {
                          "name": "`overscroll-behavior`",
                          "nameHtml": "<code>overscroll-behavior</code>",
                          "nameClean": "overscroll-behavior",
                          "id": "overscroll_behavior",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": ".foo {\n  height: 200px;\n  overflow: auto;\n  overscroll-behavior-y: contain;\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-class\">.foo</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">200px</span>;\n  <span class=\"hljs-attribute\">overflow</span>: auto;\n  <span class=\"hljs-attribute\">overscroll-behavior-y</span>: contain;\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/css-overscroll-behavior"
                          },
                          "webFeature": {
                            "id": "overscroll-behavior",
                            "description_html": "The <code>overscroll-behavior</code> CSS property disables default scrolling behaviors when the edges of a scrolling area are reached.",
                            "group": [
                              "scrolling"
                            ],
                            "name": "overscroll-behavior",
                            "spec": [
                              "https://drafts.csswg.org/css-overscroll-1/"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/overscroll-behavior/",
                            "status": {
                              "baseline": "high",
                              "baseline_low_date": "2022-09-12",
                              "support": {
                                "chrome": "63",
                                "chrome_android": "63",
                                "edge": "18",
                                "firefox": "59",
                                "firefox_android": "59",
                                "safari": "16",
                                "safari_ios": "16"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1248,
                        "id": "color_function",
                        "index": 16,
                        "percentageQuestion": 37.83,
                        "percentageSurvey": 12.86,
                        "entity": {
                          "name": "`color()`",
                          "nameHtml": "<code>color()</code>",
                          "nameClean": "color()",
                          "id": "color_function",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": ".brightest-green {\n  background: color(display-p3 0 1 0);\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-class\">.brightest-green</span> {\n  <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">color</span>(display-p3 <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">0</span>);\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/css-color-function"
                          },
                          "webFeature": {
                            "id": "color-function",
                            "description_html": "The <code>color()</code> function picks a color from a given color space. Wide gamut color spaces like <code>display-p3</code> allow showing more vibrant and saturated colors than the standard <code>srgb</code> color space.",
                            "group": [
                              "color-types"
                            ],
                            "name": "color()",
                            "spec": [
                              "https://drafts.csswg.org/css-color-4/#color-function"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/color-function/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2023-05-09",
                              "support": {
                                "chrome": "111",
                                "chrome_android": "111",
                                "edge": "111",
                                "firefox": "113",
                                "firefox_android": "113",
                                "safari": "15",
                                "safari_ios": "15"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1199,
                        "id": "image_set",
                        "index": 17,
                        "percentageQuestion": 36.34,
                        "percentageSurvey": 12.35,
                        "entity": {
                          "name": "`image-set()`",
                          "nameHtml": "<code>image-set()</code>",
                          "nameClean": "image-set()",
                          "id": "image_set",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": ".box {\n  background-image: image-set(\n    url(\"small-balloons.jpg\") 1x,\n    url(\"large-balloons.jpg\") 2x);\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-class\">.box</span> {\n  <span class=\"hljs-attribute\">background-image</span>: <span class=\"hljs-built_in\">image-set</span>(\n    <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">&quot;small-balloons.jpg&quot;</span>) <span class=\"hljs-number\">1</span>x,\n    <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">&quot;large-balloons.jpg&quot;</span>) <span class=\"hljs-number\">2</span>x);\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/image/image-set"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/css-image-set"
                          },
                          "webFeature": {
                            "id": "image-set",
                            "description_html": "The <code>image-set()</code> CSS function provides a set of images at different resolutions or pixel densities, which the browser can pick from, depending on the device capabilities.",
                            "group": [
                              "css"
                            ],
                            "name": "image-set()",
                            "spec": [
                              "https://drafts.csswg.org/css-images-4/#image-set-notation"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/image-set/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2023-09-18",
                              "support": {
                                "chrome": "113",
                                "chrome_android": "113",
                                "edge": "113",
                                "firefox": "89",
                                "firefox_android": "89",
                                "safari": "17",
                                "safari_ios": "17"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1169,
                        "id": "at_property",
                        "index": 18,
                        "percentageQuestion": 35.43,
                        "percentageSurvey": 12.04,
                        "entity": {
                          "name": "`@property`",
                          "nameHtml": "<code>@property</code>",
                          "nameClean": "@property",
                          "id": "at_property",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "@property --property-name {\n  syntax: \"<color>\";\n  inherits: false;\n  initial-value: #c0ffee;\n}\n",
                            "codeHighlighted": "<span class=\"hljs-keyword\">@property</span> --property-name {\n  syntax: <span class=\"hljs-string\">&quot;&lt;color&gt;&quot;</span>;\n  inherits: false;\n  initial-value: <span class=\"hljs-number\">#c0ffee</span>;\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@property"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/mdn-css_at-rules_property"
                          },
                          "webFeature": {
                            "id": "registered-custom-properties",
                            "description_html": "The <code>CSS.registerProperty()</code> static method and the <code>@property</code> CSS at-rule register custom properties for which types and behaviors can be defined.",
                            "name": "Registered custom properties",
                            "spec": [
                              "https://drafts.css-houdini.org/css-properties-values-api-1/"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/registered-custom-properties/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2024-07-09",
                              "support": {
                                "chrome": "85",
                                "chrome_android": "85",
                                "edge": "85",
                                "firefox": "128",
                                "firefox_android": "128",
                                "safari": "16.4",
                                "safari_ios": "16.4"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1165,
                        "id": "forced_colors",
                        "index": 19,
                        "percentageQuestion": 35.31,
                        "percentageSurvey": 12,
                        "entity": {
                          "name": "`forced-colors`",
                          "nameHtml": "<code>forced-colors</code>",
                          "nameClean": "forced-colors",
                          "id": "forced_colors",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "@media (forced-colors: active) {\n  .button {\n    border: 2px green solid;\n  }\n}\n",
                            "codeHighlighted": "<span class=\"hljs-keyword\">@media</span> (<span class=\"hljs-attribute\">forced-colors</span>: active) {\n  <span class=\"hljs-selector-class\">.button</span> {\n    <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">2px</span> green solid;\n  }\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/mdn-css_at-rules_media_forced-colors"
                          },
                          "webFeature": {
                            "id": "forced-colors",
                            "description_html": "The <code>forced-colors</code> CSS @media rule detects when a user has chosen to use a forced colors mode, also known as high-contrast mode, and the <code>forced-color-adjust</code> CSS property sets whether forced colors apply to an element.",
                            "group": [
                              "css"
                            ],
                            "name": "Forced colors",
                            "spec": [
                              "https://drafts.csswg.org/mediaqueries-5/#forced-colors",
                              "https://drafts.csswg.org/css-color-adjust-1/#forced-color-adjust-prop"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/forced-colors/",
                            "status": {
                              "baseline": "high",
                              "baseline_low_date": "2022-09-12",
                              "support": {
                                "chrome": "89",
                                "chrome_android": "89",
                                "edge": "79",
                                "firefox": "89",
                                "firefox_android": "89",
                                "safari": "16",
                                "safari_ios": "16"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 6407,
                        "id": "no_answer",
                        "index": 20,
                        "percentageQuestion": 0,
                        "percentageSurvey": 66.01
                      },
                      {
                        "count": 34103,
                        "id": "other_answers",
                        "index": 21,
                        "percentageQuestion": 1033.72,
                        "percentageSurvey": 351.36
                      }
                    ]
                  },
                  {
                    "_metadata": {
                      "axis1Sort": {
                        "property": "count",
                        "order": "desc"
                      },
                      "limit": 20,
                      "cutoff": 10
                    },
                    "editionId": "css2025",
                    "year": 2025,
                    "completion": {
                      "count": 1741,
                      "percentageSurvey": 31.62,
                      "total": 5506
                    },
                    "buckets": [
                      {
                        "count": 881,
                        "id": "target_text_selector",
                        "index": 0,
                        "percentageQuestion": 50.6,
                        "percentageSurvey": 16,
                        "entity": {
                          "name": "`::target-text`",
                          "nameHtml": "<code>::target-text</code>",
                          "nameClean": "::target-text",
                          "description": "The `::target-text` pseudo-element allows you to style text highlighted by a URL text fragment such as `#:~:text=snippet`.\n",
                          "descriptionHtml": "The <code>::target-text</code> pseudo-element allows you to style text highlighted by a URL text fragment such as <code>#:~:text=snippet</code>.\n",
                          "descriptionClean": "The ::target-text pseudo-element allows you to style text highlighted by a URL text fragment such as #:~:text=snippet.",
                          "id": "target_text_selector",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "::target-text {\n  background-color: pink;\n}\n",
                            "codeHighlighted": "::target-text {\n  <span class=\"hljs-attribute\">background-color</span>: pink;\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/::target-text"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/mdn-css_selectors_target-text"
                          },
                          "webFeature": {
                            "id": "target-text",
                            "description_html": "The <code>::target-text</code> pseudo-element allows you to style text highlighted by a URL text fragment such as <code>#:~:text=snippet</code>.",
                            "group": [
                              "text-fragments"
                            ],
                            "name": "::target-text",
                            "spec": [
                              "https://drafts.csswg.org/css-pseudo-4/#selectordef-target-text"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/target-text/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2024-12-11",
                              "support": {
                                "chrome": "89",
                                "chrome_android": "89",
                                "edge": "89",
                                "firefox": "131",
                                "firefox_android": "131",
                                "safari": "18.2",
                                "safari_ios": "18.2"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 868,
                        "id": "calc_size",
                        "index": 1,
                        "percentageQuestion": 49.86,
                        "percentageSurvey": 15.76,
                        "entity": {
                          "name": "`calc-size()`",
                          "nameHtml": "<code>calc-size()</code>",
                          "nameClean": "calc-size()",
                          "id": "calc_size",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": ".element {\n  height: 0;\n  overflow: hidden;\n  transition: height 0.3s;\n}\n\n.element.open {\n  height: calc-size(auto);\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-class\">.element</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">overflow</span>: hidden;\n  <span class=\"hljs-attribute\">transition</span>: height <span class=\"hljs-number\">0.3s</span>;\n}\n\n<span class=\"hljs-selector-class\">.element</span><span class=\"hljs-selector-class\">.open</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-built_in\">calc-size</span>(auto);\n}"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/mdn-css_types_calc-size"
                          },
                          "resources": [
                            {
                              "url": "https://chromestatus.com/feature/5196713071738880",
                              "title": "CSS interpolate-size property and calc-size() function"
                            }
                          ],
                          "webFeature": {
                            "id": "calc-size",
                            "description_html": "The <code>calc-size()</code> CSS function computes mathematical expressions that include <code>height</code> and <code>width</code> keyword values, for example <code>calc-size(fit-content, size / 2)</code>. Not to be confused with the <code>calc()</code> CSS function, which cannot use keyword values.",
                            "group": [
                              "css"
                            ],
                            "name": "calc-size()",
                            "spec": [
                              "https://drafts.csswg.org/css-values-5/#calc-size"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/calc-size/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "129",
                                "chrome_android": "129",
                                "edge": "129"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 810,
                        "id": "field_sizing",
                        "index": 2,
                        "percentageQuestion": 46.52,
                        "percentageSurvey": 14.71,
                        "entity": {
                          "name": "`field-sizing`",
                          "nameHtml": "<code>field-sizing</code>",
                          "nameClean": "field-sizing",
                          "description": "Allows form controls such as `<textarea>` to be sized based on their content.\n",
                          "descriptionHtml": "Allows form controls such as <code>&lt;textarea&gt;</code> to be sized based on their content.\n",
                          "descriptionClean": "Allows form controls such as <textarea> to be sized based on their content.",
                          "id": "field_sizing",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "input,\ntextarea {\n  field-sizing: content;\n  min-width: 50px;\n  max-width: 350px;\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-tag\">input</span>,\n<span class=\"hljs-selector-tag\">textarea</span> {\n  <span class=\"hljs-attribute\">field-sizing</span>: content;\n  <span class=\"hljs-attribute\">min-width</span>: <span class=\"hljs-number\">50px</span>;\n  <span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">350px</span>;\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/field-sizing"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/mdn-css_properties_field-sizing"
                          },
                          "webFeature": {
                            "id": "field-sizing",
                            "description_html": "The <code>field-sizing</code> CSS property allows form controls such as <code>&#x3C;textarea></code> to be sized based on their content.",
                            "group": [
                              "css"
                            ],
                            "name": "field-sizing",
                            "spec": [
                              "https://drafts.csswg.org/css-ui-4/#field-sizing"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/field-sizing/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "123",
                                "chrome_android": "123",
                                "edge": "123"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 809,
                        "id": "offset_path",
                        "index": 3,
                        "percentageQuestion": 46.47,
                        "percentageSurvey": 14.69,
                        "entity": {
                          "name": "`offset-path`\n",
                          "nameHtml": "<code>offset-path</code>\n",
                          "nameClean": "offset-path",
                          "id": "offset_path",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": ".blueBox {\n  background-color: blue;\n  offset-path: border-box;\n  offset-distance: 5%;\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-class\">.blueBox</span> {\n  <span class=\"hljs-attribute\">background-color</span>: blue;\n  <span class=\"hljs-attribute\">offset-path</span>: border-box;\n  <span class=\"hljs-attribute\">offset-distance</span>: <span class=\"hljs-number\">5%</span>;\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/offset-path"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/css-motion-paths"
                          },
                          "webFeature": {
                            "id": "motion-path",
                            "description_html": "The <code>offset</code> CSS property animates an element along a defined motion path.",
                            "group": [
                              "css"
                            ],
                            "name": "Motion path",
                            "spec": [
                              "https://drafts.fxtf.org/motion-1/"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/motion-path/",
                            "status": {
                              "baseline": "high",
                              "baseline_low_date": "2022-09-12",
                              "support": {
                                "chrome": "55",
                                "chrome_android": "55",
                                "edge": "79",
                                "firefox": "72",
                                "firefox_android": "79",
                                "safari": "16",
                                "safari_ios": "16"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 795,
                        "id": "text_box_trim",
                        "index": 4,
                        "percentageQuestion": 45.66,
                        "percentageSurvey": 14.44,
                        "entity": {
                          "name": "`text-box-edge`/`text-box-trim`",
                          "nameHtml": "<code>text-box-edge</code>/<code>text-box-trim</code>",
                          "nameClean": "text-box-edge/text-box-trim",
                          "id": "text_box_trim",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "p {\n  text-box-edge: cap alphabetic;\n  text-box-trim: trim-both;\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-tag\">p</span> {\n  <span class=\"hljs-selector-tag\">text</span>-box-edge: cap alphabetic;\n  <span class=\"hljs-selector-tag\">text</span>-box-trim: trim-both;\n}"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/css-text-box-trim"
                          },
                          "resources": [
                            {
                              "url": "https://medium.com/microsoft-design/leading-trim-the-future-of-digital-typesetting-d082d84b202",
                              "title": "Leading-Trim: The Future of Digital Typesetting"
                            }
                          ]
                        }
                      },
                      {
                        "count": 789,
                        "id": "hanging_punctuation",
                        "index": 5,
                        "percentageQuestion": 45.32,
                        "percentageSurvey": 14.33,
                        "entity": {
                          "name": "`hanging-punctuation`",
                          "nameHtml": "<code>hanging-punctuation</code>",
                          "nameClean": "hanging-punctuation",
                          "id": "hanging_punctuation",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "p.hanging {\n  hanging-punctuation: first last;\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-class\">.hanging</span> {\n  <span class=\"hljs-attribute\">hanging-punctuation</span>: first last;\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/hanging-punctuation"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/css-hanging-punctuation"
                          },
                          "webFeature": {
                            "id": "hanging-punctuation",
                            "description_html": "The <code>hanging-punctuation</code> CSS property puts punctuation characters outside of the box to align the text with the rest of the document.",
                            "name": "Hanging punctuation",
                            "spec": [
                              "https://drafts.csswg.org/css-text-4/#hanging-punctuation-property"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/hanging-punctuation/",
                            "status": {
                              "baseline": "false"
                            }
                          }
                        }
                      },
                      {
                        "count": 783,
                        "id": "at_scope",
                        "index": 6,
                        "percentageQuestion": 44.97,
                        "percentageSurvey": 14.22,
                        "entity": {
                          "name": "`@scope`",
                          "nameHtml": "<code>@scope</code>",
                          "nameClean": "@scope",
                          "id": "at_scope",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "@scope (.card) {\n  :scope {\n    padding: 1rem;\n  }\n\n  .title {\n    font-size: 1.2rem;\n  }\n}\n",
                            "codeHighlighted": "<span class=\"hljs-keyword\">@scope</span> (.card) {\n  <span class=\"hljs-selector-pseudo\">:scope</span> {\n    <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">1rem</span>;\n  }\n\n  <span class=\"hljs-selector-class\">.title</span> {\n    <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">1.2rem</span>;\n  }\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@scope"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/css-cascade-scope"
                          },
                          "webFeature": {
                            "id": "scope",
                            "description_html": "The <code>@scope</code> CSS at-rule sets the scope for a group of rules.",
                            "group": [
                              "css"
                            ],
                            "name": "@scope",
                            "spec": [
                              "https://drafts.csswg.org/css-cascade-6/#scope-atrule"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/scope/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "118",
                                "chrome_android": "118",
                                "edge": "118",
                                "safari": "17.4",
                                "safari_ios": "17.4"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 760,
                        "id": "css_carousels",
                        "index": 7,
                        "percentageQuestion": 43.65,
                        "percentageSurvey": 13.8,
                        "entity": {
                          "name": "CSS Carousels",
                          "nameClean": "CSS Carousels",
                          "id": "css_carousels",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": ".carousel {\n  &::scroll-button(left) {\n    content: \"⬅\" / \"Scroll Left\";\n  }\n  \n  &::scroll-button(right) {\n    content: \"⮕\" / \"Scroll Right\";\n  }\n\n  &::scroll-button(*):focus-visible {\n    outline-offset: 5px;\n  }\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-class\">.carousel</span> {\n  &amp;::<span class=\"hljs-built_in\">scroll-button</span>(left) {\n    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot;⬅&quot;</span> / <span class=\"hljs-string\">&quot;Scroll Left&quot;</span>;\n  }\n  \n  &amp;::<span class=\"hljs-built_in\">scroll-button</span>(right) {\n    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot;⮕&quot;</span> / <span class=\"hljs-string\">&quot;Scroll Right&quot;</span>;\n  }\n\n  &amp;::<span class=\"hljs-built_in\">scroll-button</span>(*):focus-visible {\n    <span class=\"hljs-attribute\">outline-offset</span>: <span class=\"hljs-number\">5px</span>;\n  }\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_overflow/CSS_carousels"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/mdn-css_selectors_scroll-marker"
                          },
                          "resources": [
                            {
                              "url": "https://developer.chrome.com/blog/carousels-with-css",
                              "title": "Carousels with CSS"
                            },
                            {
                              "url": "https://chrome.dev/carousel/",
                              "title": "CSS Carousel Gallery"
                            },
                            {
                              "url": "https://css-tricks.com/css-carousels/",
                              "title": "CSS Carousels"
                            }
                          ],
                          "webFeature": {
                            "id": "scroll-markers",
                            "description_html": "A scroll container can be navigated by activating <code>::scroll-marker</code> pseudo-elements which appear in a generated <code>::scroll-marker-group</code> pseudo-element, either before or after the scroll container.",
                            "group": [
                              "scrolling"
                            ],
                            "name": "Scroll markers",
                            "spec": [
                              "https://drafts.csswg.org/css-overflow-5/#scroll-markers"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/scroll-markers/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "135",
                                "edge": "135"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 757,
                        "id": "scroll_state",
                        "index": 8,
                        "percentageQuestion": 43.48,
                        "percentageSurvey": 13.75,
                        "entity": {
                          "name": "Container scroll-state queries",
                          "nameClean": "Container scroll-state queries",
                          "id": "scroll_state",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "@container scroller scroll-state(scrollable: top) {\n  .back-to-top {\n    translate: 0 0;\n  }\n}\n",
                            "codeHighlighted": "<span class=\"hljs-keyword\">@container</span> scroller scroll-state(<span class=\"hljs-attribute\">scrollable</span>: top) {\n  <span class=\"hljs-selector-class\">.back-to-top</span> {\n    <span class=\"hljs-attribute\">translate</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span>;\n  }\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_conditional_rules/Container_scroll-state_queries"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/mdn-css_at-rules_container_scroll-state_queries"
                          },
                          "webFeature": {
                            "id": "container-scroll-state-queries",
                            "description_html": "Container scroll-state queries with the <code>@container scroll-state(...)</code> at-rule apply styles to an element based on the sticky positioning, snapped, and scrollable state of the container.",
                            "group": [
                              "container-queries"
                            ],
                            "name": "Container scroll-state queries",
                            "spec": [
                              "https://drafts.csswg.org/css-conditional-5/#scroll-state-container"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/container-scroll-state-queries/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "133",
                                "chrome_android": "133",
                                "edge": "133"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 753,
                        "id": "at_function",
                        "index": 9,
                        "percentageQuestion": 43.25,
                        "percentageSurvey": 13.68,
                        "entity": {
                          "name": "`@function`",
                          "nameHtml": "<code>@function</code>",
                          "nameClean": "@function",
                          "description": "The `@function` CSS at-rule defines a custom function that takes CSS values or custom properties as arguments, and returns a CSS value.\n",
                          "descriptionHtml": "The <code>@function</code> CSS at-rule defines a custom function that takes CSS values or custom properties as arguments, and returns a CSS value.\n",
                          "descriptionClean": "The @function CSS at-rule defines a custom function that takes CSS values or custom properties as arguments, and returns a CSS value.",
                          "id": "at_function",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "@function --negate(--value) {\n  result: calc(-1 * var(--value));\n}\n",
                            "codeHighlighted": "<span class=\"hljs-keyword\">@function</span> --negate(--value) {\n  result: <span class=\"hljs-built_in\">calc</span>(-<span class=\"hljs-number\">1</span> * <span class=\"hljs-built_in\">var</span>(--value));\n}"
                          },
                          "resources": [
                            {
                              "url": "https://css-tricks.com/functions-in-css/",
                              "title": "Functions in CSS?!"
                            },
                            {
                              "url": "https://www.bram.us/2025/02/09/css-custom-functions-teaser/",
                              "title": "CSS Custom Functions are coming … and they are going to be a game changer!"
                            }
                          ],
                          "webFeature": {
                            "id": "function",
                            "description_html": "The <code>@function</code> CSS at-rule defines a custom function that takes CSS values or custom properties as arguments, and returns a CSS value. It can be based on conditional logic such as by using the <code>@media</code> at-rule.",
                            "group": [
                              "css"
                            ],
                            "name": "@function",
                            "spec": [
                              "https://drafts.csswg.org/css-mixins-1/#function-rule"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/function/",
                            "status": {
                              "baseline": "false"
                            }
                          }
                        }
                      },
                      {
                        "count": 745,
                        "id": "sibling_index",
                        "index": 10,
                        "percentageQuestion": 42.79,
                        "percentageSurvey": 13.53,
                        "entity": {
                          "name": "`sibling-index()`",
                          "nameHtml": "<code>sibling-index()</code>",
                          "nameClean": "sibling-index()",
                          "id": "sibling_index",
                          "entityType": "feature",
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/sibling-index"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/mdn-css_types_sibling-index"
                          },
                          "resources": [
                            {
                              "url": "https://www.w3.org/TR/css-values-5/#tree-counting",
                              "title": "Tree Counting Functions: the sibling-count() and sibling-index() notations"
                            },
                            {
                              "url": "https://nerdy.dev/sibling-index",
                              "title": "Let the stagger experiments begin"
                            }
                          ],
                          "webFeature": {
                            "id": "sibling-count",
                            "description_html": "The <code>sibling-count()</code> and <code>sibling-index()</code> CSS functions return integers that are useful to style elements based on their positions among siblings or on the number of siblings, for example as part of a <code>calc()</code> expression.",
                            "group": [
                              "css"
                            ],
                            "name": "sibling-count() and sibling-index()",
                            "spec": [
                              "https://drafts.csswg.org/css-values-5/#tree-counting"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/sibling-count/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "138",
                                "chrome_android": "138",
                                "edge": "138"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 713,
                        "id": "if_function",
                        "index": 11,
                        "percentageQuestion": 40.95,
                        "percentageSurvey": 12.95,
                        "entity": {
                          "name": "`if()`",
                          "nameHtml": "<code>if()</code>",
                          "nameClean": "if()",
                          "description": "The `if()` CSS function is an inline conditional value that returns a value based on a set of conditions.\n",
                          "descriptionHtml": "The <code>if()</code> CSS function is an inline conditional value that returns a value based on a set of conditions.\n",
                          "descriptionClean": "The if() CSS function is an inline conditional value that returns a value based on a set of conditions.",
                          "id": "if_function",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "div {\n  color: var(--color);\n  background-color: if(style(--color: white): black; else: white);\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-tag\">div</span> {\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-built_in\">var</span>(--color);\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">if</span>(<span class=\"hljs-built_in\">style</span>(--color: white): black; else: white);\n}"
                          },
                          "resources": [
                            {
                              "url": "https://chromestatus.com/feature/6313805904347136",
                              "title": "Feature: CSS if() function"
                            },
                            {
                              "url": "https://css-tricks.com/if-css-gets-inline-conditionals/",
                              "title": "“If” CSS Gets Inline Conditionals"
                            }
                          ],
                          "webFeature": {
                            "id": "if",
                            "description_html": "The <code>if()</code> CSS function is an inline conditional value that returns a value based on a set of conditions.",
                            "group": [
                              "css"
                            ],
                            "name": "if()",
                            "spec": [
                              "https://drafts.csswg.org/css-values-5/#if-notation"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/if/",
                            "status": {
                              "baseline": "false"
                            }
                          }
                        }
                      },
                      {
                        "count": 689,
                        "id": "sibling_count",
                        "index": 12,
                        "percentageQuestion": 39.57,
                        "percentageSurvey": 12.51,
                        "entity": {
                          "name": "`sibling-count()`",
                          "nameHtml": "<code>sibling-count()</code>",
                          "nameClean": "sibling-count()",
                          "id": "sibling_count",
                          "entityType": "feature",
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/sibling-count"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/mdn-css_types_sibling-count"
                          },
                          "resources": [
                            {
                              "url": "https://www.w3.org/TR/css-values-5/#tree-counting",
                              "title": "Tree Counting Functions: the sibling-count() and sibling-index() notations"
                            }
                          ],
                          "webFeature": {
                            "id": "sibling-count",
                            "description_html": "The <code>sibling-count()</code> and <code>sibling-index()</code> CSS functions return integers that are useful to style elements based on their positions among siblings or on the number of siblings, for example as part of a <code>calc()</code> expression.",
                            "group": [
                              "css"
                            ],
                            "name": "sibling-count() and sibling-index()",
                            "spec": [
                              "https://drafts.csswg.org/css-values-5/#tree-counting"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/sibling-count/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "138",
                                "chrome_android": "138",
                                "edge": "138"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 669,
                        "id": "anchor_positioning",
                        "index": 13,
                        "percentageQuestion": 38.43,
                        "percentageSurvey": 12.15,
                        "entity": {
                          "name": "Anchor Positioning",
                          "nameClean": "Anchor Positioning",
                          "id": "anchor_positioning",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": ".anchor {\n  anchor-name: --my-anchor;\n}\n.target {\n  position: absolute;\n  position-anchor: --my-anchor;\n  position-area: start end;\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-class\">.anchor</span> {\n  <span class=\"hljs-attribute\">anchor-name</span>: --my-anchor;\n}\n<span class=\"hljs-selector-class\">.target</span> {\n  <span class=\"hljs-attribute\">position</span>: absolute;\n  <span class=\"hljs-attribute\">position-anchor</span>: --my-anchor;\n  <span class=\"hljs-attribute\">position</span>-area: start end;\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_anchor_positioning"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/css-anchor-positioning"
                          },
                          "resources": [
                            {
                              "url": "https://kizu.dev/anchor-positioning-experiments/",
                              "title": "Future CSS: Anchor Positioning\n"
                            },
                            {
                              "url": "https://developer.chrome.com/blog/tether-elements-to-each-other-with-css-anchor-positioning/",
                              "title": "Tether elements to each other with CSS anchor positioning\n"
                            },
                            {
                              "url": "https://css-tricks.com/css-anchor-positioning-guide/",
                              "title": "CSS Anchor Positioning Guide"
                            }
                          ],
                          "webFeature": {
                            "id": "anchor-positioning",
                            "description_html": "Anchor positioning places an element based on the position of another element. For example, you can place a tooltip next to the content it references.",
                            "name": "Anchor positioning",
                            "spec": [
                              "https://drafts.csswg.org/css-anchor-position-1/#anchoring"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/anchor-positioning/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "125",
                                "chrome_android": "125",
                                "edge": "125"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 652,
                        "id": "display_contents",
                        "index": 14,
                        "percentageQuestion": 37.45,
                        "percentageSurvey": 11.84,
                        "entity": {
                          "name": "`display: contents`",
                          "nameHtml": "<code>display: contents</code>",
                          "nameClean": "display: contents",
                          "description": "Sets an element to display only its contents, not itself.\n",
                          "descriptionClean": "Sets an element to display only its contents, not itself.\n",
                          "id": "display_contents",
                          "entityType": "feature",
                          "webFeature": {
                            "id": "display-contents",
                            "description_html": "The <code>display: contents</code> CSS declaration sets an element to display only its contents, not itself.",
                            "group": [
                              "css"
                            ],
                            "name": "display: contents",
                            "spec": [
                              "https://drafts.csswg.org/css-display-3/#box-generation"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/display-contents/",
                            "status": {
                              "baseline": "false"
                            }
                          }
                        }
                      },
                      {
                        "count": 649,
                        "id": "discrete_properties_animations",
                        "index": 15,
                        "percentageQuestion": 37.28,
                        "percentageSurvey": 11.79,
                        "entity": {
                          "name": "Discrete Properties Animations",
                          "nameClean": "Discrete Properties Animations",
                          "description": "Animate to and from properties such as `display: none`\n",
                          "descriptionHtml": "Animate to and from properties such as <code>display: none</code>\n",
                          "descriptionClean": "Animate to and from properties such as display: none",
                          "id": "discrete_properties_animations",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "/*   IS-OPEN STATE   */\ndialog[open] {\n  translate: 0 0;\n}\n\n/*   EXIT STATE   */\ndialog {\n  transition: opacity 1s, display 1s allow-discrete, overlay 1s allow-discrete;\n  translate: 0 100vh;\n}\n\n/*   0. BEFORE-OPEN STATE   */\n@starting-style {\n  dialog[open] {\n    translate: 0 100vh;\n  }\n}\n",
                            "codeHighlighted": "<span class=\"hljs-comment\">/*   IS-OPEN STATE   */</span>\ndialog<span class=\"hljs-selector-attr\">[open]</span> {\n  <span class=\"hljs-attribute\">translate</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span>;\n}\n\n<span class=\"hljs-comment\">/*   EXIT STATE   */</span>\ndialog {\n  <span class=\"hljs-attribute\">transition</span>: opacity <span class=\"hljs-number\">1s</span>, display <span class=\"hljs-number\">1s</span> allow-discrete, overlay <span class=\"hljs-number\">1s</span> allow-discrete;\n  <span class=\"hljs-attribute\">translate</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">100vh</span>;\n}\n\n<span class=\"hljs-comment\">/*   0. BEFORE-OPEN STATE   */</span>\n<span class=\"hljs-keyword\">@starting-style</span> {\n  dialog<span class=\"hljs-selector-attr\">[open]</span> {\n    <span class=\"hljs-attribute\">translate</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">100vh</span>;\n  }\n}"
                          },
                          "webFeature": {
                            "id": "transition-behavior",
                            "description_html": "The <code>transition-behavior: allow-discrete</code> CSS declaration allows transitions for properties whose animation behavior is discrete. Such properties can't be interpolated and swap from their start value to the end value at 50%.",
                            "group": [
                              "transitions"
                            ],
                            "name": "transition-behavior",
                            "spec": [
                              "https://drafts.csswg.org/css-transitions-2/#transition-behavior-property"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/transition-behavior/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2024-08-06",
                              "support": {
                                "chrome": "117",
                                "chrome_android": "117",
                                "edge": "117",
                                "firefox": "129",
                                "firefox_android": "129",
                                "safari": "17.4",
                                "safari_ios": "17.4"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 631,
                        "id": "at_container_style",
                        "index": 16,
                        "percentageQuestion": 36.24,
                        "percentageSurvey": 11.46,
                        "entity": {
                          "name": "`@container` style queries\n",
                          "nameHtml": "<code>@container</code> style queries\n",
                          "nameClean": "@container style queries",
                          "id": "at_container_style",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "@container style(--fontColor: green) {\n  /* <stylesheet> */\n}\n",
                            "codeHighlighted": "<span class=\"hljs-keyword\">@container</span> style(<span class=\"hljs-attribute\">--fontColor</span>: green) {\n  <span class=\"hljs-comment\">/* &lt;stylesheet&gt; */</span>\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_containment/Container_size_and_style_queries"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/css-container-queries-style"
                          },
                          "webFeature": {
                            "id": "container-style-queries",
                            "description_html": "Container style queries with the <code>@container</code> at-rule apply styles to an element based on the values of custom properties of its container.",
                            "group": [
                              "container-queries"
                            ],
                            "name": "Container style queries",
                            "spec": [
                              "https://drafts.csswg.org/css-conditional-5/#style-container"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/container-style-queries/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "111",
                                "chrome_android": "111",
                                "edge": "111",
                                "safari": "18",
                                "safari_ios": "18"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 619,
                        "id": "advanced_attr_function",
                        "index": 17,
                        "percentageQuestion": 35.55,
                        "percentageSurvey": 11.24,
                        "entity": {
                          "name": "Advanced `attr()`",
                          "nameHtml": "Advanced <code>attr()</code>",
                          "nameClean": "Advanced attr()",
                          "description": "Support for properties other than content",
                          "descriptionClean": "Support for properties other than content",
                          "id": "advanced_attr_function",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": ".title {\n  background-color: attr(data-color type(<color>));\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-class\">.title</span> {\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">attr</span>(data-color <span class=\"hljs-built_in\">type</span>(&lt;color&gt;));\n}"
                          },
                          "resources": [
                            {
                              "url": "https://una.im/advanced-attr/",
                              "title": "New capabilities for attr()"
                            },
                            {
                              "url": "https://ishadeed.com/article/modern-attr/",
                              "title": "First Look at The Modern attr()"
                            }
                          ],
                          "webFeature": {
                            "id": "attr",
                            "description_html": "The <code>attr()</code> CSS function, in the context of any property, returns the value of an attribute of an HTML element, with the option to return it as a specific type or unit. You can set a default value for missing or invalid attributes.",
                            "group": [
                              "css"
                            ],
                            "name": "attr()",
                            "spec": [
                              "https://drafts.csswg.org/css-values-5/#attr-notation"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/attr/",
                            "status": {
                              "baseline": "false"
                            }
                          }
                        }
                      },
                      {
                        "count": 615,
                        "id": "nth_child_of_s",
                        "index": 18,
                        "percentageQuestion": 35.32,
                        "percentageSurvey": 11.17,
                        "entity": {
                          "name": "`nth-child of S`",
                          "nameHtml": "<code>nth-child of S</code>",
                          "nameClean": "nth-child of S",
                          "description": "Pre-filter a set of child elements before applying `nth-child` to it.\n",
                          "descriptionHtml": "Pre-filter a set of child elements before applying <code>nth-child</code> to it.\n",
                          "descriptionClean": "Pre-filter a set of child elements before applying nth-child to it.",
                          "id": "nth_child_of_s",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": ":nth-child(2 of .highlight)\n  border: 2px red solid;\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-pseudo\">:nth-child</span>(<span class=\"hljs-number\">2</span> of <span class=\"hljs-selector-class\">.highlight</span>)\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">2px</span> red solid;\n}"
                          },
                          "resources": [
                            {
                              "url": "https://developer.chrome.com/docs/css-ui/css-nth-child-of-s",
                              "title": "More control over :nth-child() selections with the of S syntax\n"
                            }
                          ],
                          "webFeature": {
                            "id": "nth-child-of",
                            "description_html": "The <code>of</code> syntax for the <code>:nth-child()</code> and <code>:nth-last-child()</code> CSS functional pseudo-classes match elements by the relative position of elements, counted from the first or last sibling matching a selector list.",
                            "group": [
                              "selectors"
                            ],
                            "name": ":nth-child() of <selector>",
                            "spec": [
                              "https://drafts.csswg.org/selectors-4/#the-nth-child-pseudo",
                              "https://drafts.csswg.org/selectors-4/#the-nth-last-child-pseudo"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/nth-child-of/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2023-05-09",
                              "support": {
                                "chrome": "111",
                                "chrome_android": "111",
                                "edge": "111",
                                "firefox": "113",
                                "firefox_android": "113",
                                "safari": "9",
                                "safari_ios": "9"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 604,
                        "id": "scroll_driven_animations",
                        "index": 19,
                        "percentageQuestion": 34.69,
                        "percentageSurvey": 10.97,
                        "entity": {
                          "name": "Scroll-driven animations",
                          "nameClean": "Scroll-driven animations",
                          "id": "scroll_driven_animations",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "html {\n  scroll-timeline: --page-scroll block;\n}\n\n@keyframes grow-progress {\n  from { transform: scaleX(0); }\n  to { transform: scaleX(1); }\n}\n\n#progress {\n  animation: grow-progress auto linear;\n  animation-timeline: --page-scroll;\n}\n",
                            "codeHighlighted": "<span class=\"hljs-selector-tag\">html</span> {\n  <span class=\"hljs-attribute\">scroll-timeline</span>: --page-scroll block;\n}\n\n<span class=\"hljs-keyword\">@keyframes</span> grow-progress {\n  <span class=\"hljs-selector-tag\">from</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scaleX</span>(<span class=\"hljs-number\">0</span>); }\n  <span class=\"hljs-selector-tag\">to</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scaleX</span>(<span class=\"hljs-number\">1</span>); }\n}\n\n<span class=\"hljs-selector-id\">#progress</span> {\n  <span class=\"hljs-attribute\">animation</span>: grow-progress auto linear;\n  <span class=\"hljs-attribute\">animation-timeline</span>: --page-scroll;\n}"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_scroll-driven_animations"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/mdn-css_properties_animation-timeline"
                          },
                          "resources": [
                            {
                              "url": "https://scroll-driven-animations.style/",
                              "title": "Scroll-driven Animations"
                            },
                            {
                              "url": "https://css-tricks.com/unleash-the-power-of-scroll-driven-animations/",
                              "title": "Unleash the Power of Scroll-Driven Animations"
                            },
                            {
                              "url": "https://developer.chrome.com/docs/css-ui/scroll-driven-animations",
                              "title": "Animate elements on scroll with Scroll-driven animations"
                            }
                          ],
                          "webFeature": {
                            "id": "scroll-driven-animations",
                            "description_html": "The <code>animation-timeline</code>, <code>scroll-timeline</code>, and <code>view-timeline</code> CSS properties advance animations based on the user's scroll position.",
                            "group": [
                              "scrolling",
                              "animation"
                            ],
                            "name": "Scroll-driven animations",
                            "spec": [
                              "https://drafts.csswg.org/scroll-animations-1/"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/scroll-driven-animations/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "115",
                                "chrome_android": "115",
                                "edge": "115"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 3765,
                        "id": "no_answer",
                        "index": 20,
                        "percentageQuestion": 0,
                        "percentageSurvey": 68.38
                      },
                      {
                        "count": 17915,
                        "id": "other_answers",
                        "index": 21,
                        "percentageQuestion": 1029.02,
                        "percentageSurvey": 325.38
                      }
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    }
  }
}