{
  "dataAPI": {
    "surveys": {
      "state_of_css": {
        "css2025": {
          "interactions": {
            "interactions_ratios": [
              {
                "id": "scroll_snap",
                "entity": {
                  "name": "Scroll Snap",
                  "nameClean": "Scroll Snap",
                  "entityType": "feature",
                  "description": "`scroll-snap-type`, `scroll-snap-align`, `scroll-padding`…\n",
                  "descriptionClean": "scroll-snap-type, scroll-snap-align, scroll-padding…",
                  "descriptionHtml": "<code>scroll-snap-type</code>, <code>scroll-snap-align</code>, <code>scroll-padding</code>…\n",
                  "caniuse": {
                    "name": "css-snappoints",
                    "url": "https://caniuse.com/css-snappoints"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_scroll_snap",
                    "title": "CSS scroll snap",
                    "summary": "The CSS scroll snap module provides properties that let you control the panning and scrolling behavior by defining snap positions. Content can be snapped into position as the user scrolls overflowing content within a scroll container, providing paging and scroll positioning."
                  },
                  "example": {
                    "language": "css",
                    "code": ".scroller {\n  height: 300px;\n  overflow-y: scroll;\n  scroll-snap-type: y mandatory;\n}\n\n.scroller section {\n  scroll-snap-align: start;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.scroller</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">300px</span>;\n  <span class=\"hljs-attribute\">overflow-y</span>: scroll;\n  <span class=\"hljs-attribute\">scroll-snap-type</span>: y mandatory;\n}\n\n<span class=\"hljs-selector-class\">.scroller</span> <span class=\"hljs-selector-tag\">section</span> {\n  <span class=\"hljs-attribute\">scroll-snap-align</span>: start;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.69,
                        "interest": 0.92,
                        "usage": 0.39,
                        "retention": 0.88,
                        "positivity": 0.41,
                        "positivityRelative": 0.92,
                        "appreciation": -0.04
                      },
                      "completion": {
                        "count": 7766,
                        "percentageSurvey": 80.01,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 1,
                        "interest": 0,
                        "usage": 0.6,
                        "retention": 1,
                        "positivity": 0.28,
                        "positivityRelative": 1,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 81,
                        "percentageSurvey": 86.17,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "overscroll_behavior",
                "entity": {
                  "name": "`overscroll-behavior`",
                  "nameClean": "overscroll-behavior",
                  "nameHtml": "<code>overscroll-behavior</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-overscroll-behavior",
                    "url": "https://caniuse.com/css-overscroll-behavior"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior",
                    "title": "overscroll-behavior",
                    "summary": "The overscroll-behavior CSS property sets what a browser does when reaching the boundary of a scrolling area."
                  },
                  "example": {
                    "language": "css",
                    "code": ".foo {\n  height: 200px;\n  overflow: auto;\n  overscroll-behavior-y: contain;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.foo</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">200px</span>;\n  <span class=\"hljs-attribute\">overflow</span>: auto;\n  <span class=\"hljs-attribute\">overscroll-behavior-y</span>: contain;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.51,
                        "interest": 0.94,
                        "usage": 0.28,
                        "retention": 0.94,
                        "positivity": 0.38,
                        "positivityRelative": 0.95,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 7753,
                        "percentageSurvey": 79.88,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.75,
                        "interest": 0,
                        "usage": 0.39,
                        "retention": 1,
                        "positivity": 0.17,
                        "positivityRelative": 1,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 81,
                        "percentageSurvey": 86.17,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "scroll_behavior",
                "entity": {
                  "name": "`scroll-behavior`",
                  "nameClean": "scroll-behavior",
                  "nameHtml": "<code>scroll-behavior</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-scroll-behavior",
                    "url": "https://caniuse.com/css-scroll-behavior"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior",
                    "title": "scroll-behavior",
                    "summary": "The scroll-behavior CSS property sets the behavior for a scrolling box when scrolling is triggered by the navigation or CSSOM scrolling APIs."
                  },
                  "example": {
                    "language": "css",
                    "code": ".foo {\n  scroll-behavior: auto;\n  scroll-behavior: smooth;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.foo</span> {\n  <span class=\"hljs-attribute\">scroll-behavior</span>: auto;\n  <span class=\"hljs-attribute\">scroll-behavior</span>: smooth;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.85,
                        "interest": 0.9,
                        "usage": 0.67,
                        "retention": 0.95,
                        "positivity": 0.39,
                        "positivityRelative": 0.94,
                        "appreciation": 0.05
                      },
                      "completion": {
                        "count": 7744,
                        "percentageSurvey": 79.79,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 1,
                        "interest": 0,
                        "usage": 0.82,
                        "retention": 1,
                        "positivity": 0.32,
                        "positivityRelative": 1,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 80,
                        "percentageSurvey": 85.11,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "scrollbar_gutter",
                "entity": {
                  "name": "`scrollbar-gutter`",
                  "nameClean": "scrollbar-gutter",
                  "nameHtml": "<code>scrollbar-gutter</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_properties_scrollbar-gutter",
                    "url": "https://caniuse.com/mdn-css_properties_scrollbar-gutter"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-gutter",
                    "title": "scrollbar-gutter",
                    "summary": "The scrollbar-gutter CSS property allows authors to reserve space for the scrollbar, preventing unwanted layout changes as the content grows while also avoiding unnecessary visuals when scrolling isn't needed."
                  },
                  "example": {
                    "language": "css",
                    "code": ".container {\n  scrollbar-gutter: stable;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">scrollbar-gutter</span>: stable;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.39,
                        "interest": 0.91,
                        "usage": 0.19,
                        "retention": 0.82,
                        "positivity": 0.34,
                        "positivityRelative": 0.9,
                        "appreciation": -0.09
                      },
                      "completion": {
                        "count": 7739,
                        "percentageSurvey": 79.73,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.61,
                        "interest": 0,
                        "usage": 0.35,
                        "retention": 0,
                        "positivity": 0.13,
                        "positivityRelative": 1,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 81,
                        "percentageSurvey": 86.17,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "view_transitions",
                "entity": {
                  "name": "View Transition API",
                  "nameClean": "View Transition API",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-api_viewtransition",
                    "url": "https://caniuse.com/mdn-api_viewtransition"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/View_Transition_API",
                    "title": "View Transition API",
                    "summary": "The View Transition API provides a mechanism for easily creating animated transitions between different website views. This includes animating between DOM states in a single-page app (SPA), and animating the navigation between documents in a multi-page app (MPA)."
                  },
                  "example": {
                    "language": "css",
                    "code": "::view-transition-old(main-image),\n::view-transition-new(main-image) {\n  transform-origin: right top;\n}\n\n::view-transition-new(main-image) {\n  animation: 400ms ease-out both grow;\n}\n\nfigure {\n  view-transition-name: main-image;\n}\n",
                    "codeHighlighted": "::<span class=\"hljs-built_in\">view-transition-old</span>(main-image),\n::<span class=\"hljs-built_in\">view-transition-new</span>(main-image) {\n  <span class=\"hljs-attribute\">transform-origin</span>: right top;\n}\n\n::<span class=\"hljs-built_in\">view-transition-new</span>(main-image) {\n  <span class=\"hljs-attribute\">animation</span>: <span class=\"hljs-number\">400ms</span> ease-out both grow;\n}\n\n<span class=\"hljs-selector-tag\">figure</span> {\n  <span class=\"hljs-attribute\">view-transition-name</span>: main-image;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.53,
                        "interest": 0.95,
                        "usage": 0.11,
                        "retention": 0.86,
                        "positivity": 0.41,
                        "positivityRelative": 0.93,
                        "appreciation": -0.09
                      },
                      "completion": {
                        "count": 7743,
                        "percentageSurvey": 79.78,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.86,
                        "interest": 1,
                        "usage": 0.44,
                        "retention": 0,
                        "positivity": 0.19,
                        "positivityRelative": 1,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 81,
                        "percentageSurvey": 86.17,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "scroll_driven_animations",
                "entity": {
                  "name": "Scroll-driven animations",
                  "nameClean": "Scroll-driven animations",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_properties_animation-timeline",
                    "url": "https://caniuse.com/mdn-css_properties_animation-timeline"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_scroll-driven_animations",
                    "title": "CSS scroll-driven animations",
                    "summary": "The CSS scroll-driven animations module provides functionality that builds on top of the CSS animations module and Web Animations API. It allows you to animate property values based on a progression along a scroll-based timeline instead of the default time-based document timeline. This means that you can animate an element by scrolling a scrollable element, rather than just by the passing of time."
                  },
                  "example": {
                    "language": "css",
                    "code": "html {\n  scroll-timeline: --page-scroll block;\n}\n\n@keyframes grow-progress {\n  from { transform: scaleX(0); }\n  to { transform: scaleX(1); }\n}\n\n#progress {\n  animation: grow-progress auto linear;\n  animation-timeline: --page-scroll;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">html</span> {\n  <span class=\"hljs-attribute\">scroll-timeline</span>: --page-scroll block;\n}\n\n<span class=\"hljs-keyword\">@keyframes</span> grow-progress {\n  <span class=\"hljs-selector-tag\">from</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scaleX</span>(<span class=\"hljs-number\">0</span>); }\n  <span class=\"hljs-selector-tag\">to</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scaleX</span>(<span class=\"hljs-number\">1</span>); }\n}\n\n<span class=\"hljs-selector-id\">#progress</span> {\n  <span class=\"hljs-attribute\">animation</span>: grow-progress auto linear;\n  <span class=\"hljs-attribute\">animation-timeline</span>: --page-scroll;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.87,
                        "interest": 0,
                        "usage": 0.28,
                        "retention": 1,
                        "positivity": 0.14,
                        "positivityRelative": 1,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 81,
                        "percentageSurvey": 86.17,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "discrete_properties_animations",
                "entity": {
                  "name": "Discrete Properties Animations",
                  "nameClean": "Discrete Properties Animations",
                  "entityType": "feature",
                  "description": "Animate to and from properties such as `display: none`\n",
                  "descriptionClean": "Animate to and from properties such as display: none",
                  "descriptionHtml": "Animate to and from properties such as <code>display: none</code>\n",
                  "example": {
                    "language": "css",
                    "code": "/*   IS-OPEN STATE   */\ndialog[open] {\n  translate: 0 0;\n}\n\n/*   EXIT STATE   */\ndialog {\n  transition: opacity 1s, display 1s allow-discrete, overlay 1s allow-discrete;\n  translate: 0 100vh;\n}\n\n/*   0. BEFORE-OPEN STATE   */\n@starting-style {\n  dialog[open] {\n    translate: 0 100vh;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-comment\">/*   IS-OPEN STATE   */</span>\ndialog<span class=\"hljs-selector-attr\">[open]</span> {\n  <span class=\"hljs-attribute\">translate</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span>;\n}\n\n<span class=\"hljs-comment\">/*   EXIT STATE   */</span>\ndialog {\n  <span class=\"hljs-attribute\">transition</span>: opacity <span class=\"hljs-number\">1s</span>, display <span class=\"hljs-number\">1s</span> allow-discrete, overlay <span class=\"hljs-number\">1s</span> allow-discrete;\n  <span class=\"hljs-attribute\">translate</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">100vh</span>;\n}\n\n<span class=\"hljs-comment\">/*   0. BEFORE-OPEN STATE   */</span>\n<span class=\"hljs-keyword\">@starting-style</span> {\n  dialog<span class=\"hljs-selector-attr\">[open]</span> {\n    <span class=\"hljs-attribute\">translate</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">100vh</span>;\n  }\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.43,
                        "interest": 0.98,
                        "usage": 0.09,
                        "retention": 0.93,
                        "positivity": 0.44,
                        "positivityRelative": 0.96,
                        "appreciation": -0.05
                      },
                      "completion": {
                        "count": 7726,
                        "percentageSurvey": 79.6,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.74,
                        "interest": 1,
                        "usage": 0.38,
                        "retention": 1,
                        "positivity": 0.37,
                        "positivityRelative": 1,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 81,
                        "percentageSurvey": 86.17,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "scroll_state",
                "entity": {
                  "name": "Container scroll-state queries",
                  "nameClean": "Container scroll-state queries",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_at-rules_container_scroll-state_queries",
                    "url": "https://caniuse.com/mdn-css_at-rules_container_scroll-state_queries"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_conditional_rules/Container_scroll-state_queries",
                    "title": "Using container scroll-state queries",
                    "summary": "Container scroll-state queries are a type of container query. Rather than selectively applying styles to descendant elements based on the container's size, scroll-state queries allow you to selectively apply styles to descendant elements based on the container's scroll state. This can include whether the container is partially scrolled, snapped to a scroll snap container ancestor, or positioned via position: sticky and stuck to a boundary of a scroll container ancestor."
                  },
                  "example": {
                    "language": "css",
                    "code": "@container scroller scroll-state(scrollable: top) {\n  .back-to-top {\n    translate: 0 0;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@container</span> scroller scroll-state(<span class=\"hljs-attribute\">scrollable</span>: top) {\n  <span class=\"hljs-selector-class\">.back-to-top</span> {\n    <span class=\"hljs-attribute\">translate</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span>;\n  }\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.3,
                        "interest": 0,
                        "usage": 0,
                        "retention": 0,
                        "positivity": 0,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 81,
                        "percentageSurvey": 86.17,
                        "total": 94
                      }
                    }
                  ]
                }
              },
              {
                "id": "css_carousels",
                "entity": {
                  "name": "CSS Carousels",
                  "nameClean": "CSS Carousels",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_selectors_scroll-marker",
                    "url": "https://caniuse.com/mdn-css_selectors_scroll-marker"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_overflow/CSS_carousels",
                    "title": "Creating CSS carousels",
                    "summary": "The CSS overflow module defines features enabling the creation of flexible and accessible pure-CSS carousels with browser-generated and developer-styled scroll buttons and scroll markers. This guide explains how to create a carousel using these features."
                  },
                  "example": {
                    "language": "css",
                    "code": ".carousel {\n  &::scroll-button(left) {\n    content: \"⬅\" / \"Scroll Left\";\n  }\n  \n  &::scroll-button(right) {\n    content: \"⮕\" / \"Scroll Right\";\n  }\n\n  &::scroll-button(*):focus-visible {\n    outline-offset: 5px;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.carousel</span> {\n  &amp;::<span class=\"hljs-built_in\">scroll-button</span>(left) {\n    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot;⬅&quot;</span> / <span class=\"hljs-string\">&quot;Scroll Left&quot;</span>;\n  }\n  \n  &amp;::<span class=\"hljs-built_in\">scroll-button</span>(right) {\n    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot;⮕&quot;</span> / <span class=\"hljs-string\">&quot;Scroll Right&quot;</span>;\n  }\n\n  &amp;::<span class=\"hljs-built_in\">scroll-button</span>(*):focus-visible {\n    <span class=\"hljs-attribute\">outline-offset</span>: <span class=\"hljs-number\">5px</span>;\n  }\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.7,
                        "interest": 0.44,
                        "usage": 0,
                        "retention": 0,
                        "positivity": 0.15,
                        "positivityRelative": 0.44,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 81,
                        "percentageSurvey": 86.17,
                        "total": 94
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  }
}