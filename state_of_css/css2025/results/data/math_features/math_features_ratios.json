{
  "dataAPI": {
    "surveys": {
      "state_of_css": {
        "css2025": {
          "math_features": {
            "math_features_ratios": [
              {
                "id": "comparison_functions",
                "entity": {
                  "name": "Comparison Functions",
                  "nameClean": "Comparison Functions",
                  "entityType": "feature",
                  "description": "`min()`, `max()`, `clamp()`\n",
                  "descriptionClean": "min(), max(), clamp()",
                  "descriptionHtml": "<code>min()</code>, <code>max()</code>, <code>clamp()</code>\n",
                  "caniuse": {
                    "name": "css-math-functions",
                    "url": "https://caniuse.com/css-math-functions"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Values_and_Units/CSS_Value_Functions",
                    "title": "CSS value functions",
                    "summary": "CSS value functions are statements that invoke special data processing or calculations to return a CSS value for a CSS property. CSS value functions represent more complex data types and they may take some input arguments to calculate the return value."
                  },
                  "example": {
                    "language": "css",
                    "code": ".element {\n  width: clamp(100px, 50vw, 600px);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.element</span> {\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-built_in\">clamp</span>(<span class=\"hljs-number\">100px</span>, <span class=\"hljs-number\">50vw</span>, <span class=\"hljs-number\">600px</span>);\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.88,
                        "interest": 0.96,
                        "usage": 0.65,
                        "retention": 0.95,
                        "positivity": 0.42,
                        "positivityRelative": 0.95,
                        "appreciation": -0.01
                      },
                      "completion": {
                        "count": 7338,
                        "percentageSurvey": 75.6,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.89,
                        "interest": 0.93,
                        "usage": 0.69,
                        "retention": 0.95,
                        "positivity": 0.41,
                        "positivityRelative": 0.94,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 4059,
                        "percentageSurvey": 75.07,
                        "total": 5407
                      }
                    }
                  ]
                }
              },
              {
                "id": "trigonometric_functions",
                "entity": {
                  "name": "Trigonometric Functions",
                  "nameClean": "Trigonometric Functions",
                  "entityType": "feature",
                  "description": "`sin()`, `cos()`, `tan()`…\n",
                  "descriptionClean": "sin(), cos(), tan()…",
                  "descriptionHtml": "<code>sin()</code>, <code>cos()</code>, <code>tan()</code>…\n",
                  "caniuse": {
                    "name": "css-math-functions",
                    "url": "https://caniuse.com/css-math-functions"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Values_and_Units/CSS_Value_Functions",
                    "title": "CSS value functions",
                    "summary": "CSS value functions are statements that invoke special data processing or calculations to return a CSS value for a CSS property. CSS value functions represent more complex data types and they may take some input arguments to calculate the return value."
                  },
                  "example": {
                    "language": "css",
                    "code": "div {\n  width: calc(100px * cos(45deg));\n  height: calc(100px * cos(45deg));\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">div</span> {\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-built_in\">calc</span>(<span class=\"hljs-number\">100px</span> * <span class=\"hljs-built_in\">cos</span>(<span class=\"hljs-number\">45deg</span>));\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-built_in\">calc</span>(<span class=\"hljs-number\">100px</span> * <span class=\"hljs-built_in\">cos</span>(<span class=\"hljs-number\">45deg</span>));\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.75,
                        "interest": 0.69,
                        "usage": 0.15,
                        "retention": 0.97,
                        "positivity": 0.26,
                        "positivityRelative": 0.75,
                        "appreciation": 0.28
                      },
                      "completion": {
                        "count": 7341,
                        "percentageSurvey": 75.63,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.79,
                        "interest": 0.65,
                        "usage": 0.16,
                        "retention": 0,
                        "positivity": 0.17,
                        "positivityRelative": 0.66,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 4052,
                        "percentageSurvey": 74.94,
                        "total": 5407
                      }
                    }
                  ]
                }
              },
              {
                "id": "stepped_value_functions",
                "entity": {
                  "name": "Stepped Value Functions",
                  "nameClean": "Stepped Value Functions",
                  "entityType": "feature",
                  "description": "`round()`, `mod()`, `rem()`\n",
                  "descriptionClean": "round(), mod(), rem()",
                  "descriptionHtml": "<code>round()</code>, <code>mod()</code>, <code>rem()</code>\n",
                  "caniuse": {
                    "name": "mdn-css_types_round",
                    "url": "https://caniuse.com/mdn-css_types_round"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Values_and_Units/CSS_Value_Functions",
                    "title": "CSS value functions",
                    "summary": "CSS value functions are statements that invoke special data processing or calculations to return a CSS value for a CSS property. CSS value functions represent more complex data types and they may take some input arguments to calculate the return value."
                  },
                  "example": {
                    "language": "css",
                    "code": "div {\n  width: round(var(--width), 50px);\n  line-height: mod(7, 2); /* 1 */\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">div</span> {\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-built_in\">round</span>(<span class=\"hljs-built_in\">var</span>(--width), <span class=\"hljs-number\">50px</span>);\n  <span class=\"hljs-attribute\">line-height</span>: <span class=\"hljs-built_in\">mod</span>(<span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">2</span>); <span class=\"hljs-comment\">/* 1 */</span>\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.37,
                        "interest": 0.87,
                        "usage": 0.08,
                        "retention": 0,
                        "positivity": 0.3,
                        "positivityRelative": 0.89,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 7335,
                        "percentageSurvey": 75.57,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.46,
                        "interest": 0.85,
                        "usage": 0.12,
                        "retention": 0,
                        "positivity": 0.26,
                        "positivityRelative": 0.87,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 4045,
                        "percentageSurvey": 74.81,
                        "total": 5407
                      }
                    }
                  ]
                }
              },
              {
                "id": "sign_related_functions",
                "entity": {
                  "name": "Sign-related Functions",
                  "nameClean": "Sign-related Functions",
                  "entityType": "feature",
                  "description": "`sign()`, `abs()`\n",
                  "descriptionClean": "sign(), abs()",
                  "descriptionHtml": "<code>sign()</code>, <code>abs()</code>\n",
                  "caniuse": {
                    "name": "css-math-functions",
                    "url": "https://caniuse.com/css-math-functions"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/sign",
                    "title": "sign()",
                    "summary": "The sign() CSS function contains one calculation, and returns -1 if the numeric value of the argument is negative, +1 if the numeric value of the argument is positive, 0⁺ if the numeric value of the argument is 0⁺, and 0⁻ if the numeric value of the argument is 0⁻."
                  },
                  "example": {
                    "language": "css",
                    "code": "div {\n  top: sign(20vh - 100px);\n  width: abs(20% - 100px);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">div</span> {\n  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-built_in\">sign</span>(<span class=\"hljs-number\">20vh</span> - <span class=\"hljs-number\">100px</span>);\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-built_in\">abs</span>(<span class=\"hljs-number\">20%</span> - <span class=\"hljs-number\">100px</span>);\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.3,
                        "interest": 0.81,
                        "usage": 0.05,
                        "retention": 0,
                        "positivity": 0.27,
                        "positivityRelative": 0.84,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 7319,
                        "percentageSurvey": 75.41,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.41,
                        "interest": 0.78,
                        "usage": 0.08,
                        "retention": 0,
                        "positivity": 0.24,
                        "positivityRelative": 0.83,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 4039,
                        "percentageSurvey": 74.7,
                        "total": 5407
                      }
                    }
                  ]
                }
              },
              {
                "id": "exponential_functions",
                "entity": {
                  "name": "Exponential Functions",
                  "nameClean": "Exponential Functions",
                  "entityType": "feature",
                  "description": "`pow()`, `sqrt()`, `exp()`, `log()`, `hypot()`\n",
                  "descriptionClean": "pow(), sqrt(), exp(), log(), hypot()",
                  "descriptionHtml": "<code>pow()</code>, <code>sqrt()</code>, <code>exp()</code>, <code>log()</code>, <code>hypot()</code>\n",
                  "caniuse": {
                    "name": "css-math-functions",
                    "url": "https://caniuse.com/css-math-functions"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/pow",
                    "title": "pow()",
                    "summary": "The pow() CSS function is an exponential function that returns the value of a base raised to the power of a number."
                  },
                  "example": {
                    "language": "css",
                    "code": "h1 {\n  font-size: calc(1rem * pow(1.5, 4));\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">h1</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-built_in\">calc</span>(<span class=\"hljs-number\">1rem</span> * <span class=\"hljs-built_in\">pow</span>(<span class=\"hljs-number\">1.5</span>, <span class=\"hljs-number\">4</span>));\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.43,
                        "interest": 0.75,
                        "usage": 0.06,
                        "retention": 0,
                        "positivity": 0.23,
                        "positivityRelative": 0.76,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 7321,
                        "percentageSurvey": 75.43,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.52,
                        "interest": 0.75,
                        "usage": 0.08,
                        "retention": 0,
                        "positivity": 0.2,
                        "positivityRelative": 0.74,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 4039,
                        "percentageSurvey": 74.7,
                        "total": 5407
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  }
}