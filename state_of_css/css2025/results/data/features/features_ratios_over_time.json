{
  "dataAPI": {
    "surveys": {
      "state_of_css": {
        "css2025": {
          "features": {
            "features_ratios_over_time": [
              {
                "id": "subgrid",
                "entity": {
                  "name": "Subgrid",
                  "nameClean": "Subgrid",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-subgrid",
                    "url": "https://caniuse.com/css-subgrid"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_grid_layout/Subgrid",
                    "title": "Subgrid",
                    "summary": "The CSS grid layout module includes a subgrid value for grid-template-columns and grid-template-rows. This guide details what subgrid does and gives some use cases and design patterns that the feature solves."
                  },
                  "example": {
                    "language": "css",
                    "code": ".wrapper {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.item {\n  grid-row: 1 / 4;\n  display: grid;\n  grid-template-rows: subgrid;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.wrapper</span> {\n  <span class=\"hljs-attribute\">display</span>: grid;\n  <span class=\"hljs-attribute\">grid-template-columns</span>: <span class=\"hljs-number\">1</span>fr <span class=\"hljs-number\">1</span>fr;\n}\n\n<span class=\"hljs-selector-class\">.item</span> {\n  <span class=\"hljs-attribute\">grid-row</span>: <span class=\"hljs-number\">1</span> / <span class=\"hljs-number\">4</span>;\n  <span class=\"hljs-attribute\">display</span>: grid;\n  <span class=\"hljs-attribute\">grid-template-rows</span>: subgrid;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.76,
                        "interest": 0.93,
                        "usage": 0.27,
                        "retention": 0.95,
                        "positivity": 0.53,
                        "positivityRelative": 0.93,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 9581,
                        "percentageSurvey": 98.71,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.78,
                        "interest": 0.92,
                        "usage": 0.3,
                        "retention": 0.96,
                        "positivity": 0.51,
                        "positivityRelative": 0.94,
                        "appreciation": 0.03
                      },
                      "completion": {
                        "count": 5424,
                        "percentageSurvey": 98.51,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "writing_modes",
                "entity": {
                  "name": "Writing Modes",
                  "nameClean": "Writing Modes",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-writing-mode",
                    "url": "https://caniuse.com/css-writing-mode"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_writing_modes",
                    "title": "CSS writing modes",
                    "summary": "The CSS writing modes module defines various international writing modes, such as left-to-right (e.g., used by Latin and Indic scripts), right-to-left (e.g., used by Hebrew or Arabic scripts), bidirectional (used when mixing left-to-right and right-to-left scripts), and vertical (e.g., used by some Asian scripts)."
                  },
                  "example": {
                    "language": "css",
                    "code": ".vertical-text {\n  writing-mode: vertical-lr;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.vertical-text</span> {\n  <span class=\"hljs-attribute\">writing-mode</span>: vertical-lr;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.59,
                        "interest": 0.63,
                        "usage": 0.16,
                        "retention": 0.95,
                        "positivity": 0.28,
                        "positivityRelative": 0.75,
                        "appreciation": 0.31
                      },
                      "completion": {
                        "count": 9519,
                        "percentageSurvey": 98.07,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.64,
                        "interest": 0.61,
                        "usage": 0.16,
                        "retention": 0.93,
                        "positivity": 0.26,
                        "positivityRelative": 0.74,
                        "appreciation": 0.31
                      },
                      "completion": {
                        "count": 5389,
                        "percentageSurvey": 97.88,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "logical_properties",
                "entity": {
                  "name": "CSS Logical Properties",
                  "nameClean": "CSS Logical Properties",
                  "entityType": "feature",
                  "description": "`margin-block-start`, `padding-inline-end`, `border-inline-start`…\n",
                  "descriptionClean": "margin-block-start, padding-inline-end, border-inline-start…",
                  "descriptionHtml": "<code>margin-block-start</code>, <code>padding-inline-end</code>, <code>border-inline-start</code>…\n",
                  "caniuse": {
                    "name": "css-logical-props",
                    "url": "https://caniuse.com/css-logical-props"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_logical_properties_and_values",
                    "title": "CSS logical properties and values",
                    "summary": "The CSS logical properties and values module defines logical properties and values that can control layout through logical rather than physical direction and dimension mappings. Logical properties define direction‐relative equivalents to their corresponding physical properties."
                  },
                  "example": {
                    "language": "css",
                    "code": "section {\n  border-block: 8px solid blue;\n  border-inline: 8px solid green;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">section</span> {\n  <span class=\"hljs-attribute\">border-block</span>: <span class=\"hljs-number\">8px</span> solid blue;\n  <span class=\"hljs-attribute\">border-inline</span>: <span class=\"hljs-number\">8px</span> solid green;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.65,
                        "interest": 0.85,
                        "usage": 0.4,
                        "retention": 0.97,
                        "positivity": 0.42,
                        "positivityRelative": 0.93,
                        "appreciation": 0.12
                      },
                      "completion": {
                        "count": 9500,
                        "percentageSurvey": 97.88,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.71,
                        "interest": 0.83,
                        "usage": 0.48,
                        "retention": 0.98,
                        "positivity": 0.44,
                        "positivityRelative": 0.93,
                        "appreciation": 0.14
                      },
                      "completion": {
                        "count": 5375,
                        "percentageSurvey": 97.62,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "aspect_ratio",
                "entity": {
                  "name": "`aspect-ratio`",
                  "nameClean": "aspect-ratio",
                  "nameHtml": "<code>aspect-ratio</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_properties_aspect-ratio",
                    "url": "https://caniuse.com/mdn-css_properties_aspect-ratio"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio",
                    "title": "aspect-ratio",
                    "summary": "The aspect-ratio CSS property allows you to define the desired width-to-height ratio of an element's box. This means that even if the parent container or viewport size changes, the browser will adjust the element's dimensions to maintain the specified width-to-height ratio. The specified aspect ratio is used in the calculation of auto sizes and some other layout functions."
                  },
                  "example": {
                    "language": "css",
                    "code": ".square {\n  aspect-ratio: 1 / 1;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.square</span> {\n  <span class=\"hljs-attribute\">aspect-ratio</span>: <span class=\"hljs-number\">1</span> / <span class=\"hljs-number\">1</span>;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.9,
                        "interest": 0.93,
                        "usage": 0.72,
                        "retention": 0.97,
                        "positivity": 0.47,
                        "positivityRelative": 0.96,
                        "appreciation": 0.04
                      },
                      "completion": {
                        "count": 9501,
                        "percentageSurvey": 97.89,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.91,
                        "interest": 0.9,
                        "usage": 0.76,
                        "retention": 0.96,
                        "positivity": 0.47,
                        "positivityRelative": 0.95,
                        "appreciation": 0.06
                      },
                      "completion": {
                        "count": 5375,
                        "percentageSurvey": 97.62,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "viewport_percentage_length_units",
                "entity": {
                  "name": "Viewport-Relative Units",
                  "nameClean": "Viewport-Relative Units",
                  "entityType": "feature",
                  "description": "`lvh` / `lvw` / `lvmin` / `lvmax`, `sv*`, `dv*`, etc.\n",
                  "descriptionClean": "lvh / lvw / lvmin / lvmax, sv*, dv*, etc.",
                  "descriptionHtml": "<code>lvh</code> / <code>lvw</code> / <code>lvmin</code> / <code>lvmax</code>, <code>sv*</code>, <code>dv*</code>, etc.\n",
                  "caniuse": {
                    "name": "mdn-css_types_length_viewport_percentage_units_small",
                    "url": "https://caniuse.com/mdn-css_types_length_viewport_percentage_units_small"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/length",
                    "title": "<length>",
                    "summary": "The <length> CSS data type represents a distance value. Lengths can be used in numerous CSS properties, such as width, height, margin, padding, border-width, font-size, and text-shadow."
                  },
                  "example": {
                    "language": "css",
                    "code": "body {\n  height: 100dvh;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">body</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100</span>dvh;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.76,
                        "interest": 0.91,
                        "usage": 0.44,
                        "retention": 0.94,
                        "positivity": 0.42,
                        "positivityRelative": 0.93,
                        "appreciation": 0.02
                      },
                      "completion": {
                        "count": 9492,
                        "percentageSurvey": 97.8,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.78,
                        "interest": 0.92,
                        "usage": 0.49,
                        "retention": 0.94,
                        "positivity": 0.42,
                        "positivityRelative": 0.94,
                        "appreciation": 0.02
                      },
                      "completion": {
                        "count": 5361,
                        "percentageSurvey": 97.37,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "media_queries_range_contexts",
                "entity": {
                  "name": "Media Queries Range Contexts",
                  "nameClean": "Media Queries Range Contexts",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-media-range-syntax",
                    "url": "https://caniuse.com/css-media-range-syntax"
                  },
                  "example": {
                    "language": "css",
                    "code": "@media (400px < width < 1000px) {\n  /* ... */\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@media</span> (<span class=\"hljs-number\">400px</span> &lt; <span class=\"hljs-attribute\">width</span> &lt; <span class=\"hljs-number\">1000px</span>) {\n  <span class=\"hljs-comment\">/* ... */</span>\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.66,
                        "interest": 0.95,
                        "usage": 0.25,
                        "retention": 0.95,
                        "positivity": 0.43,
                        "positivityRelative": 0.95,
                        "appreciation": -0.01
                      },
                      "completion": {
                        "count": 9485,
                        "percentageSurvey": 97.72,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.7,
                        "interest": 0.91,
                        "usage": 0.3,
                        "retention": 0.97,
                        "positivity": 0.42,
                        "positivityRelative": 0.94,
                        "appreciation": 0.05
                      },
                      "completion": {
                        "count": 5358,
                        "percentageSurvey": 97.31,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "anchor_positioning",
                "entity": {
                  "name": "Anchor Positioning",
                  "nameClean": "Anchor Positioning",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-anchor-positioning",
                    "url": "https://caniuse.com/css-anchor-positioning"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_anchor_positioning",
                    "title": "CSS anchor positioning",
                    "summary": "The CSS anchor positioning module defines features that allow you to tether elements together. Certain elements are defined as anchor elements; anchor-positioned elements can then have their size and position set based on the size and location of the anchor elements to which they are bound."
                  },
                  "example": {
                    "language": "css",
                    "code": ".anchor {\n  anchor-name: --my-anchor;\n}\n.target {\n  position: absolute;\n  position-anchor: --my-anchor;\n  position-area: start end;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.anchor</span> {\n  <span class=\"hljs-attribute\">anchor-name</span>: --my-anchor;\n}\n<span class=\"hljs-selector-class\">.target</span> {\n  <span class=\"hljs-attribute\">position</span>: absolute;\n  <span class=\"hljs-attribute\">position-anchor</span>: --my-anchor;\n  <span class=\"hljs-attribute\">position</span>-area: start end;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.35,
                        "interest": 0.97,
                        "usage": 0.04,
                        "retention": 0.89,
                        "positivity": 0.42,
                        "positivityRelative": 0.95,
                        "appreciation": -0.08
                      },
                      "completion": {
                        "count": 9449,
                        "percentageSurvey": 97.35,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.57,
                        "interest": 0.97,
                        "usage": 0.11,
                        "retention": 0.86,
                        "positivity": 0.46,
                        "positivityRelative": 0.95,
                        "appreciation": -0.12
                      },
                      "completion": {
                        "count": 5352,
                        "percentageSurvey": 97.2,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "at_container_size",
                "entity": {
                  "name": "`@container` size queries\n",
                  "nameClean": "@container size queries",
                  "nameHtml": "<code>@container</code> size queries\n",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-container-queries",
                    "url": "https://caniuse.com/css-container-queries"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_containment/Container_queries",
                    "title": "CSS container queries",
                    "summary": "Container queries enable you to apply styles to an element based on certain attributes of its container:"
                  },
                  "example": {
                    "language": "css",
                    "code": "@container (min-width: 700px) {\n  .card {\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@container</span> (<span class=\"hljs-attribute\">min-width</span>: <span class=\"hljs-number\">700px</span>) {\n  <span class=\"hljs-selector-class\">.card</span> {\n    <span class=\"hljs-attribute\">display</span>: grid;\n    <span class=\"hljs-attribute\">grid-template-columns</span>: <span class=\"hljs-number\">2</span>fr <span class=\"hljs-number\">1</span>fr;\n  }\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.81,
                        "interest": 0.97,
                        "usage": 0.31,
                        "retention": 0.93,
                        "positivity": 0.45,
                        "positivityRelative": 0.95,
                        "appreciation": -0.04
                      },
                      "completion": {
                        "count": 9473,
                        "percentageSurvey": 97.6,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.86,
                        "interest": 0.96,
                        "usage": 0.41,
                        "retention": 0.95,
                        "positivity": 0.46,
                        "positivityRelative": 0.95,
                        "appreciation": -0.01
                      },
                      "completion": {
                        "count": 5343,
                        "percentageSurvey": 97.04,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "at_container_style",
                "entity": {
                  "name": "`@container` style queries\n",
                  "nameClean": "@container style queries",
                  "nameHtml": "<code>@container</code> style queries\n",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-container-queries-style",
                    "url": "https://caniuse.com/css-container-queries-style"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_containment/Container_size_and_style_queries",
                    "title": "Using container size and style queries",
                    "summary": "Container queries enable you to apply styles to elements nested within a specific container based on the features of that container. The query returns true or false depending on whether the query condition is true for the container."
                  },
                  "example": {
                    "language": "css",
                    "code": "@container style(--fontColor: green) {\n  /* <stylesheet> */\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@container</span> style(<span class=\"hljs-attribute\">--fontColor</span>: green) {\n  <span class=\"hljs-comment\">/* &lt;stylesheet&gt; */</span>\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.43,
                        "interest": 0.94,
                        "usage": 0.05,
                        "retention": 0.94,
                        "positivity": 0.4,
                        "positivityRelative": 0.94,
                        "appreciation": -0.01
                      },
                      "completion": {
                        "count": 9454,
                        "percentageSurvey": 97.4,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.5,
                        "interest": 0.93,
                        "usage": 0.07,
                        "retention": 0.93,
                        "positivity": 0.4,
                        "positivityRelative": 0.94,
                        "appreciation": -0.01
                      },
                      "completion": {
                        "count": 5320,
                        "percentageSurvey": 96.62,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "calc_size",
                "entity": {
                  "name": "`calc-size()`",
                  "nameClean": "calc-size()",
                  "nameHtml": "<code>calc-size()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_types_calc-size",
                    "url": "https://caniuse.com/mdn-css_types_calc-size"
                  },
                  "example": {
                    "language": "css",
                    "code": ".element {\n  height: 0;\n  overflow: hidden;\n  transition: height 0.3s;\n}\n\n.element.open {\n  height: calc-size(auto);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.element</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">overflow</span>: hidden;\n  <span class=\"hljs-attribute\">transition</span>: height <span class=\"hljs-number\">0.3s</span>;\n}\n\n<span class=\"hljs-selector-class\">.element</span><span class=\"hljs-selector-class\">.open</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-built_in\">calc-size</span>(auto);\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.4,
                        "interest": 0.97,
                        "usage": 0.13,
                        "retention": 0.93,
                        "positivity": 0.45,
                        "positivityRelative": 0.97,
                        "appreciation": -0.05
                      },
                      "completion": {
                        "count": 5332,
                        "percentageSurvey": 96.84,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "blend_modes",
                "entity": {
                  "entityType": "feature",
                  "description": "`mix-blend-mode`, `background-blend-mode`, `isolation`\n",
                  "descriptionClean": "mix-blend-mode, background-blend-mode, isolation",
                  "descriptionHtml": "<code>mix-blend-mode</code>, <code>background-blend-mode</code>, <code>isolation</code>\n",
                  "caniuse": {
                    "name": "css-mixblendmode",
                    "url": "https://caniuse.com/css-mixblendmode"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/blend-mode",
                    "title": "<blend-mode>",
                    "summary": "The <blend-mode> CSS data type describes how colors should appear when elements overlap. It is used in the background-blend-mode and mix-blend-mode properties."
                  },
                  "example": {
                    "language": "css",
                    "code": ".item2 {\n  color: #000;\n  mix-blend-mode: overlay;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.item2</span> {\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#000</span>;\n  <span class=\"hljs-attribute\">mix-blend-mode</span>: overlay;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.69,
                        "interest": 0.87,
                        "usage": 0.4,
                        "retention": 0.94,
                        "positivity": 0.37,
                        "positivityRelative": 0.9,
                        "appreciation": 0.06
                      },
                      "completion": {
                        "count": 8501,
                        "percentageSurvey": 87.58,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.72,
                        "interest": 0.83,
                        "usage": 0.42,
                        "retention": 0.92,
                        "positivity": 0.33,
                        "positivityRelative": 0.89,
                        "appreciation": 0.08
                      },
                      "completion": {
                        "count": 4784,
                        "percentageSurvey": 86.89,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "backdrop_filter",
                "entity": {
                  "name": "`backdrop-filter`",
                  "nameClean": "backdrop-filter",
                  "nameHtml": "<code>backdrop-filter</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-backdrop-filter",
                    "url": "https://caniuse.com/css-backdrop-filter"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter",
                    "title": "backdrop-filter",
                    "summary": "The backdrop-filter CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything behind the element, to see the effect the element or its background needs to be transparent or partially transparent."
                  },
                  "example": {
                    "language": "css",
                    "code": ".box {\n  backdrop-filter: blur(10px);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.box</span> {\n  <span class=\"hljs-attribute\">backdrop-filter</span>: <span class=\"hljs-built_in\">blur</span>(<span class=\"hljs-number\">10px</span>);\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.77,
                        "interest": 0.93,
                        "usage": 0.59,
                        "retention": 0.96,
                        "positivity": 0.41,
                        "positivityRelative": 0.95,
                        "appreciation": 0.03
                      },
                      "completion": {
                        "count": 8483,
                        "percentageSurvey": 87.4,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.84,
                        "interest": 0.93,
                        "usage": 0.66,
                        "retention": 0.95,
                        "positivity": 0.4,
                        "positivityRelative": 0.94,
                        "appreciation": 0.02
                      },
                      "completion": {
                        "count": 4778,
                        "percentageSurvey": 86.78,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "linear_easing_function",
                "entity": {
                  "name": "`linear` Easing Function\n",
                  "nameClean": "linear Easing Function",
                  "nameHtml": "<code>linear</code> Easing Function\n",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_types_easing-function_linear-function",
                    "url": "https://caniuse.com/mdn-css_types_easing-function_linear-function"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/easing-function",
                    "title": "<easing-function>",
                    "summary": "The <easing-function> CSS data type represents a mathematical function that describes the rate at which a value changes."
                  },
                  "example": {
                    "language": "css",
                    "code": ":root {\n  --bounce-easing: linear(\n    0, 0.063, 0.25 18.2%, 1 36.4%, 0.813, 0.75, 0.813, 1, 0.938, 1, 1\n  );\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-pseudo\">:root</span> {\n  <span class=\"hljs-attr\">--bounce-easing</span>: <span class=\"hljs-built_in\">linear</span>(\n    <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0.063</span>, <span class=\"hljs-number\">0.25</span> <span class=\"hljs-number\">18.2%</span>, <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">36.4%</span>, <span class=\"hljs-number\">0.813</span>, <span class=\"hljs-number\">0.75</span>, <span class=\"hljs-number\">0.813</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0.938</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>\n  );\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.65,
                        "interest": 0.84,
                        "usage": 0.31,
                        "retention": 0.9,
                        "positivity": 0.31,
                        "positivityRelative": 0.86,
                        "appreciation": 0.06
                      },
                      "completion": {
                        "count": 8465,
                        "percentageSurvey": 87.21,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.69,
                        "interest": 0.83,
                        "usage": 0.3,
                        "retention": 0.94,
                        "positivity": 0.29,
                        "positivityRelative": 0.87,
                        "appreciation": 0.1
                      },
                      "completion": {
                        "count": 4778,
                        "percentageSurvey": 86.78,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "intrinsic_sizing",
                "entity": {
                  "name": "Intrinsic Sizing",
                  "nameClean": "Intrinsic Sizing",
                  "entityType": "feature",
                  "description": "`min-content`, `max-content`, `fit-content`\n",
                  "descriptionClean": "min-content, max-content, fit-content",
                  "descriptionHtml": "<code>min-content</code>, <code>max-content</code>, <code>fit-content</code>\n",
                  "caniuse": {
                    "name": "intrinsic-width",
                    "url": "https://caniuse.com/intrinsic-width"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/min-content",
                    "title": "min-content",
                    "summary": "The min-content sizing keyword represents the minimum intrinsic size of the content. For text content this means that the content will take all soft-wrapping opportunities, becoming as small as the longest word."
                  },
                  "example": {
                    "language": "css",
                    "code": "h2 {\n  width: max-content;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">h2</span> {\n  <span class=\"hljs-attribute\">width</span>: max-content;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.88,
                        "interest": 0.95,
                        "usage": 0.73,
                        "retention": 0.89,
                        "positivity": 0.4,
                        "positivityRelative": 0.91,
                        "appreciation": -0.07
                      },
                      "completion": {
                        "count": 8484,
                        "percentageSurvey": 87.41,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.9,
                        "interest": 0.96,
                        "usage": 0.75,
                        "retention": 0.91,
                        "positivity": 0.4,
                        "positivityRelative": 0.92,
                        "appreciation": -0.05
                      },
                      "completion": {
                        "count": 4784,
                        "percentageSurvey": 86.89,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "conic_gradient",
                "entity": {
                  "name": "`conic-gradient()`",
                  "nameClean": "conic-gradient()",
                  "nameHtml": "<code>conic-gradient()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_types_image_gradient_conic-gradient",
                    "url": "https://caniuse.com/mdn-css_types_image_gradient_conic-gradient"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/conic-gradient",
                    "title": "conic-gradient()",
                    "summary": "The conic-gradient() CSS function creates an image consisting of a gradient with color transitions rotated around a center point (rather than radiating from the center). Example conic gradients include pie charts and color wheels. The result of the conic-gradient() function is an object of the <gradient> data type, which is a special kind of <image>."
                  },
                  "example": {
                    "language": "css",
                    "code": ".blue-to-red {\n  background: conic-gradient(from 45deg, blue, red);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.blue-to-red</span> {\n  <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">conic-gradient</span>(from <span class=\"hljs-number\">45deg</span>, blue, red);\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.57,
                        "interest": 0.69,
                        "usage": 0.22,
                        "retention": 0.96,
                        "positivity": 0.27,
                        "positivityRelative": 0.8,
                        "appreciation": 0.27
                      },
                      "completion": {
                        "count": 8473,
                        "percentageSurvey": 87.3,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.65,
                        "interest": 0.65,
                        "usage": 0.27,
                        "retention": 0.96,
                        "positivity": 0.25,
                        "positivityRelative": 0.78,
                        "appreciation": 0.31
                      },
                      "completion": {
                        "count": 4767,
                        "percentageSurvey": 86.58,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "offset_path",
                "entity": {
                  "name": "`offset-path`\n",
                  "nameClean": "offset-path",
                  "nameHtml": "<code>offset-path</code>\n",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-motion-paths",
                    "url": "https://caniuse.com/css-motion-paths"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/offset-path",
                    "title": "offset-path",
                    "summary": "The offset-path CSS property specifies a path for an element to follow and determines the element's positioning within the path's parent container or the SVG coordinate system. The path is a line, a curve, or a geometrical shape along which the element gets positioned or moves."
                  },
                  "example": {
                    "language": "css",
                    "code": ".blueBox {\n  background-color: blue;\n  offset-path: border-box;\n  offset-distance: 5%;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.blueBox</span> {\n  <span class=\"hljs-attribute\">background-color</span>: blue;\n  <span class=\"hljs-attribute\">offset-path</span>: border-box;\n  <span class=\"hljs-attribute\">offset-distance</span>: <span class=\"hljs-number\">5%</span>;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.22,
                        "interest": 0.95,
                        "usage": 0.07,
                        "retention": 0.97,
                        "positivity": 0.36,
                        "positivityRelative": 0.93,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 8475,
                        "percentageSurvey": 87.32,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.3,
                        "interest": 0.92,
                        "usage": 0.09,
                        "retention": 0.95,
                        "positivity": 0.33,
                        "positivityRelative": 0.92,
                        "appreciation": 0.03
                      },
                      "completion": {
                        "count": 4758,
                        "percentageSurvey": 86.41,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "css_shape_function",
                "entity": {
                  "name": "`shape()`",
                  "nameClean": "shape()",
                  "nameHtml": "<code>shape()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_types_basic-shape_shape",
                    "url": "https://caniuse.com/mdn-css_types_basic-shape_shape"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/basic-shape/shape",
                    "title": "shape()",
                    "summary": "The shape() CSS function is used to define a shape for the clip-path and offset-path properties. It combines an initial starting point with a series of shape commands that define the path of the shape. The shape() function is a member of the <basic-shape> data type."
                  },
                  "example": {
                    "language": "css",
                    "code": ".clipped {\n  clip-path: shape(\n    from top left,\n    hline to 100%,\n    vline to 100%,\n    curve to 0% 100% with 50% 0%,\n  );\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.clipped</span> {\n  <span class=\"hljs-attribute\">clip-path</span>: <span class=\"hljs-built_in\">shape</span>(\n    from top left,\n    hline to <span class=\"hljs-number\">100%</span>,\n    vline to <span class=\"hljs-number\">100%</span>,\n    curve to <span class=\"hljs-number\">0%</span> <span class=\"hljs-number\">100%</span> with <span class=\"hljs-number\">50%</span> <span class=\"hljs-number\">0%</span>,\n  );\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.56,
                        "interest": 0.91,
                        "usage": 0.14,
                        "retention": 0.88,
                        "positivity": 0.34,
                        "positivityRelative": 0.9,
                        "appreciation": -0.03
                      },
                      "completion": {
                        "count": 4763,
                        "percentageSurvey": 86.51,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "color_function",
                "entity": {
                  "name": "`color()`",
                  "nameClean": "color()",
                  "nameHtml": "<code>color()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-color-function",
                    "url": "https://caniuse.com/css-color-function"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color",
                    "title": "color()",
                    "summary": "The color() functional notation allows a color to be specified in a particular, specified color space rather than the implicit sRGB color space that most of the other color functions operate in."
                  },
                  "example": {
                    "language": "css",
                    "code": ".brightest-green {\n  background: color(display-p3 0 1 0);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.brightest-green</span> {\n  <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">color</span>(display-p3 <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">0</span>);\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.48,
                        "interest": 0.89,
                        "usage": 0.13,
                        "retention": 0.98,
                        "positivity": 0.36,
                        "positivityRelative": 0.91,
                        "appreciation": 0.08
                      },
                      "completion": {
                        "count": 8161,
                        "percentageSurvey": 84.08,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.55,
                        "interest": 0.86,
                        "usage": 0.16,
                        "retention": 0.95,
                        "positivity": 0.33,
                        "positivityRelative": 0.89,
                        "appreciation": 0.08
                      },
                      "completion": {
                        "count": 4578,
                        "percentageSurvey": 83.15,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "accent_color",
                "entity": {
                  "name": "`accent-color`",
                  "nameClean": "accent-color",
                  "nameHtml": "<code>accent-color</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_properties_accent-color",
                    "url": "https://caniuse.com/mdn-css_properties_accent-color"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/accent-color",
                    "title": "accent-color",
                    "summary": "The accent-color CSS property sets the accent color for user-interface controls generated by some elements."
                  },
                  "example": {
                    "language": "css",
                    "code": "input[type='checkbox'] {\n  accent-color: tomato;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-attr\">[type=<span class=\"hljs-string\">&#x27;checkbox&#x27;</span>]</span> {\n  <span class=\"hljs-attribute\">accent-color</span>: tomato;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.56,
                        "interest": 0.93,
                        "usage": 0.29,
                        "retention": 0.95,
                        "positivity": 0.4,
                        "positivityRelative": 0.95,
                        "appreciation": 0.02
                      },
                      "completion": {
                        "count": 8168,
                        "percentageSurvey": 84.15,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.63,
                        "interest": 0.91,
                        "usage": 0.34,
                        "retention": 0.95,
                        "positivity": 0.4,
                        "positivityRelative": 0.94,
                        "appreciation": 0.03
                      },
                      "completion": {
                        "count": 4589,
                        "percentageSurvey": 83.35,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "color_mix",
                "entity": {
                  "name": "`color-mix()`",
                  "nameClean": "color-mix()",
                  "nameHtml": "<code>color-mix()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_types_color_color-mix",
                    "url": "https://caniuse.com/mdn-css_types_color_color-mix"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color-mix",
                    "title": "color-mix()",
                    "summary": "The color-mix() functional notation takes two <color> values and returns the result of mixing them in a given colorspace by a given amount."
                  },
                  "example": {
                    "language": "css",
                    "code": ".teal {\n  background: color-mix(in lab, white 20%, #34c9eb);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.teal</span> {\n  <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">color-mix</span>(in lab, white <span class=\"hljs-number\">20%</span>, <span class=\"hljs-number\">#34c9eb</span>);\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.54,
                        "interest": 0.9,
                        "usage": 0.15,
                        "retention": 0.96,
                        "positivity": 0.37,
                        "positivityRelative": 0.91,
                        "appreciation": 0.06
                      },
                      "completion": {
                        "count": 8146,
                        "percentageSurvey": 83.93,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.63,
                        "interest": 0.89,
                        "usage": 0.25,
                        "retention": 0.97,
                        "positivity": 0.36,
                        "positivityRelative": 0.91,
                        "appreciation": 0.08
                      },
                      "completion": {
                        "count": 4573,
                        "percentageSurvey": 83.05,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "wide_gamut_colors",
                "entity": {
                  "name": "Wide Gamut Colors",
                  "nameClean": "Wide Gamut Colors",
                  "entityType": "feature",
                  "description": "`lch()`, `lab()`, `oklch()`, `oklab()`\n",
                  "descriptionClean": "lch(), lab(), oklch(), oklab()",
                  "descriptionHtml": "<code>lch()</code>, <code>lab()</code>, <code>oklch()</code>, <code>oklab()</code>\n",
                  "caniuse": {
                    "name": "css-lch-lab",
                    "url": "https://caniuse.com/css-lch-lab"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/lch",
                    "title": "lch()",
                    "summary": "The lch() functional notation expresses a given color using the LCH color space, which represents lightness, chroma, and hue. It uses the same L axis as the lab() color function of the CIELab color space, but it uses the polar coordinates C (Chroma) and H (Hue)."
                  },
                  "example": {
                    "language": "css",
                    "code": ".foo {\n  background-color: lab(29.2345% 39.3825 20.0664);\n  background-color: lch(29.2345% 44.2 27);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.foo</span> {\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">lab</span>(<span class=\"hljs-number\">29.2345%</span> <span class=\"hljs-number\">39.3825</span> <span class=\"hljs-number\">20.0664</span>);\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">lch</span>(<span class=\"hljs-number\">29.2345%</span> <span class=\"hljs-number\">44.2</span> <span class=\"hljs-number\">27</span>);\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.54,
                        "interest": 0.73,
                        "usage": 0.13,
                        "retention": 0.96,
                        "positivity": 0.28,
                        "positivityRelative": 0.77,
                        "appreciation": 0.23
                      },
                      "completion": {
                        "count": 8138,
                        "percentageSurvey": 83.85,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.68,
                        "interest": 0.74,
                        "usage": 0.24,
                        "retention": 0.94,
                        "positivity": 0.29,
                        "positivityRelative": 0.8,
                        "appreciation": 0.2
                      },
                      "completion": {
                        "count": 4572,
                        "percentageSurvey": 83.04,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "relative_colors",
                "entity": {
                  "name": "Relative Colors",
                  "nameClean": "Relative Colors",
                  "entityType": "feature",
                  "example": {
                    "language": "css",
                    "code": ".foo {\n  --color: #4488dd;\n  background-color: hsl(from var(--color) h s calc(l * 1.2))\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.foo</span> {\n  <span class=\"hljs-attr\">--color</span>: <span class=\"hljs-number\">#4488dd</span>;\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">hsl</span>(from <span class=\"hljs-built_in\">var</span>(--color) h s <span class=\"hljs-built_in\">calc</span>(l * <span class=\"hljs-number\">1.2</span>))\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.52,
                        "interest": 0.88,
                        "usage": 0.13,
                        "retention": 0.94,
                        "positivity": 0.35,
                        "positivityRelative": 0.88,
                        "appreciation": 0.06
                      },
                      "completion": {
                        "count": 8135,
                        "percentageSurvey": 83.81,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.59,
                        "interest": 0.89,
                        "usage": 0.22,
                        "retention": 0.95,
                        "positivity": 0.35,
                        "positivityRelative": 0.9,
                        "appreciation": 0.05
                      },
                      "completion": {
                        "count": 4571,
                        "percentageSurvey": 83.02,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "gradient_color_spaces",
                "entity": {
                  "name": "Interpolation Color Spaces",
                  "nameClean": "Interpolation Color Spaces",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_types_image_gradient_conic-gradient_interpolation_color_space",
                    "url": "https://caniuse.com/mdn-css_types_image_gradient_conic-gradient_interpolation_color_space"
                  },
                  "example": {
                    "language": "css",
                    "code": ".gradient {\n  background: linear-gradient(in oklab, hsl(80 90% 50%), red);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.gradient</span> {\n  <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">linear-gradient</span>(in oklab, <span class=\"hljs-built_in\">hsl</span>(<span class=\"hljs-number\">80</span> <span class=\"hljs-number\">90%</span> <span class=\"hljs-number\">50%</span>), red);\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.41,
                        "interest": 0.83,
                        "usage": 0.11,
                        "retention": 0.96,
                        "positivity": 0.27,
                        "positivityRelative": 0.79,
                        "appreciation": 0.12
                      },
                      "completion": {
                        "count": 8131,
                        "percentageSurvey": 83.77,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.5,
                        "interest": 0.83,
                        "usage": 0.16,
                        "retention": 0.96,
                        "positivity": 0.26,
                        "positivityRelative": 0.82,
                        "appreciation": 0.12
                      },
                      "completion": {
                        "count": 4557,
                        "percentageSurvey": 82.76,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "color_scheme",
                "entity": {
                  "name": "`color-scheme`",
                  "nameClean": "color-scheme",
                  "nameHtml": "<code>color-scheme</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_properties_color-scheme",
                    "url": "https://caniuse.com/mdn-css_properties_color-scheme"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme",
                    "title": "color-scheme",
                    "summary": "The color-scheme CSS property allows an element to indicate which color schemes it can comfortably be rendered in. User agents change the following aspects of the UI chrome to match the used color scheme:"
                  },
                  "example": {
                    "language": "css",
                    "code": ".foo {\n  color-scheme: light dark;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.foo</span> {\n  <span class=\"hljs-attribute\">color-scheme</span>: light dark;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.67,
                        "interest": 0.94,
                        "usage": 0.3,
                        "retention": 0.95,
                        "positivity": 0.36,
                        "positivityRelative": 0.94,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 7379,
                        "percentageSurvey": 76.03,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.77,
                        "interest": 0.92,
                        "usage": 0.39,
                        "retention": 0.94,
                        "positivity": 0.36,
                        "positivityRelative": 0.93,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 4575,
                        "percentageSurvey": 83.09,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "light_dark",
                "entity": {
                  "name": "`light-dark()`",
                  "nameClean": "light-dark()",
                  "nameHtml": "<code>light-dark()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_types_color_light-dark",
                    "url": "https://caniuse.com/mdn-css_types_color_light-dark"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/light-dark",
                    "title": "light-dark()",
                    "summary": "The light-dark() CSS <color> function enables setting two colors for a property - returning one of the two colors options by detecting if the developer has set a light or dark color scheme or the user has requested light or dark color theme - without needing to encase the theme colors within a prefers-color-scheme media feature query.\nUsers are able to indicate their color-scheme preference through their operating system settings (e.g., light or dark mode) or their user agent settings. The light-dark() function enables providing two color values where any <color> value is accepted. The light-dark() CSS color function returns the first value if the user's preference is set to light or if no preference is set and the second value if the user's preference is set to dark."
                  },
                  "example": {
                    "language": "css",
                    "code": "code {\n  color: light-dark(black, white);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">code</span> {\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-built_in\">light-dark</span>(black, white);\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.37,
                        "interest": 0.92,
                        "usage": 0.09,
                        "retention": 0.94,
                        "positivity": 0.39,
                        "positivityRelative": 0.94,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 7386,
                        "percentageSurvey": 76.1,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.6,
                        "interest": 0.9,
                        "usage": 0.22,
                        "retention": 0.94,
                        "positivity": 0.37,
                        "positivityRelative": 0.93,
                        "appreciation": 0.03
                      },
                      "completion": {
                        "count": 4563,
                        "percentageSurvey": 82.87,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "scroll_snap",
                "entity": {
                  "name": "Scroll Snap",
                  "nameClean": "Scroll Snap",
                  "entityType": "feature",
                  "description": "`scroll-snap-type`, `scroll-snap-align`, `scroll-padding`…\n",
                  "descriptionClean": "scroll-snap-type, scroll-snap-align, scroll-padding…",
                  "descriptionHtml": "<code>scroll-snap-type</code>, <code>scroll-snap-align</code>, <code>scroll-padding</code>…\n",
                  "caniuse": {
                    "name": "css-snappoints",
                    "url": "https://caniuse.com/css-snappoints"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_scroll_snap",
                    "title": "CSS scroll snap",
                    "summary": "The CSS scroll snap module provides properties that let you control the panning and scrolling behavior by defining snap positions. Content can be snapped into position as the user scrolls overflowing content within a scroll container, providing paging and scroll positioning."
                  },
                  "example": {
                    "language": "css",
                    "code": ".scroller {\n  height: 300px;\n  overflow-y: scroll;\n  scroll-snap-type: y mandatory;\n}\n\n.scroller section {\n  scroll-snap-align: start;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.scroller</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">300px</span>;\n  <span class=\"hljs-attribute\">overflow-y</span>: scroll;\n  <span class=\"hljs-attribute\">scroll-snap-type</span>: y mandatory;\n}\n\n<span class=\"hljs-selector-class\">.scroller</span> <span class=\"hljs-selector-tag\">section</span> {\n  <span class=\"hljs-attribute\">scroll-snap-align</span>: start;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.69,
                        "interest": 0.92,
                        "usage": 0.39,
                        "retention": 0.88,
                        "positivity": 0.41,
                        "positivityRelative": 0.92,
                        "appreciation": -0.04
                      },
                      "completion": {
                        "count": 7766,
                        "percentageSurvey": 80.01,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.74,
                        "interest": 0.9,
                        "usage": 0.42,
                        "retention": 0.86,
                        "positivity": 0.37,
                        "positivityRelative": 0.88,
                        "appreciation": -0.05
                      },
                      "completion": {
                        "count": 4291,
                        "percentageSurvey": 77.93,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "overscroll_behavior",
                "entity": {
                  "name": "`overscroll-behavior`",
                  "nameClean": "overscroll-behavior",
                  "nameHtml": "<code>overscroll-behavior</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-overscroll-behavior",
                    "url": "https://caniuse.com/css-overscroll-behavior"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior",
                    "title": "overscroll-behavior",
                    "summary": "The overscroll-behavior CSS property sets what a browser does when reaching the boundary of a scrolling area."
                  },
                  "example": {
                    "language": "css",
                    "code": ".foo {\n  height: 200px;\n  overflow: auto;\n  overscroll-behavior-y: contain;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.foo</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">200px</span>;\n  <span class=\"hljs-attribute\">overflow</span>: auto;\n  <span class=\"hljs-attribute\">overscroll-behavior-y</span>: contain;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.51,
                        "interest": 0.94,
                        "usage": 0.28,
                        "retention": 0.94,
                        "positivity": 0.38,
                        "positivityRelative": 0.95,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 7753,
                        "percentageSurvey": 79.88,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.57,
                        "interest": 0.91,
                        "usage": 0.33,
                        "retention": 0.92,
                        "positivity": 0.36,
                        "positivityRelative": 0.94,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 4284,
                        "percentageSurvey": 77.81,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "scroll_behavior",
                "entity": {
                  "name": "`scroll-behavior`",
                  "nameClean": "scroll-behavior",
                  "nameHtml": "<code>scroll-behavior</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-scroll-behavior",
                    "url": "https://caniuse.com/css-scroll-behavior"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior",
                    "title": "scroll-behavior",
                    "summary": "The scroll-behavior CSS property sets the behavior for a scrolling box when scrolling is triggered by the navigation or CSSOM scrolling APIs."
                  },
                  "example": {
                    "language": "css",
                    "code": ".foo {\n  scroll-behavior: auto;\n  scroll-behavior: smooth;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.foo</span> {\n  <span class=\"hljs-attribute\">scroll-behavior</span>: auto;\n  <span class=\"hljs-attribute\">scroll-behavior</span>: smooth;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.85,
                        "interest": 0.9,
                        "usage": 0.67,
                        "retention": 0.95,
                        "positivity": 0.39,
                        "positivityRelative": 0.94,
                        "appreciation": 0.05
                      },
                      "completion": {
                        "count": 7744,
                        "percentageSurvey": 79.79,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.86,
                        "interest": 0.86,
                        "usage": 0.68,
                        "retention": 0.94,
                        "positivity": 0.37,
                        "positivityRelative": 0.92,
                        "appreciation": 0.07
                      },
                      "completion": {
                        "count": 4287,
                        "percentageSurvey": 77.86,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "scrollbar_gutter",
                "entity": {
                  "name": "`scrollbar-gutter`",
                  "nameClean": "scrollbar-gutter",
                  "nameHtml": "<code>scrollbar-gutter</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_properties_scrollbar-gutter",
                    "url": "https://caniuse.com/mdn-css_properties_scrollbar-gutter"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-gutter",
                    "title": "scrollbar-gutter",
                    "summary": "The scrollbar-gutter CSS property allows authors to reserve space for the scrollbar, preventing unwanted layout changes as the content grows while also avoiding unnecessary visuals when scrolling isn't needed."
                  },
                  "example": {
                    "language": "css",
                    "code": ".container {\n  scrollbar-gutter: stable;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">scrollbar-gutter</span>: stable;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.39,
                        "interest": 0.91,
                        "usage": 0.19,
                        "retention": 0.82,
                        "positivity": 0.34,
                        "positivityRelative": 0.9,
                        "appreciation": -0.09
                      },
                      "completion": {
                        "count": 7739,
                        "percentageSurvey": 79.73,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.51,
                        "interest": 0.92,
                        "usage": 0.28,
                        "retention": 0.83,
                        "positivity": 0.33,
                        "positivityRelative": 0.9,
                        "appreciation": -0.1
                      },
                      "completion": {
                        "count": 4279,
                        "percentageSurvey": 77.72,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "view_transitions",
                "entity": {
                  "name": "View Transition API",
                  "nameClean": "View Transition API",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-api_viewtransition",
                    "url": "https://caniuse.com/mdn-api_viewtransition"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/View_Transition_API",
                    "title": "View Transition API",
                    "summary": "The View Transition API provides a mechanism for easily creating animated transitions between different website views. This includes animating between DOM states in a single-page app (SPA), and animating the navigation between documents in a multi-page app (MPA)."
                  },
                  "example": {
                    "language": "css",
                    "code": "::view-transition-old(main-image),\n::view-transition-new(main-image) {\n  transform-origin: right top;\n}\n\n::view-transition-new(main-image) {\n  animation: 400ms ease-out both grow;\n}\n\nfigure {\n  view-transition-name: main-image;\n}\n",
                    "codeHighlighted": "::<span class=\"hljs-built_in\">view-transition-old</span>(main-image),\n::<span class=\"hljs-built_in\">view-transition-new</span>(main-image) {\n  <span class=\"hljs-attribute\">transform-origin</span>: right top;\n}\n\n::<span class=\"hljs-built_in\">view-transition-new</span>(main-image) {\n  <span class=\"hljs-attribute\">animation</span>: <span class=\"hljs-number\">400ms</span> ease-out both grow;\n}\n\n<span class=\"hljs-selector-tag\">figure</span> {\n  <span class=\"hljs-attribute\">view-transition-name</span>: main-image;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.53,
                        "interest": 0.95,
                        "usage": 0.11,
                        "retention": 0.86,
                        "positivity": 0.41,
                        "positivityRelative": 0.93,
                        "appreciation": -0.09
                      },
                      "completion": {
                        "count": 7743,
                        "percentageSurvey": 79.78,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.66,
                        "interest": 0.94,
                        "usage": 0.2,
                        "retention": 0.84,
                        "positivity": 0.4,
                        "positivityRelative": 0.91,
                        "appreciation": -0.11
                      },
                      "completion": {
                        "count": 4281,
                        "percentageSurvey": 77.75,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "scroll_driven_animations",
                "entity": {
                  "name": "Scroll-driven animations",
                  "nameClean": "Scroll-driven animations",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_properties_animation-timeline",
                    "url": "https://caniuse.com/mdn-css_properties_animation-timeline"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_scroll-driven_animations",
                    "title": "CSS scroll-driven animations",
                    "summary": "The CSS scroll-driven animations module provides functionality that builds on top of the CSS animations module and Web Animations API. It allows you to animate property values based on a progression along a scroll-based timeline instead of the default time-based document timeline. This means that you can animate an element by scrolling a scrollable element, rather than just by the passing of time."
                  },
                  "example": {
                    "language": "css",
                    "code": "html {\n  scroll-timeline: --page-scroll block;\n}\n\n@keyframes grow-progress {\n  from { transform: scaleX(0); }\n  to { transform: scaleX(1); }\n}\n\n#progress {\n  animation: grow-progress auto linear;\n  animation-timeline: --page-scroll;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">html</span> {\n  <span class=\"hljs-attribute\">scroll-timeline</span>: --page-scroll block;\n}\n\n<span class=\"hljs-keyword\">@keyframes</span> grow-progress {\n  <span class=\"hljs-selector-tag\">from</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scaleX</span>(<span class=\"hljs-number\">0</span>); }\n  <span class=\"hljs-selector-tag\">to</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scaleX</span>(<span class=\"hljs-number\">1</span>); }\n}\n\n<span class=\"hljs-selector-id\">#progress</span> {\n  <span class=\"hljs-attribute\">animation</span>: grow-progress auto linear;\n  <span class=\"hljs-attribute\">animation-timeline</span>: --page-scroll;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.63,
                        "interest": 0.9,
                        "usage": 0.13,
                        "retention": 0.92,
                        "positivity": 0.4,
                        "positivityRelative": 0.9,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 4281,
                        "percentageSurvey": 77.75,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "discrete_properties_animations",
                "entity": {
                  "name": "Discrete Properties Animations",
                  "nameClean": "Discrete Properties Animations",
                  "entityType": "feature",
                  "description": "Animate to and from properties such as `display: none`\n",
                  "descriptionClean": "Animate to and from properties such as display: none",
                  "descriptionHtml": "Animate to and from properties such as <code>display: none</code>\n",
                  "example": {
                    "language": "css",
                    "code": "/*   IS-OPEN STATE   */\ndialog[open] {\n  translate: 0 0;\n}\n\n/*   EXIT STATE   */\ndialog {\n  transition: opacity 1s, display 1s allow-discrete, overlay 1s allow-discrete;\n  translate: 0 100vh;\n}\n\n/*   0. BEFORE-OPEN STATE   */\n@starting-style {\n  dialog[open] {\n    translate: 0 100vh;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-comment\">/*   IS-OPEN STATE   */</span>\ndialog<span class=\"hljs-selector-attr\">[open]</span> {\n  <span class=\"hljs-attribute\">translate</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span>;\n}\n\n<span class=\"hljs-comment\">/*   EXIT STATE   */</span>\ndialog {\n  <span class=\"hljs-attribute\">transition</span>: opacity <span class=\"hljs-number\">1s</span>, display <span class=\"hljs-number\">1s</span> allow-discrete, overlay <span class=\"hljs-number\">1s</span> allow-discrete;\n  <span class=\"hljs-attribute\">translate</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">100vh</span>;\n}\n\n<span class=\"hljs-comment\">/*   0. BEFORE-OPEN STATE   */</span>\n<span class=\"hljs-keyword\">@starting-style</span> {\n  dialog<span class=\"hljs-selector-attr\">[open]</span> {\n    <span class=\"hljs-attribute\">translate</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">100vh</span>;\n  }\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.43,
                        "interest": 0.98,
                        "usage": 0.09,
                        "retention": 0.93,
                        "positivity": 0.44,
                        "positivityRelative": 0.96,
                        "appreciation": -0.05
                      },
                      "completion": {
                        "count": 7726,
                        "percentageSurvey": 79.6,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.48,
                        "interest": 0.96,
                        "usage": 0.19,
                        "retention": 0.89,
                        "positivity": 0.41,
                        "positivityRelative": 0.93,
                        "appreciation": -0.07
                      },
                      "completion": {
                        "count": 4282,
                        "percentageSurvey": 77.77,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "scroll_state",
                "entity": {
                  "name": "Container scroll-state queries",
                  "nameClean": "Container scroll-state queries",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_at-rules_container_scroll-state_queries",
                    "url": "https://caniuse.com/mdn-css_at-rules_container_scroll-state_queries"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_conditional_rules/Container_scroll-state_queries",
                    "title": "Using container scroll-state queries",
                    "summary": "Container scroll-state queries are a type of container query. Rather than selectively applying styles to descendant elements based on the container's size, scroll-state queries allow you to selectively apply styles to descendant elements based on the container's scroll state. This can include whether the container is partially scrolled, snapped to a scroll snap container ancestor, or positioned via position: sticky and stuck to a boundary of a scroll container ancestor."
                  },
                  "example": {
                    "language": "css",
                    "code": "@container scroller scroll-state(scrollable: top) {\n  .back-to-top {\n    translate: 0 0;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@container</span> scroller scroll-state(<span class=\"hljs-attribute\">scrollable</span>: top) {\n  <span class=\"hljs-selector-class\">.back-to-top</span> {\n    <span class=\"hljs-attribute\">translate</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span>;\n  }\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.15,
                        "interest": 0.96,
                        "usage": 0.01,
                        "retention": 0.92,
                        "positivity": 0.37,
                        "positivityRelative": 0.93,
                        "appreciation": -0.04
                      },
                      "completion": {
                        "count": 4264,
                        "percentageSurvey": 77.44,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "css_carousels",
                "entity": {
                  "name": "CSS Carousels",
                  "nameClean": "CSS Carousels",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_selectors_scroll-marker",
                    "url": "https://caniuse.com/mdn-css_selectors_scroll-marker"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_overflow/CSS_carousels",
                    "title": "Creating CSS carousels",
                    "summary": "The CSS overflow module defines features enabling the creation of flexible and accessible pure-CSS carousels with browser-generated and developer-styled scroll buttons and scroll markers. This guide explains how to create a carousel using these features."
                  },
                  "example": {
                    "language": "css",
                    "code": ".carousel {\n  &::scroll-button(left) {\n    content: \"⬅\" / \"Scroll Left\";\n  }\n  \n  &::scroll-button(right) {\n    content: \"⮕\" / \"Scroll Right\";\n  }\n\n  &::scroll-button(*):focus-visible {\n    outline-offset: 5px;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.carousel</span> {\n  &amp;::<span class=\"hljs-built_in\">scroll-button</span>(left) {\n    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot;⬅&quot;</span> / <span class=\"hljs-string\">&quot;Scroll Left&quot;</span>;\n  }\n  \n  &amp;::<span class=\"hljs-built_in\">scroll-button</span>(right) {\n    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot;⮕&quot;</span> / <span class=\"hljs-string\">&quot;Scroll Right&quot;</span>;\n  }\n\n  &amp;::<span class=\"hljs-built_in\">scroll-button</span>(*):focus-visible {\n    <span class=\"hljs-attribute\">outline-offset</span>: <span class=\"hljs-number\">5px</span>;\n  }\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.41,
                        "interest": 0.78,
                        "usage": 0.02,
                        "retention": 0.79,
                        "positivity": 0.38,
                        "positivityRelative": 0.85,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 4289,
                        "percentageSurvey": 77.9,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "line_clamp",
                "entity": {
                  "name": "`line-clamp`",
                  "nameClean": "line-clamp",
                  "nameHtml": "<code>line-clamp</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-line-clamp",
                    "url": "https://caniuse.com/css-line-clamp"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/line-clamp",
                    "title": "line-clamp",
                    "summary": "The line-clamp CSS property allows limiting of the contents of a block to the specified number of lines."
                  },
                  "example": {
                    "language": "css",
                    "code": "p {\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">p</span> {\n  <span class=\"hljs-attribute\">display</span>: -webkit-box;\n  -webkit-<span class=\"hljs-selector-tag\">line</span>-clamp: <span class=\"hljs-number\">2</span>;\n  -webkit-<span class=\"hljs-attribute\">box-orient</span>: vertical;\n  <span class=\"hljs-attribute\">overflow</span>: hidden;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.61,
                        "interest": 0.93,
                        "usage": 0.44,
                        "retention": 0.84,
                        "positivity": 0.35,
                        "positivityRelative": 0.86,
                        "appreciation": -0.09
                      },
                      "completion": {
                        "count": 7538,
                        "percentageSurvey": 77.66,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.65,
                        "interest": 0.93,
                        "usage": 0.47,
                        "retention": 0.82,
                        "positivity": 0.35,
                        "positivityRelative": 0.85,
                        "appreciation": -0.11
                      },
                      "completion": {
                        "count": 4186,
                        "percentageSurvey": 76.03,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "variable_fonts",
                "entity": {
                  "name": "Variable Fonts",
                  "nameClean": "Variable Fonts",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "variable-fonts",
                    "url": "https://caniuse.com/variable-fonts"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_fonts/Variable_fonts_guide",
                    "title": "Variable fonts",
                    "summary": "Variable fonts are an evolution of the OpenType font specification that enables many different variations of a typeface to be incorporated into a single file, rather than having a separate font file for every width, weight, or style. They let you access all the variations contained in a given font file via CSS and a single @font-face reference. This article will give you all you need to know to get you started using variable fonts."
                  },
                  "example": {
                    "language": "css",
                    "code": "@font-face {\n  font-family: \"Fraunces\";\n  src: url(\"fraunces.woff2\") format(\"woff2\");\n  font-weight: 200 700;\n}\n\nh2 {\n  font-family: \"Fraunces\";\n  font-variation-settings: \"wght\" 375, \"SOFT\" 100;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@font-face</span> {\n  <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">&quot;Fraunces&quot;</span>;\n  <span class=\"hljs-attribute\">src</span>: <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">&quot;fraunces.woff2&quot;</span>) <span class=\"hljs-built_in\">format</span>(<span class=\"hljs-string\">&quot;woff2&quot;</span>);\n  <span class=\"hljs-attribute\">font-weight</span>: <span class=\"hljs-number\">200</span> <span class=\"hljs-number\">700</span>;\n}\n\n<span class=\"hljs-selector-tag\">h2</span> {\n  <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">&quot;Fraunces&quot;</span>;\n  <span class=\"hljs-attribute\">font-variation-settings</span>: <span class=\"hljs-string\">&quot;wght&quot;</span> <span class=\"hljs-number\">375</span>, <span class=\"hljs-string\">&quot;SOFT&quot;</span> <span class=\"hljs-number\">100</span>;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.66,
                        "interest": 0.86,
                        "usage": 0.35,
                        "retention": 0.95,
                        "positivity": 0.35,
                        "positivityRelative": 0.89,
                        "appreciation": 0.09
                      },
                      "completion": {
                        "count": 7538,
                        "percentageSurvey": 77.66,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.73,
                        "interest": 0.85,
                        "usage": 0.43,
                        "retention": 0.95,
                        "positivity": 0.35,
                        "positivityRelative": 0.9,
                        "appreciation": 0.1
                      },
                      "completion": {
                        "count": 4182,
                        "percentageSurvey": 75.95,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "text_wrap_balance",
                "entity": {
                  "name": "`text-wrap: balance`",
                  "nameClean": "text-wrap: balance",
                  "nameHtml": "<code>text-wrap: balance</code>",
                  "entityType": "feature",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/text-wrap",
                    "title": "text-wrap",
                    "summary": "The text-wrap CSS shorthand property controls how text inside an element is wrapped. The different values provide:"
                  },
                  "example": {
                    "language": "css",
                    "code": ".balanced {\n  max-inline-size: 50ch;\n  text-wrap: balance;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.balanced</span> {\n  <span class=\"hljs-attribute\">max-inline-size</span>: <span class=\"hljs-number\">50ch</span>;\n  <span class=\"hljs-attribute\">text-wrap</span>: balance;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.63,
                        "interest": 0.94,
                        "usage": 0.37,
                        "retention": 0.97,
                        "positivity": 0.42,
                        "positivityRelative": 0.96,
                        "appreciation": 0.02
                      },
                      "completion": {
                        "count": 7537,
                        "percentageSurvey": 77.65,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.73,
                        "interest": 0.9,
                        "usage": 0.49,
                        "retention": 0.96,
                        "positivity": 0.42,
                        "positivityRelative": 0.95,
                        "appreciation": 0.05
                      },
                      "completion": {
                        "count": 4183,
                        "percentageSurvey": 75.97,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "text_wrap_pretty",
                "entity": {
                  "name": "`text-wrap: pretty`",
                  "nameClean": "text-wrap: pretty",
                  "nameHtml": "<code>text-wrap: pretty</code>",
                  "entityType": "feature",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/text-wrap",
                    "title": "text-wrap",
                    "summary": "The text-wrap CSS shorthand property controls how text inside an element is wrapped. The different values provide:"
                  },
                  "example": {
                    "language": "css",
                    "code": ".pretty {\n  text-wrap: pretty;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.pretty</span> {\n  <span class=\"hljs-attribute\">text-wrap</span>: pretty;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.48,
                        "interest": 0.95,
                        "usage": 0.24,
                        "retention": 0.96,
                        "positivity": 0.42,
                        "positivityRelative": 0.97,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 7538,
                        "percentageSurvey": 77.66,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.68,
                        "interest": 0.93,
                        "usage": 0.41,
                        "retention": 0.95,
                        "positivity": 0.41,
                        "positivityRelative": 0.95,
                        "appreciation": 0.02
                      },
                      "completion": {
                        "count": 4182,
                        "percentageSurvey": 75.95,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "hanging_punctuation",
                "entity": {
                  "name": "`hanging-punctuation`",
                  "nameClean": "hanging-punctuation",
                  "nameHtml": "<code>hanging-punctuation</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-hanging-punctuation",
                    "url": "https://caniuse.com/css-hanging-punctuation"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/hanging-punctuation",
                    "title": "hanging-punctuation",
                    "summary": "The hanging-punctuation CSS property specifies whether a punctuation mark should hang at the start or end of a line of text. Hanging punctuation may be placed outside the line box."
                  },
                  "example": {
                    "language": "css",
                    "code": "p.hanging {\n  hanging-punctuation: first last;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-class\">.hanging</span> {\n  <span class=\"hljs-attribute\">hanging-punctuation</span>: first last;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.14,
                        "interest": 0.92,
                        "usage": 0.02,
                        "retention": 0.9,
                        "positivity": 0.37,
                        "positivityRelative": 0.93,
                        "appreciation": -0.02
                      },
                      "completion": {
                        "count": 7529,
                        "percentageSurvey": 77.57,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.23,
                        "interest": 0.91,
                        "usage": 0.04,
                        "retention": 0.87,
                        "positivity": 0.34,
                        "positivityRelative": 0.92,
                        "appreciation": -0.04
                      },
                      "completion": {
                        "count": 4172,
                        "percentageSurvey": 75.77,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "initial_letter",
                "entity": {
                  "name": "`initial-letter`",
                  "nameClean": "initial-letter",
                  "nameHtml": "<code>initial-letter</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-initial-letter",
                    "url": "https://caniuse.com/css-initial-letter"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/initial-letter",
                    "title": "initial-letter",
                    "summary": "The initial-letter CSS property sets the size and sink for dropped, raised, and sunken initial letters. This property applies to ::first-letter pseudo-elements and inline-level first children of block containers."
                  },
                  "example": {
                    "language": "css",
                    "code": ".intro {\n  /* Initial letter occupies 3 lines */\n  initial-letter: 3;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.intro</span> {\n  <span class=\"hljs-comment\">/* Initial letter occupies 3 lines */</span>\n  <span class=\"hljs-attribute\">initial-letter</span>: <span class=\"hljs-number\">3</span>;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.37,
                        "interest": 0.83,
                        "usage": 0.09,
                        "retention": 0.92,
                        "positivity": 0.35,
                        "positivityRelative": 0.89,
                        "appreciation": 0.08
                      },
                      "completion": {
                        "count": 7533,
                        "percentageSurvey": 77.61,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.47,
                        "interest": 0.77,
                        "usage": 0.12,
                        "retention": 0.9,
                        "positivity": 0.31,
                        "positivityRelative": 0.85,
                        "appreciation": 0.12
                      },
                      "completion": {
                        "count": 4184,
                        "percentageSurvey": 75.99,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "text_box_trim",
                "entity": {
                  "name": "`text-box-edge`/`text-box-trim`",
                  "nameClean": "text-box-edge/text-box-trim",
                  "nameHtml": "<code>text-box-edge</code>/<code>text-box-trim</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-text-box-trim",
                    "url": "https://caniuse.com/css-text-box-trim"
                  },
                  "example": {
                    "language": "css",
                    "code": "p {\n  text-box-edge: cap alphabetic;\n  text-box-trim: trim-both;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">p</span> {\n  <span class=\"hljs-selector-tag\">text</span>-box-edge: cap alphabetic;\n  <span class=\"hljs-selector-tag\">text</span>-box-trim: trim-both;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.23,
                        "interest": 0.96,
                        "usage": 0.05,
                        "retention": 0.91,
                        "positivity": 0.36,
                        "positivityRelative": 0.93,
                        "appreciation": -0.06
                      },
                      "completion": {
                        "count": 4167,
                        "percentageSurvey": 75.68,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "comparison_functions",
                "entity": {
                  "name": "Comparison Functions",
                  "nameClean": "Comparison Functions",
                  "entityType": "feature",
                  "description": "`min()`, `max()`, `clamp()`\n",
                  "descriptionClean": "min(), max(), clamp()",
                  "descriptionHtml": "<code>min()</code>, <code>max()</code>, <code>clamp()</code>\n",
                  "caniuse": {
                    "name": "css-math-functions",
                    "url": "https://caniuse.com/css-math-functions"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Values_and_Units/CSS_Value_Functions",
                    "title": "CSS value functions",
                    "summary": "CSS value functions are statements that invoke special data processing or calculations to return a CSS value for a CSS property. CSS value functions represent more complex data types and they may take some input arguments to calculate the return value."
                  },
                  "example": {
                    "language": "css",
                    "code": ".element {\n  width: clamp(100px, 50vw, 600px);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.element</span> {\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-built_in\">clamp</span>(<span class=\"hljs-number\">100px</span>, <span class=\"hljs-number\">50vw</span>, <span class=\"hljs-number\">600px</span>);\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.88,
                        "interest": 0.96,
                        "usage": 0.65,
                        "retention": 0.95,
                        "positivity": 0.42,
                        "positivityRelative": 0.95,
                        "appreciation": -0.01
                      },
                      "completion": {
                        "count": 7338,
                        "percentageSurvey": 75.6,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.89,
                        "interest": 0.94,
                        "usage": 0.69,
                        "retention": 0.95,
                        "positivity": 0.41,
                        "positivityRelative": 0.95,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 4134,
                        "percentageSurvey": 75.08,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "trigonometric_functions",
                "entity": {
                  "name": "Trigonometric Functions",
                  "nameClean": "Trigonometric Functions",
                  "entityType": "feature",
                  "description": "`sin()`, `cos()`, `tan()`…\n",
                  "descriptionClean": "sin(), cos(), tan()…",
                  "descriptionHtml": "<code>sin()</code>, <code>cos()</code>, <code>tan()</code>…\n",
                  "caniuse": {
                    "name": "css-math-functions",
                    "url": "https://caniuse.com/css-math-functions"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Values_and_Units/CSS_Value_Functions",
                    "title": "CSS value functions",
                    "summary": "CSS value functions are statements that invoke special data processing or calculations to return a CSS value for a CSS property. CSS value functions represent more complex data types and they may take some input arguments to calculate the return value."
                  },
                  "example": {
                    "language": "css",
                    "code": "div {\n  width: calc(100px * cos(45deg));\n  height: calc(100px * cos(45deg));\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">div</span> {\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-built_in\">calc</span>(<span class=\"hljs-number\">100px</span> * <span class=\"hljs-built_in\">cos</span>(<span class=\"hljs-number\">45deg</span>));\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-built_in\">calc</span>(<span class=\"hljs-number\">100px</span> * <span class=\"hljs-built_in\">cos</span>(<span class=\"hljs-number\">45deg</span>));\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.75,
                        "interest": 0.69,
                        "usage": 0.15,
                        "retention": 0.97,
                        "positivity": 0.26,
                        "positivityRelative": 0.75,
                        "appreciation": 0.28
                      },
                      "completion": {
                        "count": 7341,
                        "percentageSurvey": 75.63,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.79,
                        "interest": 0.65,
                        "usage": 0.16,
                        "retention": 0.97,
                        "positivity": 0.24,
                        "positivityRelative": 0.72,
                        "appreciation": 0.31
                      },
                      "completion": {
                        "count": 4127,
                        "percentageSurvey": 74.95,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "stepped_value_functions",
                "entity": {
                  "name": "Stepped Value Functions",
                  "nameClean": "Stepped Value Functions",
                  "entityType": "feature",
                  "description": "`round()`, `mod()`, `rem()`\n",
                  "descriptionClean": "round(), mod(), rem()",
                  "descriptionHtml": "<code>round()</code>, <code>mod()</code>, <code>rem()</code>\n",
                  "caniuse": {
                    "name": "mdn-css_types_round",
                    "url": "https://caniuse.com/mdn-css_types_round"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Values_and_Units/CSS_Value_Functions",
                    "title": "CSS value functions",
                    "summary": "CSS value functions are statements that invoke special data processing or calculations to return a CSS value for a CSS property. CSS value functions represent more complex data types and they may take some input arguments to calculate the return value."
                  },
                  "example": {
                    "language": "css",
                    "code": "div {\n  width: round(var(--width), 50px);\n  line-height: mod(7, 2); /* 1 */\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">div</span> {\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-built_in\">round</span>(<span class=\"hljs-built_in\">var</span>(--width), <span class=\"hljs-number\">50px</span>);\n  <span class=\"hljs-attribute\">line-height</span>: <span class=\"hljs-built_in\">mod</span>(<span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">2</span>); <span class=\"hljs-comment\">/* 1 */</span>\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.37,
                        "interest": 0.87,
                        "usage": 0.08,
                        "retention": 0.98,
                        "positivity": 0.33,
                        "positivityRelative": 0.9,
                        "appreciation": 0.1
                      },
                      "completion": {
                        "count": 7335,
                        "percentageSurvey": 75.57,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.46,
                        "interest": 0.84,
                        "usage": 0.12,
                        "retention": 0.97,
                        "positivity": 0.31,
                        "positivityRelative": 0.89,
                        "appreciation": 0.12
                      },
                      "completion": {
                        "count": 4120,
                        "percentageSurvey": 74.83,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "sign_related_functions",
                "entity": {
                  "name": "Sign-related Functions",
                  "nameClean": "Sign-related Functions",
                  "entityType": "feature",
                  "description": "`sign()`, `abs()`\n",
                  "descriptionClean": "sign(), abs()",
                  "descriptionHtml": "<code>sign()</code>, <code>abs()</code>\n",
                  "caniuse": {
                    "name": "css-math-functions",
                    "url": "https://caniuse.com/css-math-functions"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/sign",
                    "title": "sign()",
                    "summary": "The sign() CSS function contains one calculation, and returns -1 if the numeric value of the argument is negative, +1 if the numeric value of the argument is positive, 0⁺ if the numeric value of the argument is 0⁺, and 0⁻ if the numeric value of the argument is 0⁻."
                  },
                  "example": {
                    "language": "css",
                    "code": "div {\n  top: sign(20vh - 100px);\n  width: abs(20% - 100px);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">div</span> {\n  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-built_in\">sign</span>(<span class=\"hljs-number\">20vh</span> - <span class=\"hljs-number\">100px</span>);\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-built_in\">abs</span>(<span class=\"hljs-number\">20%</span> - <span class=\"hljs-number\">100px</span>);\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.3,
                        "interest": 0.81,
                        "usage": 0.05,
                        "retention": 0.98,
                        "positivity": 0.3,
                        "positivityRelative": 0.85,
                        "appreciation": 0.17
                      },
                      "completion": {
                        "count": 7319,
                        "percentageSurvey": 75.41,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.41,
                        "interest": 0.77,
                        "usage": 0.08,
                        "retention": 0.98,
                        "positivity": 0.27,
                        "positivityRelative": 0.84,
                        "appreciation": 0.2
                      },
                      "completion": {
                        "count": 4114,
                        "percentageSurvey": 74.72,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "exponential_functions",
                "entity": {
                  "name": "Exponential Functions",
                  "nameClean": "Exponential Functions",
                  "entityType": "feature",
                  "description": "`pow()`, `sqrt()`, `exp()`, `log()`, `hypot()`\n",
                  "descriptionClean": "pow(), sqrt(), exp(), log(), hypot()",
                  "descriptionHtml": "<code>pow()</code>, <code>sqrt()</code>, <code>exp()</code>, <code>log()</code>, <code>hypot()</code>\n",
                  "caniuse": {
                    "name": "css-math-functions",
                    "url": "https://caniuse.com/css-math-functions"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/pow",
                    "title": "pow()",
                    "summary": "The pow() CSS function is an exponential function that returns the value of a base raised to the power of a number."
                  },
                  "example": {
                    "language": "css",
                    "code": "h1 {\n  font-size: calc(1rem * pow(1.5, 4));\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">h1</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-built_in\">calc</span>(<span class=\"hljs-number\">1rem</span> * <span class=\"hljs-built_in\">pow</span>(<span class=\"hljs-number\">1.5</span>, <span class=\"hljs-number\">4</span>));\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.43,
                        "interest": 0.75,
                        "usage": 0.06,
                        "retention": 0.96,
                        "positivity": 0.26,
                        "positivityRelative": 0.78,
                        "appreciation": 0.2
                      },
                      "completion": {
                        "count": 7321,
                        "percentageSurvey": 75.43,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.52,
                        "interest": 0.75,
                        "usage": 0.08,
                        "retention": 0.98,
                        "positivity": 0.23,
                        "positivityRelative": 0.77,
                        "appreciation": 0.23
                      },
                      "completion": {
                        "count": 4114,
                        "percentageSurvey": 74.72,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "feature_support_queries",
                "entity": {
                  "name": "`@supports`",
                  "nameClean": "@supports",
                  "nameHtml": "<code>@supports</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-supports-api",
                    "url": "https://caniuse.com/css-supports-api"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@supports",
                    "title": "@supports",
                    "summary": "The @supports CSS at-rule lets you specify CSS declarations that depend on a browser's support for CSS features.\nUsing this at-rule is commonly called a feature query.\nThe rule must be placed at the top level of your code or nested inside any other conditional group at-rule."
                  },
                  "example": {
                    "language": "css",
                    "code": "@supports (display: table-cell) and (display: list-item) {\n  //...\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@supports</span> (<span class=\"hljs-attribute\">display</span>: table-cell) <span class=\"hljs-keyword\">and</span> (<span class=\"hljs-attribute\">display</span>: list-item) {\n  //...\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.71,
                        "interest": 0.9,
                        "usage": 0.41,
                        "retention": 0.97,
                        "positivity": 0.37,
                        "positivityRelative": 0.93,
                        "appreciation": 0.06
                      },
                      "completion": {
                        "count": 7278,
                        "percentageSurvey": 74.98,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.79,
                        "interest": 0.91,
                        "usage": 0.49,
                        "retention": 0.97,
                        "positivity": 0.38,
                        "positivityRelative": 0.94,
                        "appreciation": 0.06
                      },
                      "completion": {
                        "count": 4073,
                        "percentageSurvey": 73.97,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "at_property",
                "entity": {
                  "name": "`@property`",
                  "nameClean": "@property",
                  "nameHtml": "<code>@property</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_at-rules_property",
                    "url": "https://caniuse.com/mdn-css_at-rules_property"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@property",
                    "title": "@property",
                    "summary": "The @property CSS at-rule is part of the CSS Houdini set of APIs. It allows developers to explicitly define CSS custom properties, allowing for property type checking and constraining, setting default values, and defining whether a custom property can inherit values or not."
                  },
                  "example": {
                    "language": "css",
                    "code": "@property --property-name {\n  syntax: \"<color>\";\n  inherits: false;\n  initial-value: #c0ffee;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@property</span> --property-name {\n  syntax: <span class=\"hljs-string\">&quot;&lt;color&gt;&quot;</span>;\n  inherits: false;\n  initial-value: <span class=\"hljs-number\">#c0ffee</span>;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.57,
                        "interest": 0.92,
                        "usage": 0.14,
                        "retention": 0.92,
                        "positivity": 0.38,
                        "positivityRelative": 0.92,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 7277,
                        "percentageSurvey": 74.97,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.69,
                        "interest": 0.91,
                        "usage": 0.25,
                        "retention": 0.92,
                        "positivity": 0.37,
                        "positivityRelative": 0.91,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 4071,
                        "percentageSurvey": 73.94,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "has_selector",
                "entity": {
                  "name": "`:has()`",
                  "nameClean": ":has()",
                  "nameHtml": "<code>:has()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-has",
                    "url": "https://caniuse.com/css-has"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/:has",
                    "title": ":has()",
                    "summary": "The functional :has() CSS pseudo-class represents an element if any of the relative selectors that are passed as an argument match at least one element when anchored against this element. This pseudo-class presents a way of selecting a parent element or a previous sibling element with respect to a reference element by taking a relative selector list as an argument."
                  },
                  "example": {
                    "language": "css",
                    "code": "a:has(> img) {\n  border: 2px solid grey;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">a</span><span class=\"hljs-selector-pseudo\">:has</span>(&gt; <span class=\"hljs-selector-tag\">img</span>) {\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">2px</span> solid grey;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.94,
                        "interest": 0.97,
                        "usage": 0.73,
                        "retention": 0.98,
                        "positivity": 0.49,
                        "positivityRelative": 0.98,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 7277,
                        "percentageSurvey": 74.97,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.95,
                        "interest": 0.95,
                        "usage": 0.8,
                        "retention": 0.99,
                        "positivity": 0.51,
                        "positivityRelative": 0.99,
                        "appreciation": 0.03
                      },
                      "completion": {
                        "count": 4085,
                        "percentageSurvey": 74.19,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "where_selector",
                "entity": {
                  "name": "`:where()`",
                  "nameClean": ":where()",
                  "nameHtml": "<code>:where()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-where",
                    "url": "https://caniuse.com/css-where"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/:where",
                    "title": ":where()",
                    "summary": "The :where() CSS pseudo-class function takes a selector list as its argument, and selects any element that can be selected by one of the selectors in that list."
                  },
                  "example": {
                    "language": "css",
                    "code": ":where(header, main, footer) p:hover {\n  color: red;\n  cursor: pointer;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-pseudo\">:where</span>(<span class=\"hljs-selector-tag\">header</span>, <span class=\"hljs-selector-tag\">main</span>, <span class=\"hljs-selector-tag\">footer</span>) <span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-pseudo\">:hover</span> {\n  <span class=\"hljs-attribute\">color</span>: red;\n  <span class=\"hljs-attribute\">cursor</span>: pointer;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.7,
                        "interest": 0.96,
                        "usage": 0.35,
                        "retention": 0.98,
                        "positivity": 0.43,
                        "positivityRelative": 0.97,
                        "appreciation": 0.02
                      },
                      "completion": {
                        "count": 7270,
                        "percentageSurvey": 74.9,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.75,
                        "interest": 0.94,
                        "usage": 0.45,
                        "retention": 0.99,
                        "positivity": 0.43,
                        "positivityRelative": 0.97,
                        "appreciation": 0.05
                      },
                      "completion": {
                        "count": 4072,
                        "percentageSurvey": 73.96,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "cascade_layers",
                "entity": {
                  "name": "Cascade Layers",
                  "nameClean": "Cascade Layers",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-cascade-layers",
                    "url": "https://caniuse.com/css-cascade-layers"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@layer",
                    "title": "@layer",
                    "summary": "The @layer CSS at-rule is used to declare a cascade layer and can also be used to define the order of precedence in case of multiple cascade layers."
                  },
                  "example": {
                    "language": "css",
                    "code": "@layer layer-name {rules}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@layer</span> layer-name {rules}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.6,
                        "interest": 0.89,
                        "usage": 0.18,
                        "retention": 0.9,
                        "positivity": 0.37,
                        "positivityRelative": 0.9,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 7271,
                        "percentageSurvey": 74.91,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.71,
                        "interest": 0.85,
                        "usage": 0.29,
                        "retention": 0.91,
                        "positivity": 0.36,
                        "positivityRelative": 0.88,
                        "appreciation": 0.06
                      },
                      "completion": {
                        "count": 4068,
                        "percentageSurvey": 73.88,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "css_nesting",
                "entity": {
                  "name": "CSS Nesting",
                  "nameClean": "CSS Nesting",
                  "entityType": "feature",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_nesting",
                    "title": "CSS nesting",
                    "summary": "The CSS nesting module defines a syntax for nesting selectors, providing the ability to nest one style rule inside another, with the selector of the child rule relative to the selector of the parent rule."
                  },
                  "example": {
                    "language": "css",
                    "code": ".parent {\n  color: blue;\n\n  .child {\n    color: red;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">color</span>: blue;\n\n  <span class=\"hljs-selector-class\">.child</span> {\n    <span class=\"hljs-attribute\">color</span>: red;\n  }\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.91,
                        "interest": 0.88,
                        "usage": 0.51,
                        "retention": 0.95,
                        "positivity": 0.46,
                        "positivityRelative": 0.93,
                        "appreciation": 0.06
                      },
                      "completion": {
                        "count": 7297,
                        "percentageSurvey": 75.18,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.92,
                        "interest": 0.86,
                        "usage": 0.64,
                        "retention": 0.95,
                        "positivity": 0.47,
                        "positivityRelative": 0.93,
                        "appreciation": 0.09
                      },
                      "completion": {
                        "count": 4087,
                        "percentageSurvey": 74.23,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "image_set",
                "entity": {
                  "name": "`image-set()`",
                  "nameClean": "image-set()",
                  "nameHtml": "<code>image-set()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-image-set",
                    "url": "https://caniuse.com/css-image-set"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/image/image-set",
                    "title": "image-set()",
                    "summary": "The image-set() CSS functional notation is a method of letting the browser pick the most appropriate CSS image from a given set, primarily for high pixel density screens."
                  },
                  "example": {
                    "language": "css",
                    "code": ".box {\n  background-image: image-set(\n    url(\"small-balloons.jpg\") 1x,\n    url(\"large-balloons.jpg\") 2x);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.box</span> {\n  <span class=\"hljs-attribute\">background-image</span>: <span class=\"hljs-built_in\">image-set</span>(\n    <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">&quot;small-balloons.jpg&quot;</span>) <span class=\"hljs-number\">1</span>x,\n    <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">&quot;large-balloons.jpg&quot;</span>) <span class=\"hljs-number\">2</span>x);\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.48,
                        "interest": 0.92,
                        "usage": 0.17,
                        "retention": 0.89,
                        "positivity": 0.38,
                        "positivityRelative": 0.93,
                        "appreciation": -0.04
                      },
                      "completion": {
                        "count": 7280,
                        "percentageSurvey": 75.01,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.53,
                        "interest": 0.88,
                        "usage": 0.19,
                        "retention": 0.91,
                        "positivity": 0.35,
                        "positivityRelative": 0.92,
                        "appreciation": 0.02
                      },
                      "completion": {
                        "count": 4075,
                        "percentageSurvey": 74.01,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "at_scope",
                "entity": {
                  "name": "`@scope`",
                  "nameClean": "@scope",
                  "nameHtml": "<code>@scope</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-cascade-scope",
                    "url": "https://caniuse.com/css-cascade-scope"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@scope",
                    "title": "@scope",
                    "summary": "The @scope CSS at-rule enables you to select elements in specific DOM subtrees, targeting elements precisely without writing overly-specific selectors that are hard to override, and without coupling your selectors too tightly to the DOM structure."
                  },
                  "example": {
                    "language": "css",
                    "code": "@scope (.card) {\n  :scope {\n    padding: 1rem;\n  }\n\n  .title {\n    font-size: 1.2rem;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@scope</span> (.card) {\n  <span class=\"hljs-selector-pseudo\">:scope</span> {\n    <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">1rem</span>;\n  }\n\n  <span class=\"hljs-selector-class\">.title</span> {\n    <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">1.2rem</span>;\n  }\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.41,
                        "interest": 0.93,
                        "usage": 0.04,
                        "retention": 0.91,
                        "positivity": 0.39,
                        "positivityRelative": 0.94,
                        "appreciation": -0.02
                      },
                      "completion": {
                        "count": 7282,
                        "percentageSurvey": 75.03,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.46,
                        "interest": 0.9,
                        "usage": 0.07,
                        "retention": 0.93,
                        "positivity": 0.37,
                        "positivityRelative": 0.92,
                        "appreciation": 0.03
                      },
                      "completion": {
                        "count": 4076,
                        "percentageSurvey": 74.03,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "nth_child_of_s",
                "entity": {
                  "name": "`nth-child of S`",
                  "nameClean": "nth-child of S",
                  "nameHtml": "<code>nth-child of S</code>",
                  "entityType": "feature",
                  "description": "Pre-filter a set of child elements before applying `nth-child` to it.\n",
                  "descriptionClean": "Pre-filter a set of child elements before applying nth-child to it.",
                  "descriptionHtml": "Pre-filter a set of child elements before applying <code>nth-child</code> to it.\n",
                  "example": {
                    "language": "css",
                    "code": ":nth-child(2 of .highlight)\n  border: 2px red solid;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-pseudo\">:nth-child</span>(<span class=\"hljs-number\">2</span> of <span class=\"hljs-selector-class\">.highlight</span>)\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">2px</span> red solid;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "css2024",
                      "ratios": {
                        "awareness": 0.35,
                        "interest": 0.96,
                        "usage": 0.15,
                        "retention": 0.95,
                        "positivity": 0.43,
                        "positivityRelative": 0.96,
                        "appreciation": -0.02
                      },
                      "completion": {
                        "count": 7271,
                        "percentageSurvey": 74.91,
                        "total": 9706
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.41,
                        "interest": 0.94,
                        "usage": 0.19,
                        "retention": 0.95,
                        "positivity": 0.41,
                        "positivityRelative": 0.95,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 4080,
                        "percentageSurvey": 74.1,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "field_sizing",
                "entity": {
                  "name": "`field-sizing`",
                  "nameClean": "field-sizing",
                  "nameHtml": "<code>field-sizing</code>",
                  "entityType": "feature",
                  "description": "Allows form controls such as `<textarea>` to be sized based on their content.\n",
                  "descriptionClean": "Allows form controls such as <textarea> to be sized based on their content.",
                  "descriptionHtml": "Allows form controls such as <code>&lt;textarea&gt;</code> to be sized based on their content.\n",
                  "caniuse": {
                    "name": "mdn-css_properties_field-sizing",
                    "url": "https://caniuse.com/mdn-css_properties_field-sizing"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/field-sizing",
                    "title": "field-sizing",
                    "summary": "The field-sizing CSS property enables you to control the sizing behavior of elements that are given a default preferred size, such as form control elements. This property enables you to override the default sizing behavior, allowing form controls to adjust in size to fit their contents."
                  },
                  "example": {
                    "language": "css",
                    "code": "input,\ntextarea {\n  field-sizing: content;\n  min-width: 50px;\n  max-width: 350px;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">input</span>,\n<span class=\"hljs-selector-tag\">textarea</span> {\n  <span class=\"hljs-attribute\">field-sizing</span>: content;\n  <span class=\"hljs-attribute\">min-width</span>: <span class=\"hljs-number\">50px</span>;\n  <span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">350px</span>;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.28,
                        "interest": 0.96,
                        "usage": 0.09,
                        "retention": 0.96,
                        "positivity": 0.39,
                        "positivityRelative": 0.96,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 4074,
                        "percentageSurvey": 73.99,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "target_text_selector",
                "entity": {
                  "name": "`::target-text`",
                  "nameClean": "::target-text",
                  "nameHtml": "<code>::target-text</code>",
                  "entityType": "feature",
                  "description": "The `::target-text` pseudo-element allows you to style text highlighted by a URL text fragment such as `#:~:text=snippet`.\n",
                  "descriptionClean": "The ::target-text pseudo-element allows you to style text highlighted by a URL text fragment such as #:~:text=snippet.",
                  "descriptionHtml": "The <code>::target-text</code> pseudo-element allows you to style text highlighted by a URL text fragment such as <code>#:~:text=snippet</code>.\n",
                  "caniuse": {
                    "name": "mdn-css_selectors_target-text",
                    "url": "https://caniuse.com/mdn-css_selectors_target-text"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/::target-text",
                    "title": "::target-text",
                    "summary": "The ::target-text CSS pseudo-element represents the text that has been scrolled to if the browser supports text fragments. It allows authors to choose how to highlight that section of text."
                  },
                  "example": {
                    "language": "css",
                    "code": "::target-text {\n  background-color: pink;\n}\n",
                    "codeHighlighted": "::target-text {\n  <span class=\"hljs-attribute\">background-color</span>: pink;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.17,
                        "interest": 0.91,
                        "usage": 0.03,
                        "retention": 0.96,
                        "positivity": 0.34,
                        "positivityRelative": 0.94,
                        "appreciation": 0.05
                      },
                      "completion": {
                        "count": 4052,
                        "percentageSurvey": 73.59,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "at_function",
                "entity": {
                  "name": "`@function`",
                  "nameClean": "@function",
                  "nameHtml": "<code>@function</code>",
                  "entityType": "feature",
                  "description": "The `@function` CSS at-rule defines a custom function that takes CSS values or custom properties as arguments, and returns a CSS value.\n",
                  "descriptionClean": "The @function CSS at-rule defines a custom function that takes CSS values or custom properties as arguments, and returns a CSS value.",
                  "descriptionHtml": "The <code>@function</code> CSS at-rule defines a custom function that takes CSS values or custom properties as arguments, and returns a CSS value.\n",
                  "example": {
                    "language": "css",
                    "code": "@function --negate(--value) {\n  result: calc(-1 * var(--value));\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@function</span> --negate(--value) {\n  result: <span class=\"hljs-built_in\">calc</span>(-<span class=\"hljs-number\">1</span> * <span class=\"hljs-built_in\">var</span>(--value));\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.37,
                        "interest": 0.93,
                        "usage": 0.02,
                        "retention": 0.95,
                        "positivity": 0.4,
                        "positivityRelative": 0.93,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 4070,
                        "percentageSurvey": 73.92,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "display_contents",
                "entity": {
                  "name": "`display: contents`",
                  "nameClean": "display: contents",
                  "nameHtml": "<code>display: contents</code>",
                  "entityType": "feature",
                  "description": "Sets an element to display only its contents, not itself.\n",
                  "descriptionClean": "Sets an element to display only its contents, not itself.\n"
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.56,
                        "interest": 0.93,
                        "usage": 0.33,
                        "retention": 0.89,
                        "positivity": 0.38,
                        "positivityRelative": 0.93,
                        "appreciation": -0.04
                      },
                      "completion": {
                        "count": 4070,
                        "percentageSurvey": 73.92,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "advanced_attr_function",
                "entity": {
                  "name": "Advanced `attr()`",
                  "nameClean": "Advanced attr()",
                  "nameHtml": "Advanced <code>attr()</code>",
                  "entityType": "feature",
                  "description": "Support for properties other than content",
                  "descriptionClean": "Support for properties other than content",
                  "example": {
                    "language": "css",
                    "code": ".title {\n  background-color: attr(data-color type(<color>));\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.title</span> {\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">attr</span>(data-color <span class=\"hljs-built_in\">type</span>(&lt;color&gt;));\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.55,
                        "interest": 0.97,
                        "usage": 0.13,
                        "retention": 0.93,
                        "positivity": 0.4,
                        "positivityRelative": 0.95,
                        "appreciation": -0.05
                      },
                      "completion": {
                        "count": 4071,
                        "percentageSurvey": 73.94,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "if_function",
                "entity": {
                  "name": "`if()`",
                  "nameClean": "if()",
                  "nameHtml": "<code>if()</code>",
                  "entityType": "feature",
                  "description": "The `if()` CSS function is an inline conditional value that returns a value based on a set of conditions.\n",
                  "descriptionClean": "The if() CSS function is an inline conditional value that returns a value based on a set of conditions.",
                  "descriptionHtml": "The <code>if()</code> CSS function is an inline conditional value that returns a value based on a set of conditions.\n",
                  "example": {
                    "language": "css",
                    "code": "div {\n  color: var(--color);\n  background-color: if(style(--color: white): black; else: white);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">div</span> {\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-built_in\">var</span>(--color);\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">if</span>(<span class=\"hljs-built_in\">style</span>(--color: white): black; else: white);\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.47,
                        "interest": 0.92,
                        "usage": 0.02,
                        "retention": 0.9,
                        "positivity": 0.42,
                        "positivityRelative": 0.93,
                        "appreciation": -0.02
                      },
                      "completion": {
                        "count": 4079,
                        "percentageSurvey": 74.08,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "sibling_index",
                "entity": {
                  "name": "`sibling-index()`",
                  "nameClean": "sibling-index()",
                  "nameHtml": "<code>sibling-index()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_types_sibling-index",
                    "url": "https://caniuse.com/mdn-css_types_sibling-index"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/sibling-index",
                    "title": "sibling-index()",
                    "summary": "The sibling-index() CSS function returns an integer representing the position of the current element in the DOM tree relative to all its sibling elements. The returned value is the index number of the contextual child's position among all the sibling elements within a parent element, with the first child returning 1 and the last child, returning Element.children.length."
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.15,
                        "interest": 0.97,
                        "usage": 0.01,
                        "retention": 0.96,
                        "positivity": 0.33,
                        "positivityRelative": 0.93,
                        "appreciation": -0.02
                      },
                      "completion": {
                        "count": 4058,
                        "percentageSurvey": 73.7,
                        "total": 5506
                      }
                    }
                  ]
                }
              },
              {
                "id": "sibling_count",
                "entity": {
                  "name": "`sibling-count()`",
                  "nameClean": "sibling-count()",
                  "nameHtml": "<code>sibling-count()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_types_sibling-count",
                    "url": "https://caniuse.com/mdn-css_types_sibling-count"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/sibling-count",
                    "title": "sibling-count()",
                    "summary": "The sibling-count() CSS function returns an integer representing the total number of direct child DOM elements of the parent element on which it is used."
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "css2025",
                      "ratios": {
                        "awareness": 0.16,
                        "interest": 0.97,
                        "usage": 0.01,
                        "retention": 0.96,
                        "positivity": 0.33,
                        "positivityRelative": 0.93,
                        "appreciation": -0.02
                      },
                      "completion": {
                        "count": 4055,
                        "percentageSurvey": 73.65,
                        "total": 5506
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  }
}