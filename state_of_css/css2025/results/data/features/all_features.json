{
  "dataAPI": {
    "surveys": {
      "state_of_css": {
        "css2025": {
          "features": {
            "all_features": [
              {
                "id": "subgrid",
                "_metadata": {
                  "sectionId": "layout"
                },
                "entity": {
                  "name": "Subgrid",
                  "nameClean": "Subgrid",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-subgrid",
                    "url": "https://caniuse.com/css-subgrid"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_grid_layout/Subgrid",
                    "title": "Subgrid",
                    "summary": "The CSS grid layout module includes a subgrid value for grid-template-columns and grid-template-rows. This guide details what subgrid does and gives some use cases and design patterns that the feature solves."
                  },
                  "example": {
                    "language": "css",
                    "code": ".wrapper {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n}\n\n.item {\n  grid-row: 1 / 4;\n  display: grid;\n  grid-template-rows: subgrid;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.wrapper</span> {\n  <span class=\"hljs-attribute\">display</span>: grid;\n  <span class=\"hljs-attribute\">grid-template-columns</span>: <span class=\"hljs-number\">1</span>fr <span class=\"hljs-number\">1</span>fr;\n}\n\n<span class=\"hljs-selector-class\">.item</span> {\n  <span class=\"hljs-attribute\">grid-row</span>: <span class=\"hljs-number\">1</span> / <span class=\"hljs-number\">4</span>;\n  <span class=\"hljs-attribute\">display</span>: grid;\n  <span class=\"hljs-attribute\">grid-template-rows</span>: subgrid;\n}"
                  },
                  "webFeature": {
                    "id": "subgrid",
                    "description_html": "The <code>subgrid</code> value for the <code>grid-template-columns</code> and <code>grid-template-rows</code> properties allows a grid item to inherit the grid definition of its parent grid container.",
                    "group": [
                      "grid"
                    ],
                    "name": "Subgrid",
                    "spec": [
                      "https://drafts.csswg.org/css-grid-2/#subgrids"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2023-09-15",
                      "support": {
                        "chrome": "117",
                        "chrome_android": "117",
                        "edge": "117",
                        "firefox": "71",
                        "firefox_android": "79",
                        "safari": "16",
                        "safari_ios": "16"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 7
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.9,
                      "interest": 1,
                      "usage": 0.42,
                      "retention": 1,
                      "positivity": 0.53,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 24,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 17,
                            "id": "neutral",
                            "percentageBucket": 70.83,
                            "percentageQuestion": 6.83,
                            "percentageSurvey": 6.8
                          },
                          {
                            "count": 7,
                            "id": "insufficient_data",
                            "percentageBucket": 29
                          }
                        ],
                        "percentageQuestion": 9.64,
                        "percentageSurvey": 9.6
                      },
                      {
                        "count": 117,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 67,
                            "id": "positive",
                            "percentageBucket": 57.26,
                            "percentageQuestion": 26.91,
                            "percentageSurvey": 26.8
                          },
                          {
                            "count": 50,
                            "id": "insufficient_data",
                            "percentageBucket": 43
                          }
                        ],
                        "percentageQuestion": 46.99,
                        "percentageSurvey": 46.8
                      },
                      {
                        "count": 103,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 63,
                            "id": "positive",
                            "percentageBucket": 61.17,
                            "percentageQuestion": 25.3,
                            "percentageSurvey": 25.2
                          },
                          {
                            "count": 40,
                            "id": "insufficient_data",
                            "percentageBucket": 39
                          }
                        ],
                        "percentageQuestion": 41.37,
                        "percentageSurvey": 41.2
                      }
                    ],
                    "completion": {
                      "count": 249,
                      "percentageSurvey": 99.6,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "writing_modes",
                "_metadata": {
                  "sectionId": "layout"
                },
                "entity": {
                  "name": "Writing Modes",
                  "nameClean": "Writing Modes",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-writing-mode",
                    "url": "https://caniuse.com/css-writing-mode"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_writing_modes",
                    "title": "CSS writing modes",
                    "summary": "The CSS writing modes module defines various international writing modes, such as left-to-right (e.g., used by Latin and Indic scripts), right-to-left (e.g., used by Hebrew or Arabic scripts), bidirectional (used when mixing left-to-right and right-to-left scripts), and vertical (e.g., used by some Asian scripts)."
                  },
                  "example": {
                    "language": "css",
                    "code": ".vertical-text {\n  writing-mode: vertical-lr;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.vertical-text</span> {\n  <span class=\"hljs-attribute\">writing-mode</span>: vertical-lr;\n}"
                  },
                  "webFeature": {
                    "id": "writing-mode",
                    "description_html": "The <code>writing-mode</code> CSS property sets whether text is laid out horizontally or vertically, and left to right, or right to left.",
                    "group": [
                      "css"
                    ],
                    "name": "writing-mode",
                    "spec": [
                      "https://drafts.csswg.org/css-writing-modes-4/#block-flow"
                    ],
                    "status": {
                      "baseline": "high",
                      "baseline_low_date": "2017-03-27",
                      "support": {
                        "chrome": "48",
                        "chrome_android": "48",
                        "edge": "12",
                        "firefox": "41",
                        "firefox_android": "41",
                        "safari": "10.1",
                        "safari_ios": "10.3"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 3
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.78,
                      "interest": 0.72,
                      "usage": 0.24,
                      "retention": 1,
                      "positivity": 0.24,
                      "positivityRelative": 0.83
                    },
                    "buckets": [
                      {
                        "count": 52,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 41,
                            "id": "neutral",
                            "percentageBucket": 78.85,
                            "percentageQuestion": 16.47,
                            "percentageSurvey": 16.4
                          },
                          {
                            "count": 11,
                            "id": "insufficient_data",
                            "percentageBucket": 21
                          }
                        ],
                        "percentageQuestion": 20.88,
                        "percentageSurvey": 20.8
                      },
                      {
                        "count": 133,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 12,
                            "id": "negative",
                            "percentageBucket": 9.02,
                            "percentageQuestion": 4.82,
                            "percentageSurvey": 4.8
                          },
                          {
                            "count": 90,
                            "id": "neutral",
                            "percentageBucket": 67.67,
                            "percentageQuestion": 36.14,
                            "percentageSurvey": 36
                          },
                          {
                            "count": 31,
                            "id": "positive",
                            "percentageBucket": 23.31,
                            "percentageQuestion": 12.45,
                            "percentageSurvey": 12.4
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 53.41,
                        "percentageSurvey": 53.2
                      },
                      {
                        "count": 59,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 31,
                            "id": "neutral",
                            "percentageBucket": 52.54,
                            "percentageQuestion": 12.45,
                            "percentageSurvey": 12.4
                          },
                          {
                            "count": 28,
                            "id": "positive",
                            "percentageBucket": 47.46,
                            "percentageQuestion": 11.24,
                            "percentageSurvey": 11.2
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 23.69,
                        "percentageSurvey": 23.6
                      }
                    ],
                    "completion": {
                      "count": 249,
                      "percentageSurvey": 99.6,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "logical_properties",
                "_metadata": {
                  "sectionId": "layout"
                },
                "entity": {
                  "name": "CSS Logical Properties",
                  "nameClean": "CSS Logical Properties",
                  "entityType": "feature",
                  "description": "`margin-block-start`, `padding-inline-end`, `border-inline-start`…\n",
                  "descriptionClean": "margin-block-start, padding-inline-end, border-inline-start…",
                  "descriptionHtml": "<code>margin-block-start</code>, <code>padding-inline-end</code>, <code>border-inline-start</code>…\n",
                  "caniuse": {
                    "name": "css-logical-props",
                    "url": "https://caniuse.com/css-logical-props"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_logical_properties_and_values",
                    "title": "CSS logical properties and values",
                    "summary": "The CSS logical properties and values module defines logical properties and values that can control layout through logical rather than physical direction and dimension mappings. Logical properties define direction‐relative equivalents to their corresponding physical properties."
                  },
                  "example": {
                    "language": "css",
                    "code": "section {\n  border-block: 8px solid blue;\n  border-inline: 8px solid green;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">section</span> {\n  <span class=\"hljs-attribute\">border-block</span>: <span class=\"hljs-number\">8px</span> solid blue;\n  <span class=\"hljs-attribute\">border-inline</span>: <span class=\"hljs-number\">8px</span> solid green;\n}"
                  },
                  "webFeature": {
                    "id": "logical-properties",
                    "description_html": "CSS logical properties control borders, size, margin, and padding with directions and dimensions relative to the writing mode. For example, in a left to right, top to bottom writing mode, <code>block-end</code> refers to the bottom. Also known as flow relative.",
                    "group": [
                      "css"
                    ],
                    "name": "Logical properties",
                    "spec": [
                      "https://drafts.csswg.org/css-logical-1/"
                    ],
                    "status": {
                      "baseline": "high",
                      "baseline_low_date": "2021-09-20",
                      "support": {
                        "chrome": "89",
                        "chrome_android": "89",
                        "edge": "89",
                        "firefox": "66",
                        "firefox_android": "66",
                        "safari": "15",
                        "safari_ios": "15"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 3
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.83,
                      "interest": 0,
                      "usage": 0.67,
                      "retention": 1,
                      "positivity": 0.4,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 40,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 26,
                            "id": "neutral",
                            "percentageBucket": 65,
                            "percentageQuestion": 10.44,
                            "percentageSurvey": 10.4
                          },
                          {
                            "count": 14,
                            "id": "insufficient_data",
                            "percentageBucket": 35
                          }
                        ],
                        "percentageQuestion": 16.06,
                        "percentageSurvey": 16
                      },
                      {
                        "count": 40,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 30,
                            "id": "neutral",
                            "percentageBucket": 75,
                            "percentageQuestion": 12.05,
                            "percentageSurvey": 12
                          },
                          {
                            "count": 10,
                            "id": "insufficient_data",
                            "percentageBucket": 25
                          }
                        ],
                        "percentageQuestion": 16.06,
                        "percentageSurvey": 16
                      },
                      {
                        "count": 168,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 67,
                            "id": "neutral",
                            "percentageBucket": 39.88,
                            "percentageQuestion": 26.91,
                            "percentageSurvey": 26.8
                          },
                          {
                            "count": 101,
                            "id": "positive",
                            "percentageBucket": 60.12,
                            "percentageQuestion": 40.56,
                            "percentageSurvey": 40.4
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 67.47,
                        "percentageSurvey": 67.2
                      }
                    ],
                    "completion": {
                      "count": 249,
                      "percentageSurvey": 99.6,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "aspect_ratio",
                "_metadata": {
                  "sectionId": "layout"
                },
                "entity": {
                  "name": "`aspect-ratio`",
                  "nameClean": "aspect-ratio",
                  "nameHtml": "<code>aspect-ratio</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_properties_aspect-ratio",
                    "url": "https://caniuse.com/mdn-css_properties_aspect-ratio"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio",
                    "title": "aspect-ratio",
                    "summary": "The aspect-ratio CSS property allows you to define the desired width-to-height ratio of an element's box. This means that even if the parent container or viewport size changes, the browser will adjust the element's dimensions to maintain the specified width-to-height ratio. The specified aspect ratio is used in the calculation of auto sizes and some other layout functions."
                  },
                  "example": {
                    "language": "css",
                    "code": ".square {\n  aspect-ratio: 1 / 1;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.square</span> {\n  <span class=\"hljs-attribute\">aspect-ratio</span>: <span class=\"hljs-number\">1</span> / <span class=\"hljs-number\">1</span>;\n}"
                  },
                  "webFeature": {
                    "id": "aspect-ratio",
                    "description_html": "The <code>aspect-ratio</code> CSS property controls the width-to-height ratio of elements. For <code>&#x3C;img></code> and <code>&#x3C;video></code> elements, the <code>width</code> and <code>height</code> attributes used together with <code>height: auto</code> control the aspect ratio while the image/video is loading.",
                    "group": [
                      "css"
                    ],
                    "name": "aspect-ratio",
                    "spec": [
                      "https://drafts.csswg.org/css-sizing-4/#aspect-ratio"
                    ],
                    "status": {
                      "baseline": "high",
                      "baseline_low_date": "2021-09-20",
                      "support": {
                        "chrome": "88",
                        "chrome_android": "88",
                        "edge": "88",
                        "firefox": "89",
                        "firefox_android": "89",
                        "safari": "15",
                        "safari_ios": "15"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 1
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 1,
                      "interest": 0,
                      "usage": 0.91,
                      "retention": 1,
                      "positivity": 0.49,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 0,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 7,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 0,
                        "percentageSurvey": 0
                      },
                      {
                        "count": 21,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 21,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 8.43,
                        "percentageSurvey": 8.4
                      },
                      {
                        "count": 220,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 120,
                            "id": "positive",
                            "percentageBucket": 54.55,
                            "percentageQuestion": 48.19,
                            "percentageSurvey": 48
                          },
                          {
                            "count": 100,
                            "id": "insufficient_data",
                            "percentageBucket": 45
                          }
                        ],
                        "percentageQuestion": 88.35,
                        "percentageSurvey": 88
                      }
                    ],
                    "completion": {
                      "count": 249,
                      "percentageSurvey": 99.6,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "viewport_percentage_length_units",
                "_metadata": {
                  "sectionId": "layout"
                },
                "entity": {
                  "name": "Viewport-Relative Units",
                  "nameClean": "Viewport-Relative Units",
                  "entityType": "feature",
                  "description": "`lvh` / `lvw` / `lvmin` / `lvmax`, `sv*`, `dv*`, etc.\n",
                  "descriptionClean": "lvh / lvw / lvmin / lvmax, sv*, dv*, etc.",
                  "descriptionHtml": "<code>lvh</code> / <code>lvw</code> / <code>lvmin</code> / <code>lvmax</code>, <code>sv*</code>, <code>dv*</code>, etc.\n",
                  "caniuse": {
                    "name": "mdn-css_types_length_viewport_percentage_units_small",
                    "url": "https://caniuse.com/mdn-css_types_length_viewport_percentage_units_small"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/length",
                    "title": "<length>",
                    "summary": "The <length> CSS data type represents a distance value. Lengths can be used in numerous CSS properties, such as width, height, margin, padding, border-width, font-size, and text-shadow."
                  },
                  "example": {
                    "language": "css",
                    "code": "body {\n  height: 100dvh;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">body</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100</span>dvh;\n}"
                  },
                  "resources": [
                    {
                      "title": "The large, small, and dynamic viewport units",
                      "url": "https://web.dev/viewport-units/"
                    }
                  ],
                  "webFeature": {
                    "id": "viewport-unit-variants",
                    "description_html": "The <code>sv*</code>, <code>lv*</code>, and <code>dv*</code> CSS viewport units are relative to the smallest, largest, and current (dynamic) viewport size. They are used to size elements in relation to the viewport's dimensions.",
                    "name": "Small, large, and dynamic viewport units",
                    "spec": [
                      "https://drafts.csswg.org/css-values-4/#viewport-variants",
                      "https://drafts.csswg.org/css-values-4/#viewport-relative-lengths"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2022-12-05",
                      "support": {
                        "chrome": "108",
                        "chrome_android": "108",
                        "edge": "108",
                        "firefox": "101",
                        "firefox_android": "101",
                        "safari": "15.4",
                        "safari_ios": "15.4"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 2
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.85,
                      "interest": 0,
                      "usage": 0.63,
                      "retention": 1,
                      "positivity": 0.32,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 35,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 35,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 14.06,
                        "percentageSurvey": 14
                      },
                      {
                        "count": 57,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 38,
                            "id": "neutral",
                            "percentageBucket": 66.67,
                            "percentageQuestion": 15.26,
                            "percentageSurvey": 15.2
                          },
                          {
                            "count": 19,
                            "id": "insufficient_data",
                            "percentageBucket": 33
                          }
                        ],
                        "percentageQuestion": 22.89,
                        "percentageSurvey": 22.8
                      },
                      {
                        "count": 157,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 81,
                            "id": "positive",
                            "percentageBucket": 51.59,
                            "percentageQuestion": 32.53,
                            "percentageSurvey": 32.4
                          },
                          {
                            "count": 76,
                            "id": "insufficient_data",
                            "percentageBucket": 48
                          }
                        ],
                        "percentageQuestion": 63.05,
                        "percentageSurvey": 62.8
                      }
                    ],
                    "completion": {
                      "count": 249,
                      "percentageSurvey": 99.6,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "media_queries_range_contexts",
                "_metadata": {
                  "sectionId": "layout"
                },
                "entity": {
                  "name": "Media Queries Range Contexts",
                  "nameClean": "Media Queries Range Contexts",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-media-range-syntax",
                    "url": "https://caniuse.com/css-media-range-syntax"
                  },
                  "example": {
                    "language": "css",
                    "code": "@media (400px < width < 1000px) {\n  /* ... */\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@media</span> (<span class=\"hljs-number\">400px</span> &lt; <span class=\"hljs-attribute\">width</span> &lt; <span class=\"hljs-number\">1000px</span>) {\n  <span class=\"hljs-comment\">/* ... */</span>\n}"
                  },
                  "webFeature": {
                    "id": "media-query-range-syntax",
                    "description_html": "The range syntax of CSS media queries allows you to use mathematical comparison operators such as <code>&#x3C;</code>, <code>></code>, <code>&#x3C;=</code>, and <code>>=</code> to define a range of values for a media query. For example, <code>(400px &#x3C; width &#x3C; 1000px)</code> returns true if the viewport width is between 400px and 1000px.",
                    "group": [
                      "media-queries"
                    ],
                    "name": "Media query range syntax",
                    "spec": [
                      "https://drafts.csswg.org/mediaqueries-4/#mq-range-context"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2023-03-27",
                      "support": {
                        "chrome": "104",
                        "chrome_android": "104",
                        "edge": "104",
                        "firefox": "102",
                        "firefox_android": "102",
                        "safari": "16.4",
                        "safari_ios": "16.4"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 1
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.76,
                      "interest": 0,
                      "usage": 0.43,
                      "retention": 1,
                      "positivity": 0.22,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 59,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 38,
                            "id": "neutral",
                            "percentageBucket": 64.41,
                            "percentageQuestion": 15.32,
                            "percentageSurvey": 15.2
                          },
                          {
                            "count": 21,
                            "id": "insufficient_data",
                            "percentageBucket": 36
                          }
                        ],
                        "percentageQuestion": 23.79,
                        "percentageSurvey": 23.6
                      },
                      {
                        "count": 81,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 49,
                            "id": "neutral",
                            "percentageBucket": 60.49,
                            "percentageQuestion": 19.76,
                            "percentageSurvey": 19.6
                          },
                          {
                            "count": 32,
                            "id": "insufficient_data",
                            "percentageBucket": 40
                          }
                        ],
                        "percentageQuestion": 32.66,
                        "percentageSurvey": 32.4
                      },
                      {
                        "count": 107,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 55,
                            "id": "positive",
                            "percentageBucket": 51.4,
                            "percentageQuestion": 22.18,
                            "percentageSurvey": 22
                          },
                          {
                            "count": 52,
                            "id": "insufficient_data",
                            "percentageBucket": 49
                          }
                        ],
                        "percentageQuestion": 43.15,
                        "percentageSurvey": 42.8
                      }
                    ],
                    "completion": {
                      "count": 248,
                      "percentageSurvey": 99.2,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "anchor_positioning",
                "_metadata": {
                  "sectionId": "layout"
                },
                "entity": {
                  "name": "Anchor Positioning",
                  "nameClean": "Anchor Positioning",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-anchor-positioning",
                    "url": "https://caniuse.com/css-anchor-positioning"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_anchor_positioning",
                    "title": "CSS anchor positioning",
                    "summary": "The CSS anchor positioning module defines features that allow you to tether elements together. Certain elements are defined as anchor elements; anchor-positioned elements can then have their size and position set based on the size and location of the anchor elements to which they are bound."
                  },
                  "example": {
                    "language": "css",
                    "code": ".anchor {\n  anchor-name: --my-anchor;\n}\n.target {\n  position: absolute;\n  position-anchor: --my-anchor;\n  position-area: start end;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.anchor</span> {\n  <span class=\"hljs-attribute\">anchor-name</span>: --my-anchor;\n}\n<span class=\"hljs-selector-class\">.target</span> {\n  <span class=\"hljs-attribute\">position</span>: absolute;\n  <span class=\"hljs-attribute\">position-anchor</span>: --my-anchor;\n  <span class=\"hljs-attribute\">position</span>-area: start end;\n}"
                  },
                  "resources": [
                    {
                      "title": "Future CSS: Anchor Positioning\n",
                      "url": "https://kizu.dev/anchor-positioning-experiments/"
                    },
                    {
                      "title": "Tether elements to each other with CSS anchor positioning\n",
                      "url": "https://developer.chrome.com/blog/tether-elements-to-each-other-with-css-anchor-positioning/"
                    },
                    {
                      "title": "CSS Anchor Positioning Guide",
                      "url": "https://css-tricks.com/css-anchor-positioning-guide/"
                    }
                  ],
                  "webFeature": {
                    "id": "anchor-positioning",
                    "description_html": "Anchor positioning places an element based on the position of another element. For example, you can place a tooltip next to the content it references.",
                    "name": "Anchor positioning",
                    "spec": [
                      "https://drafts.csswg.org/css-anchor-position-1/#anchoring"
                    ],
                    "status": {
                      "baseline": "false",
                      "support": {
                        "chrome": "125",
                        "chrome_android": "125",
                        "edge": "125"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 9
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.77,
                      "interest": 1,
                      "usage": 0.25,
                      "retention": 1,
                      "positivity": 0.44,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 56,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 39,
                            "id": "neutral",
                            "percentageBucket": 69.64,
                            "percentageQuestion": 15.66,
                            "percentageSurvey": 15.6
                          },
                          {
                            "count": 17,
                            "id": "insufficient_data",
                            "percentageBucket": 30
                          }
                        ],
                        "percentageQuestion": 22.49,
                        "percentageSurvey": 22.4
                      },
                      {
                        "count": 129,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 50,
                            "id": "neutral",
                            "percentageBucket": 38.76,
                            "percentageQuestion": 20.08,
                            "percentageSurvey": 20
                          },
                          {
                            "count": 79,
                            "id": "positive",
                            "percentageBucket": 61.24,
                            "percentageQuestion": 31.73,
                            "percentageSurvey": 31.6
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 51.81,
                        "percentageSurvey": 51.6
                      },
                      {
                        "count": 63,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 31,
                            "id": "positive",
                            "percentageBucket": 49.21,
                            "percentageQuestion": 12.45,
                            "percentageSurvey": 12.4
                          },
                          {
                            "count": 32,
                            "id": "insufficient_data",
                            "percentageBucket": 51
                          }
                        ],
                        "percentageQuestion": 25.3,
                        "percentageSurvey": 25.2
                      }
                    ],
                    "completion": {
                      "count": 249,
                      "percentageSurvey": 99.6,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "at_container_size",
                "_metadata": {
                  "sectionId": "layout"
                },
                "entity": {
                  "name": "`@container` size queries\n",
                  "nameClean": "@container size queries",
                  "nameHtml": "<code>@container</code> size queries\n",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-container-queries",
                    "url": "https://caniuse.com/css-container-queries"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_containment/Container_queries",
                    "title": "CSS container queries",
                    "summary": "Container queries enable you to apply styles to an element based on certain attributes of its container:"
                  },
                  "example": {
                    "language": "css",
                    "code": "@container (min-width: 700px) {\n  .card {\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@container</span> (<span class=\"hljs-attribute\">min-width</span>: <span class=\"hljs-number\">700px</span>) {\n  <span class=\"hljs-selector-class\">.card</span> {\n    <span class=\"hljs-attribute\">display</span>: grid;\n    <span class=\"hljs-attribute\">grid-template-columns</span>: <span class=\"hljs-number\">2</span>fr <span class=\"hljs-number\">1</span>fr;\n  }\n}"
                  },
                  "webFeature": {
                    "id": "container-queries",
                    "description_html": "Container size queries with the <code>@container</code> at-rule apply styles to an element based on the dimensions of its container.",
                    "group": [
                      "container-queries"
                    ],
                    "name": "Container queries",
                    "spec": [
                      "https://drafts.csswg.org/css-conditional-5/#container-queries"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2023-02-14",
                      "support": {
                        "chrome": "105",
                        "chrome_android": "105",
                        "edge": "105",
                        "firefox": "110",
                        "firefox_android": "110",
                        "safari": "16",
                        "safari_ios": "16"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 3
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.94,
                      "interest": 0,
                      "usage": 0.55,
                      "retention": 1,
                      "positivity": 0.29,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 13,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 13,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 5.22,
                        "percentageSurvey": 5.2
                      },
                      {
                        "count": 98,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 57,
                            "id": "neutral",
                            "percentageBucket": 58.16,
                            "percentageQuestion": 22.89,
                            "percentageSurvey": 22.8
                          },
                          {
                            "count": 41,
                            "id": "insufficient_data",
                            "percentageBucket": 42
                          }
                        ],
                        "percentageQuestion": 39.36,
                        "percentageSurvey": 39.2
                      },
                      {
                        "count": 136,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 74,
                            "id": "positive",
                            "percentageBucket": 54.41,
                            "percentageQuestion": 29.72,
                            "percentageSurvey": 29.6
                          },
                          {
                            "count": 62,
                            "id": "insufficient_data",
                            "percentageBucket": 46
                          }
                        ],
                        "percentageQuestion": 54.62,
                        "percentageSurvey": 54.4
                      }
                    ],
                    "completion": {
                      "count": 249,
                      "percentageSurvey": 99.6,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "at_container_style",
                "_metadata": {
                  "sectionId": "layout"
                },
                "entity": {
                  "name": "`@container` style queries\n",
                  "nameClean": "@container style queries",
                  "nameHtml": "<code>@container</code> style queries\n",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-container-queries-style",
                    "url": "https://caniuse.com/css-container-queries-style"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_containment/Container_size_and_style_queries",
                    "title": "Using container size and style queries",
                    "summary": "Container queries enable you to apply styles to elements nested within a specific container based on the features of that container. The query returns true or false depending on whether the query condition is true for the container."
                  },
                  "example": {
                    "language": "css",
                    "code": "@container style(--fontColor: green) {\n  /* <stylesheet> */\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@container</span> style(<span class=\"hljs-attribute\">--fontColor</span>: green) {\n  <span class=\"hljs-comment\">/* &lt;stylesheet&gt; */</span>\n}"
                  },
                  "webFeature": {
                    "id": "container-style-queries",
                    "description_html": "Container style queries with the <code>@container</code> at-rule apply styles to an element based on the values of custom properties of its container.",
                    "group": [
                      "container-queries"
                    ],
                    "name": "Container style queries",
                    "spec": [
                      "https://drafts.csswg.org/css-conditional-5/#style-container"
                    ],
                    "status": {
                      "baseline": "false",
                      "support": {
                        "chrome": "111",
                        "chrome_android": "111",
                        "edge": "111",
                        "safari": "18",
                        "safari_ios": "18"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 4
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.7,
                      "interest": 0,
                      "usage": 0.15,
                      "retention": 1,
                      "positivity": 0.07,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 72,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 45,
                            "id": "neutral",
                            "percentageBucket": 62.5,
                            "percentageQuestion": 18.37,
                            "percentageSurvey": 18
                          },
                          {
                            "count": 27,
                            "id": "insufficient_data",
                            "percentageBucket": 38
                          }
                        ],
                        "percentageQuestion": 29.39,
                        "percentageSurvey": 28.8
                      },
                      {
                        "count": 135,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 70,
                            "id": "neutral",
                            "percentageBucket": 51.85,
                            "percentageQuestion": 28.57,
                            "percentageSurvey": 28
                          },
                          {
                            "count": 65,
                            "id": "insufficient_data",
                            "percentageBucket": 48
                          }
                        ],
                        "percentageQuestion": 55.1,
                        "percentageSurvey": 54
                      },
                      {
                        "count": 37,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 18,
                            "id": "positive",
                            "percentageBucket": 48.65,
                            "percentageQuestion": 7.35,
                            "percentageSurvey": 7.2
                          },
                          {
                            "count": 19,
                            "id": "insufficient_data",
                            "percentageBucket": 51
                          }
                        ],
                        "percentageQuestion": 15.1,
                        "percentageSurvey": 14.8
                      }
                    ],
                    "completion": {
                      "count": 245,
                      "percentageSurvey": 98,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "calc_size",
                "_metadata": {
                  "sectionId": "layout"
                },
                "entity": {
                  "name": "`calc-size()`",
                  "nameClean": "calc-size()",
                  "nameHtml": "<code>calc-size()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_types_calc-size",
                    "url": "https://caniuse.com/mdn-css_types_calc-size"
                  },
                  "example": {
                    "language": "css",
                    "code": ".element {\n  height: 0;\n  overflow: hidden;\n  transition: height 0.3s;\n}\n\n.element.open {\n  height: calc-size(auto);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.element</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">overflow</span>: hidden;\n  <span class=\"hljs-attribute\">transition</span>: height <span class=\"hljs-number\">0.3s</span>;\n}\n\n<span class=\"hljs-selector-class\">.element</span><span class=\"hljs-selector-class\">.open</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-built_in\">calc-size</span>(auto);\n}"
                  },
                  "resources": [
                    {
                      "title": "CSS interpolate-size property and calc-size() function",
                      "url": "https://chromestatus.com/feature/5196713071738880"
                    }
                  ],
                  "webFeature": {
                    "id": "calc-size",
                    "description_html": "The <code>calc-size()</code> CSS function computes mathematical expressions that include <code>height</code> and <code>width</code> keyword values, for example <code>calc-size(fit-content, size / 2)</code>. Not to be confused with the <code>calc()</code> CSS function, which cannot use keyword values.",
                    "group": [
                      "css"
                    ],
                    "name": "calc-size()",
                    "spec": [
                      "https://drafts.csswg.org/css-values-5/#calc-size"
                    ],
                    "status": {
                      "baseline": "false",
                      "support": {
                        "chrome": "129",
                        "chrome_android": "129",
                        "edge": "129"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 1
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.51,
                      "interest": 1,
                      "usage": 0.15,
                      "retention": 0,
                      "positivity": 0.17,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 119,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 69,
                            "id": "neutral",
                            "percentageBucket": 57.98,
                            "percentageQuestion": 27.94,
                            "percentageSurvey": 27.6
                          },
                          {
                            "count": 50,
                            "id": "insufficient_data",
                            "percentageBucket": 42
                          }
                        ],
                        "percentageQuestion": 48.18,
                        "percentageSurvey": 47.6
                      },
                      {
                        "count": 89,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 44,
                            "id": "positive",
                            "percentageBucket": 49.44,
                            "percentageQuestion": 17.81,
                            "percentageSurvey": 17.6
                          },
                          {
                            "count": 45,
                            "id": "insufficient_data",
                            "percentageBucket": 51
                          }
                        ],
                        "percentageQuestion": 36.03,
                        "percentageSurvey": 35.6
                      },
                      {
                        "count": 39,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 22,
                            "id": "neutral",
                            "percentageBucket": 56.41,
                            "percentageQuestion": 8.91,
                            "percentageSurvey": 8.8
                          },
                          {
                            "count": 17,
                            "id": "insufficient_data",
                            "percentageBucket": 44
                          }
                        ],
                        "percentageQuestion": 15.79,
                        "percentageSurvey": 15.6
                      }
                    ],
                    "completion": {
                      "count": 247,
                      "percentageSurvey": 98.8,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "blend_modes",
                "_metadata": {
                  "sectionId": "shapes_graphics"
                },
                "entity": {
                  "entityType": "feature",
                  "description": "`mix-blend-mode`, `background-blend-mode`, `isolation`\n",
                  "descriptionClean": "mix-blend-mode, background-blend-mode, isolation",
                  "descriptionHtml": "<code>mix-blend-mode</code>, <code>background-blend-mode</code>, <code>isolation</code>\n",
                  "caniuse": {
                    "name": "css-mixblendmode",
                    "url": "https://caniuse.com/css-mixblendmode"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/blend-mode",
                    "title": "<blend-mode>",
                    "summary": "The <blend-mode> CSS data type describes how colors should appear when elements overlap. It is used in the background-blend-mode and mix-blend-mode properties."
                  },
                  "example": {
                    "language": "css",
                    "code": ".item2 {\n  color: #000;\n  mix-blend-mode: overlay;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.item2</span> {\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#000</span>;\n  <span class=\"hljs-attribute\">mix-blend-mode</span>: overlay;\n}"
                  },
                  "webFeature": {
                    "id": "mix-blend-mode",
                    "description_html": "The <code>mix-blend-mode</code> CSS property blends an element's content with its background or parent elements using blend modes like <code>multiply</code>, <code>difference</code>, or <code>color</code>.",
                    "group": [
                      "blend-mode"
                    ],
                    "name": "mix-blend-mode",
                    "spec": [
                      "https://drafts.fxtf.org/compositing-2/#mix-blend-mode"
                    ],
                    "status": {
                      "baseline": "high",
                      "baseline_low_date": "2020-01-15",
                      "support": {
                        "chrome": "41",
                        "chrome_android": "41",
                        "edge": "79",
                        "firefox": "32",
                        "firefox_android": "32",
                        "safari": "8",
                        "safari_ios": "8"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 3
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.87,
                      "interest": 0,
                      "usage": 0.59,
                      "retention": 0,
                      "positivity": 0
                    },
                    "buckets": [
                      {
                        "count": 28,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 17,
                            "id": "neutral",
                            "percentageBucket": 60.71,
                            "percentageQuestion": 7.46,
                            "percentageSurvey": 6.8
                          },
                          {
                            "count": 11,
                            "id": "insufficient_data",
                            "percentageBucket": 39
                          }
                        ],
                        "percentageQuestion": 12.28,
                        "percentageSurvey": 11.2
                      },
                      {
                        "count": 64,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 41,
                            "id": "neutral",
                            "percentageBucket": 64.06,
                            "percentageQuestion": 17.98,
                            "percentageSurvey": 16.4
                          },
                          {
                            "count": 23,
                            "id": "insufficient_data",
                            "percentageBucket": 36
                          }
                        ],
                        "percentageQuestion": 28.07,
                        "percentageSurvey": 25.6
                      },
                      {
                        "count": 136,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 74,
                            "id": "neutral",
                            "percentageBucket": 54.41,
                            "percentageQuestion": 32.46,
                            "percentageSurvey": 29.6
                          },
                          {
                            "count": 62,
                            "id": "insufficient_data",
                            "percentageBucket": 46
                          }
                        ],
                        "percentageQuestion": 59.65,
                        "percentageSurvey": 54.4
                      }
                    ],
                    "completion": {
                      "count": 228,
                      "percentageSurvey": 91.2,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "backdrop_filter",
                "_metadata": {
                  "sectionId": "shapes_graphics"
                },
                "entity": {
                  "name": "`backdrop-filter`",
                  "nameClean": "backdrop-filter",
                  "nameHtml": "<code>backdrop-filter</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-backdrop-filter",
                    "url": "https://caniuse.com/css-backdrop-filter"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter",
                    "title": "backdrop-filter",
                    "summary": "The backdrop-filter CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything behind the element, to see the effect the element or its background needs to be transparent or partially transparent."
                  },
                  "example": {
                    "language": "css",
                    "code": ".box {\n  backdrop-filter: blur(10px);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.box</span> {\n  <span class=\"hljs-attribute\">backdrop-filter</span>: <span class=\"hljs-built_in\">blur</span>(<span class=\"hljs-number\">10px</span>);\n}"
                  },
                  "webFeature": {
                    "id": "backdrop-filter",
                    "description_html": "The <code>backdrop-filter</code> CSS property applies graphical effects such as blurring or color shifting to the area behind an element.",
                    "group": [
                      "css"
                    ],
                    "name": "backdrop-filter",
                    "spec": [
                      "https://drafts.fxtf.org/filter-effects-2/#BackdropFilterProperty"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2024-09-16",
                      "support": {
                        "chrome": "76",
                        "chrome_android": "76",
                        "edge": "79",
                        "firefox": "103",
                        "firefox_android": "103",
                        "safari": "18",
                        "safari_ios": "18"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 6
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.92,
                      "interest": 0,
                      "usage": 0.78,
                      "retention": 0,
                      "positivity": 0
                    },
                    "buckets": [
                      {
                        "count": 17,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 17,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 7.52,
                        "percentageSurvey": 6.8
                      },
                      {
                        "count": 31,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 21,
                            "id": "neutral",
                            "percentageBucket": 67.74,
                            "percentageQuestion": 9.29,
                            "percentageSurvey": 8.4
                          },
                          {
                            "count": 10,
                            "id": "insufficient_data",
                            "percentageBucket": 32
                          }
                        ],
                        "percentageQuestion": 13.72,
                        "percentageSurvey": 12.4
                      },
                      {
                        "count": 175,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 91,
                            "id": "neutral",
                            "percentageBucket": 52,
                            "percentageQuestion": 40.27,
                            "percentageSurvey": 36.4
                          },
                          {
                            "count": 84,
                            "id": "insufficient_data",
                            "percentageBucket": 48
                          }
                        ],
                        "percentageQuestion": 77.43,
                        "percentageSurvey": 70
                      }
                    ],
                    "completion": {
                      "count": 226,
                      "percentageSurvey": 90.4,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "linear_easing_function",
                "_metadata": {
                  "sectionId": "shapes_graphics"
                },
                "entity": {
                  "name": "`linear` Easing Function\n",
                  "nameClean": "linear Easing Function",
                  "nameHtml": "<code>linear</code> Easing Function\n",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_types_easing-function_linear-function",
                    "url": "https://caniuse.com/mdn-css_types_easing-function_linear-function"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/easing-function",
                    "title": "<easing-function>",
                    "summary": "The <easing-function> CSS data type represents a mathematical function that describes the rate at which a value changes."
                  },
                  "example": {
                    "language": "css",
                    "code": ":root {\n  --bounce-easing: linear(\n    0, 0.063, 0.25 18.2%, 1 36.4%, 0.813, 0.75, 0.813, 1, 0.938, 1, 1\n  );\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-pseudo\">:root</span> {\n  <span class=\"hljs-attr\">--bounce-easing</span>: <span class=\"hljs-built_in\">linear</span>(\n    <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0.063</span>, <span class=\"hljs-number\">0.25</span> <span class=\"hljs-number\">18.2%</span>, <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">36.4%</span>, <span class=\"hljs-number\">0.813</span>, <span class=\"hljs-number\">0.75</span>, <span class=\"hljs-number\">0.813</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0.938</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>\n  );\n}"
                  },
                  "resources": [
                    {
                      "title": "Using linear() for better animation",
                      "url": "https://fullystacked.net/posts/linear/"
                    },
                    {
                      "title": "Linear() Generator",
                      "url": "https://linear-easing-generator.netlify.app/"
                    }
                  ],
                  "webFeature": {
                    "id": "linear-easing",
                    "description_html": "The <code>linear()</code> easing function for animations and transitions interpolates linearly between the control points, and can be used to approximate complex easing functions, such as a bounce effect.",
                    "group": [
                      "css"
                    ],
                    "name": "linear() easing",
                    "spec": [
                      "https://drafts.csswg.org/css-easing-2/#the-linear-easing-function"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2023-12-11",
                      "support": {
                        "chrome": "113",
                        "chrome_android": "113",
                        "edge": "113",
                        "firefox": "112",
                        "firefox_android": "112",
                        "safari": "17.2",
                        "safari_ios": "17.2"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 1
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.79,
                      "interest": 0,
                      "usage": 0.4,
                      "retention": 0,
                      "positivity": 0
                    },
                    "buckets": [
                      {
                        "count": 46,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 31,
                            "id": "neutral",
                            "percentageBucket": 67.39,
                            "percentageQuestion": 13.54,
                            "percentageSurvey": 12.4
                          },
                          {
                            "count": 15,
                            "id": "insufficient_data",
                            "percentageBucket": 33
                          }
                        ],
                        "percentageQuestion": 20.09,
                        "percentageSurvey": 18.4
                      },
                      {
                        "count": 90,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 64,
                            "id": "neutral",
                            "percentageBucket": 71.11,
                            "percentageQuestion": 27.95,
                            "percentageSurvey": 25.6
                          },
                          {
                            "count": 26,
                            "id": "insufficient_data",
                            "percentageBucket": 29
                          }
                        ],
                        "percentageQuestion": 39.3,
                        "percentageSurvey": 36
                      },
                      {
                        "count": 93,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 52,
                            "id": "neutral",
                            "percentageBucket": 55.91,
                            "percentageQuestion": 22.71,
                            "percentageSurvey": 20.8
                          },
                          {
                            "count": 41,
                            "id": "insufficient_data",
                            "percentageBucket": 44
                          }
                        ],
                        "percentageQuestion": 40.61,
                        "percentageSurvey": 37.2
                      }
                    ],
                    "completion": {
                      "count": 229,
                      "percentageSurvey": 91.6,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "intrinsic_sizing",
                "_metadata": {
                  "sectionId": "shapes_graphics"
                },
                "entity": {
                  "name": "Intrinsic Sizing",
                  "nameClean": "Intrinsic Sizing",
                  "entityType": "feature",
                  "description": "`min-content`, `max-content`, `fit-content`\n",
                  "descriptionClean": "min-content, max-content, fit-content",
                  "descriptionHtml": "<code>min-content</code>, <code>max-content</code>, <code>fit-content</code>\n",
                  "caniuse": {
                    "name": "intrinsic-width",
                    "url": "https://caniuse.com/intrinsic-width"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/min-content",
                    "title": "min-content",
                    "summary": "The min-content sizing keyword represents the minimum intrinsic size of the content. For text content this means that the content will take all soft-wrapping opportunities, becoming as small as the longest word."
                  },
                  "example": {
                    "language": "css",
                    "code": "h2 {\n  width: max-content;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">h2</span> {\n  <span class=\"hljs-attribute\">width</span>: max-content;\n}"
                  },
                  "webFeature": {
                    "id": "min-max-content",
                    "description_html": "The <code>min-content</code> and <code>max-content</code> CSS keywords represent the smallest and largest intrinsic sizes of an element.",
                    "group": [
                      "layout"
                    ],
                    "name": "min-content and max-content",
                    "spec": [
                      "https://drafts.csswg.org/css-sizing-3/#valdef-width-max-content",
                      "https://drafts.csswg.org/css-sizing-3/#valdef-width-min-content"
                    ],
                    "status": {
                      "baseline": "high",
                      "baseline_low_date": "2020-01-15",
                      "support": {
                        "chrome": "46",
                        "chrome_android": "46",
                        "edge": "79",
                        "firefox": "66",
                        "firefox_android": "66",
                        "safari": "11",
                        "safari_ios": "11"
                      }
                    }
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.95,
                      "interest": 0,
                      "usage": 0.83,
                      "retention": 0,
                      "positivity": 0
                    },
                    "buckets": [
                      {
                        "count": 10,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 10,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 4.39,
                        "percentageSurvey": 4
                      },
                      {
                        "count": 28,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 19,
                            "id": "neutral",
                            "percentageBucket": 67.86,
                            "percentageQuestion": 8.33,
                            "percentageSurvey": 7.6
                          },
                          {
                            "count": 9,
                            "id": "insufficient_data",
                            "percentageBucket": 32
                          }
                        ],
                        "percentageQuestion": 12.28,
                        "percentageSurvey": 11.2
                      },
                      {
                        "count": 188,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 92,
                            "id": "neutral",
                            "percentageBucket": 48.94,
                            "percentageQuestion": 40.35,
                            "percentageSurvey": 36.8
                          },
                          {
                            "count": 96,
                            "id": "insufficient_data",
                            "percentageBucket": 51
                          }
                        ],
                        "percentageQuestion": 82.46,
                        "percentageSurvey": 75.2
                      }
                    ],
                    "completion": {
                      "count": 228,
                      "percentageSurvey": 91.2,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "conic_gradient",
                "_metadata": {
                  "sectionId": "shapes_graphics"
                },
                "entity": {
                  "name": "`conic-gradient()`",
                  "nameClean": "conic-gradient()",
                  "nameHtml": "<code>conic-gradient()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_types_image_gradient_conic-gradient",
                    "url": "https://caniuse.com/mdn-css_types_image_gradient_conic-gradient"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/conic-gradient",
                    "title": "conic-gradient()",
                    "summary": "The conic-gradient() CSS function creates an image consisting of a gradient with color transitions rotated around a center point (rather than radiating from the center). Example conic gradients include pie charts and color wheels. The result of the conic-gradient() function is an object of the <gradient> data type, which is a special kind of <image>."
                  },
                  "example": {
                    "language": "css",
                    "code": ".blue-to-red {\n  background: conic-gradient(from 45deg, blue, red);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.blue-to-red</span> {\n  <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">conic-gradient</span>(from <span class=\"hljs-number\">45deg</span>, blue, red);\n}"
                  },
                  "webFeature": {
                    "id": "conic-gradients",
                    "description_html": "The <code>conic-gradient()</code> and <code>repeating-conic-gradient()</code> CSS functions create backgrounds that progress between two or more colors around a center point.",
                    "group": [
                      "gradients"
                    ],
                    "name": "Conic gradients",
                    "spec": [
                      "https://drafts.csswg.org/css-images-4/#conic-gradients"
                    ],
                    "status": {
                      "baseline": "high",
                      "baseline_low_date": "2020-11-17",
                      "support": {
                        "chrome": "69",
                        "chrome_android": "69",
                        "edge": "79",
                        "firefox": "83",
                        "firefox_android": "83",
                        "safari": "12.1",
                        "safari_ios": "12.2"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 2
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.82,
                      "interest": 0,
                      "usage": 0.38,
                      "retention": 0,
                      "positivity": 0
                    },
                    "buckets": [
                      {
                        "count": 39,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 32,
                            "id": "neutral",
                            "percentageBucket": 82.05,
                            "percentageQuestion": 13.97,
                            "percentageSurvey": 12.8
                          },
                          {
                            "count": 7,
                            "id": "insufficient_data",
                            "percentageBucket": 18
                          }
                        ],
                        "percentageQuestion": 17.03,
                        "percentageSurvey": 15.6
                      },
                      {
                        "count": 100,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 69,
                            "id": "neutral",
                            "percentageBucket": 69,
                            "percentageQuestion": 30.13,
                            "percentageSurvey": 27.6
                          },
                          {
                            "count": 31,
                            "id": "insufficient_data",
                            "percentageBucket": 31
                          }
                        ],
                        "percentageQuestion": 43.67,
                        "percentageSurvey": 40
                      },
                      {
                        "count": 88,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 48,
                            "id": "neutral",
                            "percentageBucket": 54.55,
                            "percentageQuestion": 20.96,
                            "percentageSurvey": 19.2
                          },
                          {
                            "count": 40,
                            "id": "insufficient_data",
                            "percentageBucket": 45
                          }
                        ],
                        "percentageQuestion": 38.43,
                        "percentageSurvey": 35.2
                      }
                    ],
                    "completion": {
                      "count": 229,
                      "percentageSurvey": 91.6,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "offset_path",
                "_metadata": {
                  "sectionId": "shapes_graphics"
                },
                "entity": {
                  "name": "`offset-path`\n",
                  "nameClean": "offset-path",
                  "nameHtml": "<code>offset-path</code>\n",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-motion-paths",
                    "url": "https://caniuse.com/css-motion-paths"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/offset-path",
                    "title": "offset-path",
                    "summary": "The offset-path CSS property specifies a path for an element to follow and determines the element's positioning within the path's parent container or the SVG coordinate system. The path is a line, a curve, or a geometrical shape along which the element gets positioned or moves."
                  },
                  "example": {
                    "language": "css",
                    "code": ".blueBox {\n  background-color: blue;\n  offset-path: border-box;\n  offset-distance: 5%;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.blueBox</span> {\n  <span class=\"hljs-attribute\">background-color</span>: blue;\n  <span class=\"hljs-attribute\">offset-path</span>: border-box;\n  <span class=\"hljs-attribute\">offset-distance</span>: <span class=\"hljs-number\">5%</span>;\n}"
                  },
                  "webFeature": {
                    "id": "motion-path",
                    "description_html": "The <code>offset</code> CSS property animates an element along a defined motion path.",
                    "group": [
                      "css"
                    ],
                    "name": "Motion path",
                    "spec": [
                      "https://drafts.fxtf.org/motion-1/"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2022-09-12",
                      "support": {
                        "chrome": "55",
                        "chrome_android": "55",
                        "edge": "79",
                        "firefox": "72",
                        "firefox_android": "79",
                        "safari": "16",
                        "safari_ios": "16"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 1
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.41,
                      "interest": 0,
                      "usage": 0.14,
                      "retention": 0,
                      "positivity": 0
                    },
                    "buckets": [
                      {
                        "count": 132,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 81,
                            "id": "neutral",
                            "percentageBucket": 61.36,
                            "percentageQuestion": 35.37,
                            "percentageSurvey": 32.4
                          },
                          {
                            "count": 51,
                            "id": "insufficient_data",
                            "percentageBucket": 39
                          }
                        ],
                        "percentageQuestion": 57.64,
                        "percentageSurvey": 52.8
                      },
                      {
                        "count": 62,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 42,
                            "id": "neutral",
                            "percentageBucket": 67.74,
                            "percentageQuestion": 18.34,
                            "percentageSurvey": 16.8
                          },
                          {
                            "count": 20,
                            "id": "insufficient_data",
                            "percentageBucket": 32
                          }
                        ],
                        "percentageQuestion": 27.07,
                        "percentageSurvey": 24.8
                      },
                      {
                        "count": 33,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 19,
                            "id": "neutral",
                            "percentageBucket": 57.58,
                            "percentageQuestion": 8.3,
                            "percentageSurvey": 7.6
                          },
                          {
                            "count": 14,
                            "id": "insufficient_data",
                            "percentageBucket": 42
                          }
                        ],
                        "percentageQuestion": 14.41,
                        "percentageSurvey": 13.2
                      }
                    ],
                    "completion": {
                      "count": 229,
                      "percentageSurvey": 91.6,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "css_shape_function",
                "_metadata": {
                  "sectionId": "shapes_graphics"
                },
                "entity": {
                  "name": "`shape()`",
                  "nameClean": "shape()",
                  "nameHtml": "<code>shape()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_types_basic-shape_shape",
                    "url": "https://caniuse.com/mdn-css_types_basic-shape_shape"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/basic-shape/shape",
                    "title": "shape()",
                    "summary": "The shape() CSS function is used to define a shape for the clip-path and offset-path properties. It combines an initial starting point with a series of shape commands that define the path of the shape. The shape() function is a member of the <basic-shape> data type."
                  },
                  "example": {
                    "language": "css",
                    "code": ".clipped {\n  clip-path: shape(\n    from top left,\n    hline to 100%,\n    vline to 100%,\n    curve to 0% 100% with 50% 0%,\n  );\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.clipped</span> {\n  <span class=\"hljs-attribute\">clip-path</span>: <span class=\"hljs-built_in\">shape</span>(\n    from top left,\n    hline to <span class=\"hljs-number\">100%</span>,\n    vline to <span class=\"hljs-number\">100%</span>,\n    curve to <span class=\"hljs-number\">0%</span> <span class=\"hljs-number\">100%</span> with <span class=\"hljs-number\">50%</span> <span class=\"hljs-number\">0%</span>,\n  );\n}"
                  },
                  "resources": [
                    {
                      "title": "CSS shape() Commands",
                      "url": "https://css-tricks.com/css-shape-commands/"
                    }
                  ]
                },
                "comments": {
                  "currentEdition": {
                    "count": 2
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.78,
                      "interest": 0,
                      "usage": 0.18,
                      "retention": 0,
                      "positivity": 0
                    },
                    "buckets": [
                      {
                        "count": 50,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 30,
                            "id": "neutral",
                            "percentageBucket": 60,
                            "percentageQuestion": 13.1,
                            "percentageSurvey": 12
                          },
                          {
                            "count": 20,
                            "id": "insufficient_data",
                            "percentageBucket": 40
                          }
                        ],
                        "percentageQuestion": 21.83,
                        "percentageSurvey": 20
                      },
                      {
                        "count": 136,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 80,
                            "id": "neutral",
                            "percentageBucket": 58.82,
                            "percentageQuestion": 34.93,
                            "percentageSurvey": 32
                          },
                          {
                            "count": 56,
                            "id": "insufficient_data",
                            "percentageBucket": 41
                          }
                        ],
                        "percentageQuestion": 59.39,
                        "percentageSurvey": 54.4
                      },
                      {
                        "count": 43,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 24,
                            "id": "neutral",
                            "percentageBucket": 55.81,
                            "percentageQuestion": 10.48,
                            "percentageSurvey": 9.6
                          },
                          {
                            "count": 19,
                            "id": "insufficient_data",
                            "percentageBucket": 44
                          }
                        ],
                        "percentageQuestion": 18.78,
                        "percentageSurvey": 17.2
                      }
                    ],
                    "completion": {
                      "count": 229,
                      "percentageSurvey": 91.6,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "color_function",
                "_metadata": {
                  "sectionId": "colors"
                },
                "entity": {
                  "name": "`color()`",
                  "nameClean": "color()",
                  "nameHtml": "<code>color()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-color-function",
                    "url": "https://caniuse.com/css-color-function"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color",
                    "title": "color()",
                    "summary": "The color() functional notation allows a color to be specified in a particular, specified color space rather than the implicit sRGB color space that most of the other color functions operate in."
                  },
                  "example": {
                    "language": "css",
                    "code": ".brightest-green {\n  background: color(display-p3 0 1 0);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.brightest-green</span> {\n  <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">color</span>(display-p3 <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-number\">0</span>);\n}"
                  },
                  "webFeature": {
                    "id": "color-function",
                    "description_html": "The <code>color()</code> function picks a color from a given color space. Wide gamut color spaces like <code>display-p3</code> allow showing more vibrant and saturated colors than the standard <code>srgb</code> color space.",
                    "group": [
                      "color-types"
                    ],
                    "name": "color()",
                    "spec": [
                      "https://drafts.csswg.org/css-color-4/#color-function"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2023-05-09",
                      "support": {
                        "chrome": "111",
                        "chrome_android": "111",
                        "edge": "111",
                        "firefox": "113",
                        "firefox_android": "113",
                        "safari": "15",
                        "safari_ios": "15"
                      }
                    }
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.73,
                      "interest": 0,
                      "usage": 0.29,
                      "retention": 0,
                      "positivity": 0
                    },
                    "buckets": [
                      {
                        "count": 57,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 34,
                            "id": "neutral",
                            "percentageBucket": 59.65,
                            "percentageQuestion": 15.53,
                            "percentageSurvey": 13.6
                          },
                          {
                            "count": 23,
                            "id": "insufficient_data",
                            "percentageBucket": 40
                          }
                        ],
                        "percentageQuestion": 26.03,
                        "percentageSurvey": 22.8
                      },
                      {
                        "count": 97,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 59,
                            "id": "neutral",
                            "percentageBucket": 60.82,
                            "percentageQuestion": 26.94,
                            "percentageSurvey": 23.6
                          },
                          {
                            "count": 38,
                            "id": "insufficient_data",
                            "percentageBucket": 39
                          }
                        ],
                        "percentageQuestion": 44.29,
                        "percentageSurvey": 38.8
                      },
                      {
                        "count": 64,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 34,
                            "id": "neutral",
                            "percentageBucket": 53.13,
                            "percentageQuestion": 15.53,
                            "percentageSurvey": 13.6
                          },
                          {
                            "count": 30,
                            "id": "insufficient_data",
                            "percentageBucket": 47
                          }
                        ],
                        "percentageQuestion": 29.22,
                        "percentageSurvey": 25.6
                      }
                    ],
                    "completion": {
                      "count": 219,
                      "percentageSurvey": 87.6,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "accent_color",
                "_metadata": {
                  "sectionId": "colors"
                },
                "entity": {
                  "name": "`accent-color`",
                  "nameClean": "accent-color",
                  "nameHtml": "<code>accent-color</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_properties_accent-color",
                    "url": "https://caniuse.com/mdn-css_properties_accent-color"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/accent-color",
                    "title": "accent-color",
                    "summary": "The accent-color CSS property sets the accent color for user-interface controls generated by some elements."
                  },
                  "example": {
                    "language": "css",
                    "code": "input[type='checkbox'] {\n  accent-color: tomato;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">input</span><span class=\"hljs-selector-attr\">[type=<span class=\"hljs-string\">&#x27;checkbox&#x27;</span>]</span> {\n  <span class=\"hljs-attribute\">accent-color</span>: tomato;\n}"
                  },
                  "webFeature": {
                    "id": "accent-color",
                    "description_html": "The <code>accent-color</code> CSS property sets a color for checkboxes, radio buttons, and other form controls.",
                    "group": [
                      "css"
                    ],
                    "name": "accent-color",
                    "spec": [
                      "https://drafts.csswg.org/css-ui-4/#widget-accent"
                    ],
                    "status": {
                      "baseline": "false",
                      "support": {
                        "chrome": "93",
                        "chrome_android": "93",
                        "edge": "93",
                        "firefox": "92",
                        "firefox_android": "92"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 1
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.75,
                      "interest": 0,
                      "usage": 0.52,
                      "retention": 1,
                      "positivity": 0.33,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 54,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 18,
                            "id": "positive",
                            "percentageBucket": 33.33,
                            "percentageQuestion": 8.14,
                            "percentageSurvey": 7.2
                          },
                          {
                            "count": 36,
                            "id": "neutral",
                            "percentageBucket": 66.67,
                            "percentageQuestion": 16.29,
                            "percentageSurvey": 14.4
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 24.43,
                        "percentageSurvey": 21.6
                      },
                      {
                        "count": 51,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 28,
                            "id": "neutral",
                            "percentageBucket": 54.9,
                            "percentageQuestion": 12.67,
                            "percentageSurvey": 11.2
                          },
                          {
                            "count": 23,
                            "id": "insufficient_data",
                            "percentageBucket": 45
                          }
                        ],
                        "percentageQuestion": 23.08,
                        "percentageSurvey": 20.4
                      },
                      {
                        "count": 116,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 57,
                            "id": "positive",
                            "percentageBucket": 49.14,
                            "percentageQuestion": 25.79,
                            "percentageSurvey": 22.8
                          },
                          {
                            "count": 59,
                            "id": "neutral",
                            "percentageBucket": 50.86,
                            "percentageQuestion": 26.7,
                            "percentageSurvey": 23.6
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 52.49,
                        "percentageSurvey": 46.4
                      }
                    ],
                    "completion": {
                      "count": 221,
                      "percentageSurvey": 88.4,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "color_mix",
                "_metadata": {
                  "sectionId": "colors"
                },
                "entity": {
                  "name": "`color-mix()`",
                  "nameClean": "color-mix()",
                  "nameHtml": "<code>color-mix()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_types_color_color-mix",
                    "url": "https://caniuse.com/mdn-css_types_color_color-mix"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color-mix",
                    "title": "color-mix()",
                    "summary": "The color-mix() functional notation takes two <color> values and returns the result of mixing them in a given colorspace by a given amount."
                  },
                  "example": {
                    "language": "css",
                    "code": ".teal {\n  background: color-mix(in lab, white 20%, #34c9eb);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.teal</span> {\n  <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">color-mix</span>(in lab, white <span class=\"hljs-number\">20%</span>, <span class=\"hljs-number\">#34c9eb</span>);\n}"
                  },
                  "webFeature": {
                    "id": "color-mix",
                    "description_html": "The <code>color-mix()</code> function mixes two colors in a given color space and by a given amount. Commonly, lighter or darker variations of a color are created by mixing with white or black.",
                    "group": [
                      "css"
                    ],
                    "name": "color-mix()",
                    "spec": [
                      "https://drafts.csswg.org/css-color-5/#color-mix"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2023-05-09",
                      "support": {
                        "chrome": "111",
                        "chrome_android": "111",
                        "edge": "111",
                        "firefox": "113",
                        "firefox_android": "113",
                        "safari": "16.2",
                        "safari_ios": "16.2"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 1
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.79,
                      "interest": 1,
                      "usage": 0.39,
                      "retention": 1,
                      "positivity": 0.38,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 44,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 35,
                            "id": "neutral",
                            "percentageBucket": 79.55,
                            "percentageQuestion": 15.91,
                            "percentageSurvey": 14
                          },
                          {
                            "count": 9,
                            "id": "insufficient_data",
                            "percentageBucket": 20
                          }
                        ],
                        "percentageQuestion": 20,
                        "percentageSurvey": 17.6
                      },
                      {
                        "count": 88,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 55,
                            "id": "neutral",
                            "percentageBucket": 62.5,
                            "percentageQuestion": 25,
                            "percentageSurvey": 22
                          },
                          {
                            "count": 33,
                            "id": "positive",
                            "percentageBucket": 37.5,
                            "percentageQuestion": 15,
                            "percentageSurvey": 13.2
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 40,
                        "percentageSurvey": 35.2
                      },
                      {
                        "count": 87,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 51,
                            "id": "positive",
                            "percentageBucket": 58.62,
                            "percentageQuestion": 23.18,
                            "percentageSurvey": 20.4
                          },
                          {
                            "count": 36,
                            "id": "insufficient_data",
                            "percentageBucket": 41
                          }
                        ],
                        "percentageQuestion": 39.55,
                        "percentageSurvey": 34.8
                      }
                    ],
                    "completion": {
                      "count": 220,
                      "percentageSurvey": 88,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "wide_gamut_colors",
                "_metadata": {
                  "sectionId": "colors"
                },
                "entity": {
                  "name": "Wide Gamut Colors",
                  "nameClean": "Wide Gamut Colors",
                  "entityType": "feature",
                  "description": "`lch()`, `lab()`, `oklch()`, `oklab()`\n",
                  "descriptionClean": "lch(), lab(), oklch(), oklab()",
                  "descriptionHtml": "<code>lch()</code>, <code>lab()</code>, <code>oklch()</code>, <code>oklab()</code>\n",
                  "caniuse": {
                    "name": "css-lch-lab",
                    "url": "https://caniuse.com/css-lch-lab"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/lch",
                    "title": "lch()",
                    "summary": "The lch() functional notation expresses a given color using the LCH color space, which represents lightness, chroma, and hue. It uses the same L axis as the lab() color function of the CIELab color space, but it uses the polar coordinates C (Chroma) and H (Hue)."
                  },
                  "example": {
                    "language": "css",
                    "code": ".foo {\n  background-color: lab(29.2345% 39.3825 20.0664);\n  background-color: lch(29.2345% 44.2 27);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.foo</span> {\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">lab</span>(<span class=\"hljs-number\">29.2345%</span> <span class=\"hljs-number\">39.3825</span> <span class=\"hljs-number\">20.0664</span>);\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">lch</span>(<span class=\"hljs-number\">29.2345%</span> <span class=\"hljs-number\">44.2</span> <span class=\"hljs-number\">27</span>);\n}"
                  },
                  "webFeature": {
                    "id": "oklab",
                    "description_html": "The Oklab color space expresses colors in terms of lightness and how red/green and blue/yellow a color is, aiming to match how humans perceive colors. Oklch is a variant of Oklab with polar coordinates. These color spaces can be used with the CSS <code>color()</code>, <code>oklab()</code>, and <code>oklch()</code> functions.",
                    "group": [
                      "color-types"
                    ],
                    "name": "Oklab and Oklch",
                    "spec": [
                      "https://drafts.csswg.org/css-color-4/#ok-lab"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2023-05-09",
                      "support": {
                        "chrome": "111",
                        "chrome_android": "111",
                        "edge": "111",
                        "firefox": "113",
                        "firefox_android": "113",
                        "safari": "15.4",
                        "safari_ios": "15.4"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 2
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.83,
                      "interest": 0,
                      "usage": 0.39,
                      "retention": 1,
                      "positivity": 0.22,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 37,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 30,
                            "id": "neutral",
                            "percentageBucket": 81.08,
                            "percentageQuestion": 13.7,
                            "percentageSurvey": 12
                          },
                          {
                            "count": 7,
                            "id": "insufficient_data",
                            "percentageBucket": 19
                          }
                        ],
                        "percentageQuestion": 16.89,
                        "percentageSurvey": 14.8
                      },
                      {
                        "count": 94,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 65,
                            "id": "neutral",
                            "percentageBucket": 69.15,
                            "percentageQuestion": 29.68,
                            "percentageSurvey": 26
                          },
                          {
                            "count": 29,
                            "id": "insufficient_data",
                            "percentageBucket": 31
                          }
                        ],
                        "percentageQuestion": 42.92,
                        "percentageSurvey": 37.6
                      },
                      {
                        "count": 87,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 49,
                            "id": "positive",
                            "percentageBucket": 56.32,
                            "percentageQuestion": 22.37,
                            "percentageSurvey": 19.6
                          },
                          {
                            "count": 38,
                            "id": "insufficient_data",
                            "percentageBucket": 44
                          }
                        ],
                        "percentageQuestion": 39.73,
                        "percentageSurvey": 34.8
                      }
                    ],
                    "completion": {
                      "count": 219,
                      "percentageSurvey": 87.6,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "relative_colors",
                "_metadata": {
                  "sectionId": "colors"
                },
                "entity": {
                  "name": "Relative Colors",
                  "nameClean": "Relative Colors",
                  "entityType": "feature",
                  "example": {
                    "language": "css",
                    "code": ".foo {\n  --color: #4488dd;\n  background-color: hsl(from var(--color) h s calc(l * 1.2))\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.foo</span> {\n  <span class=\"hljs-attr\">--color</span>: <span class=\"hljs-number\">#4488dd</span>;\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">hsl</span>(from <span class=\"hljs-built_in\">var</span>(--color) h s <span class=\"hljs-built_in\">calc</span>(l * <span class=\"hljs-number\">1.2</span>))\n}"
                  },
                  "resources": [
                    {
                      "title": "Create a color theme with CSS Relative Color Syntax, CSS color-mix(), and CSS color-contrast()",
                      "url": "https://www.bram.us/2021/04/28/create-a-color-theme-with-css-relative-color-syntax-css-color-mix-and-css-color-contrast/"
                    }
                  ],
                  "webFeature": {
                    "id": "relative-color",
                    "description_html": "The <code>from</code> keyword for color functions (<code>color()</code>, <code>hsl()</code>, <code>oklch()</code>, etc.) creates a new color based on a given color by modifying the values of the input color. Also known as relative color syntax (RCS).",
                    "group": [
                      "css"
                    ],
                    "name": "Relative colors",
                    "spec": [
                      "https://drafts.csswg.org/css-color-5/#relative-colors"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2024-09-16",
                      "support": {
                        "chrome": "125",
                        "chrome_android": "125",
                        "edge": "125",
                        "firefox": "128",
                        "firefox_android": "128",
                        "safari": "18",
                        "safari_ios": "18"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 3
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.78,
                      "interest": 0,
                      "usage": 0.44,
                      "retention": 1,
                      "positivity": 0.24,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 48,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 34,
                            "id": "neutral",
                            "percentageBucket": 70.83,
                            "percentageQuestion": 15.45,
                            "percentageSurvey": 13.6
                          },
                          {
                            "count": 14,
                            "id": "insufficient_data",
                            "percentageBucket": 29
                          }
                        ],
                        "percentageQuestion": 21.82,
                        "percentageSurvey": 19.2
                      },
                      {
                        "count": 74,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 43,
                            "id": "neutral",
                            "percentageBucket": 58.11,
                            "percentageQuestion": 19.55,
                            "percentageSurvey": 17.2
                          },
                          {
                            "count": 31,
                            "id": "insufficient_data",
                            "percentageBucket": 42
                          }
                        ],
                        "percentageQuestion": 33.64,
                        "percentageSurvey": 29.6
                      },
                      {
                        "count": 97,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 53,
                            "id": "positive",
                            "percentageBucket": 54.64,
                            "percentageQuestion": 24.09,
                            "percentageSurvey": 21.2
                          },
                          {
                            "count": 44,
                            "id": "insufficient_data",
                            "percentageBucket": 45
                          }
                        ],
                        "percentageQuestion": 44.09,
                        "percentageSurvey": 38.8
                      }
                    ],
                    "completion": {
                      "count": 220,
                      "percentageSurvey": 88,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "gradient_color_spaces",
                "_metadata": {
                  "sectionId": "colors"
                },
                "entity": {
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_types_image_gradient_conic-gradient_interpolation_color_space",
                    "url": "https://caniuse.com/mdn-css_types_image_gradient_conic-gradient_interpolation_color_space"
                  },
                  "example": {
                    "language": "css",
                    "code": ".gradient {\n  background: linear-gradient(in oklab, hsl(80 90% 50%), red);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.gradient</span> {\n  <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">linear-gradient</span>(in oklab, <span class=\"hljs-built_in\">hsl</span>(<span class=\"hljs-number\">80</span> <span class=\"hljs-number\">90%</span> <span class=\"hljs-number\">50%</span>), red);\n}"
                  },
                  "resources": [
                    {
                      "title": "Using Different Color Spaces for Non-Boring Gradients",
                      "url": "https://css-tricks.com/color-spaces-for-more-interesting-css-gradients/"
                    }
                  ],
                  "webFeature": {
                    "id": "gradient-interpolation",
                    "description_html": "Gradient interpolation controls how the colors between gradient stops are calculated in CSS. For example, <code>linear-gradient(to right in oklch longer hue, red, red);</code> calculates in the <code>oklch</code> color space, with the hue going all the way around the hue circle from red back to red.",
                    "group": [
                      "gradients"
                    ],
                    "name": "Gradient interpolation",
                    "spec": [
                      "https://drafts.csswg.org/css-color-4/#interpolation-space"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2024-06-11",
                      "support": {
                        "chrome": "111",
                        "chrome_android": "111",
                        "edge": "111",
                        "firefox": "127",
                        "firefox_android": "127",
                        "safari": "16.2",
                        "safari_ios": "16.2"
                      }
                    }
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.65,
                      "interest": 0,
                      "usage": 0.26,
                      "retention": 1,
                      "positivity": 0.14,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 76,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 55,
                            "id": "neutral",
                            "percentageBucket": 72.37,
                            "percentageQuestion": 25,
                            "percentageSurvey": 22
                          },
                          {
                            "count": 21,
                            "id": "insufficient_data",
                            "percentageBucket": 28
                          }
                        ],
                        "percentageQuestion": 34.55,
                        "percentageSurvey": 30.4
                      },
                      {
                        "count": 85,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 58,
                            "id": "neutral",
                            "percentageBucket": 68.24,
                            "percentageQuestion": 26.36,
                            "percentageSurvey": 23.2
                          },
                          {
                            "count": 27,
                            "id": "insufficient_data",
                            "percentageBucket": 32
                          }
                        ],
                        "percentageQuestion": 38.64,
                        "percentageSurvey": 34
                      },
                      {
                        "count": 57,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 26,
                            "id": "neutral",
                            "percentageBucket": 45.61,
                            "percentageQuestion": 11.82,
                            "percentageSurvey": 10.4
                          },
                          {
                            "count": 31,
                            "id": "positive",
                            "percentageBucket": 54.39,
                            "percentageQuestion": 14.09,
                            "percentageSurvey": 12.4
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 25.91,
                        "percentageSurvey": 22.8
                      }
                    ],
                    "completion": {
                      "count": 220,
                      "percentageSurvey": 88,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "color_scheme",
                "_metadata": {
                  "sectionId": "colors"
                },
                "entity": {
                  "name": "`color-scheme`",
                  "nameClean": "color-scheme",
                  "nameHtml": "<code>color-scheme</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_properties_color-scheme",
                    "url": "https://caniuse.com/mdn-css_properties_color-scheme"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme",
                    "title": "color-scheme",
                    "summary": "The color-scheme CSS property allows an element to indicate which color schemes it can comfortably be rendered in. User agents change the following aspects of the UI chrome to match the used color scheme:"
                  },
                  "example": {
                    "language": "css",
                    "code": ".foo {\n  color-scheme: light dark;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.foo</span> {\n  <span class=\"hljs-attribute\">color-scheme</span>: light dark;\n}"
                  },
                  "webFeature": {
                    "id": "color-scheme",
                    "description_html": "The <code>color-scheme</code> CSS property sets which color schemes (light or dark) an element uses and may prevent automatic dark mode adjustments by the browser.",
                    "group": [
                      "css"
                    ],
                    "name": "color-scheme",
                    "spec": [
                      "https://drafts.csswg.org/css-color-adjust-1/#color-scheme-prop"
                    ],
                    "status": {
                      "baseline": "high",
                      "baseline_low_date": "2022-02-03",
                      "support": {
                        "chrome": "98",
                        "chrome_android": "98",
                        "edge": "98",
                        "firefox": "96",
                        "firefox_android": "96",
                        "safari": "13",
                        "safari_ios": "13"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 2
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.86,
                      "interest": 0,
                      "usage": 0.51,
                      "retention": 1,
                      "positivity": 0.26,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 29,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 16,
                            "id": "neutral",
                            "percentageBucket": 55.17,
                            "percentageQuestion": 7.27,
                            "percentageSurvey": 6.4
                          },
                          {
                            "count": 13,
                            "id": "insufficient_data",
                            "percentageBucket": 45
                          }
                        ],
                        "percentageQuestion": 13.18,
                        "percentageSurvey": 11.6
                      },
                      {
                        "count": 77,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 53,
                            "id": "neutral",
                            "percentageBucket": 68.83,
                            "percentageQuestion": 24.09,
                            "percentageSurvey": 21.2
                          },
                          {
                            "count": 24,
                            "id": "insufficient_data",
                            "percentageBucket": 31
                          }
                        ],
                        "percentageQuestion": 35,
                        "percentageSurvey": 30.8
                      },
                      {
                        "count": 114,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 58,
                            "id": "positive",
                            "percentageBucket": 50.88,
                            "percentageQuestion": 26.36,
                            "percentageSurvey": 23.2
                          },
                          {
                            "count": 56,
                            "id": "insufficient_data",
                            "percentageBucket": 49
                          }
                        ],
                        "percentageQuestion": 51.82,
                        "percentageSurvey": 45.6
                      }
                    ],
                    "completion": {
                      "count": 220,
                      "percentageSurvey": 88,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "light_dark",
                "_metadata": {
                  "sectionId": "colors"
                },
                "entity": {
                  "name": "`light-dark()`",
                  "nameClean": "light-dark()",
                  "nameHtml": "<code>light-dark()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_types_color_light-dark",
                    "url": "https://caniuse.com/mdn-css_types_color_light-dark"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/light-dark",
                    "title": "light-dark()",
                    "summary": "The light-dark() CSS <color> function enables setting two colors for a property - returning one of the two colors options by detecting if the developer has set a light or dark color scheme or the user has requested light or dark color theme - without needing to encase the theme colors within a prefers-color-scheme media feature query.\nUsers are able to indicate their color-scheme preference through their operating system settings (e.g., light or dark mode) or their user agent settings. The light-dark() function enables providing two color values where any <color> value is accepted. The light-dark() CSS color function returns the first value if the user's preference is set to light or if no preference is set and the second value if the user's preference is set to dark."
                  },
                  "example": {
                    "language": "css",
                    "code": "code {\n  color: light-dark(black, white);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">code</span> {\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-built_in\">light-dark</span>(black, white);\n}"
                  },
                  "webFeature": {
                    "id": "light-dark",
                    "description_html": "The <code>light-dark()</code> CSS function accepts two colors and uses one depending on the current color scheme.",
                    "group": [
                      "css"
                    ],
                    "name": "light-dark()",
                    "spec": [
                      "https://drafts.csswg.org/css-color-5/#light-dark"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2024-05-13",
                      "support": {
                        "chrome": "123",
                        "chrome_android": "123",
                        "edge": "123",
                        "firefox": "120",
                        "firefox_android": "120",
                        "safari": "17.5",
                        "safari_ios": "17.5"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 2
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.8,
                      "interest": 0,
                      "usage": 0.39,
                      "retention": 1,
                      "positivity": 0.2,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 43,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 27,
                            "id": "neutral",
                            "percentageBucket": 62.79,
                            "percentageQuestion": 12.44,
                            "percentageSurvey": 10.8
                          },
                          {
                            "count": 16,
                            "id": "insufficient_data",
                            "percentageBucket": 37
                          }
                        ],
                        "percentageQuestion": 19.82,
                        "percentageSurvey": 17.2
                      },
                      {
                        "count": 88,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 53,
                            "id": "neutral",
                            "percentageBucket": 60.23,
                            "percentageQuestion": 24.42,
                            "percentageSurvey": 21.2
                          },
                          {
                            "count": 35,
                            "id": "insufficient_data",
                            "percentageBucket": 40
                          }
                        ],
                        "percentageQuestion": 40.55,
                        "percentageSurvey": 35.2
                      },
                      {
                        "count": 86,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 41,
                            "id": "neutral",
                            "percentageBucket": 47.67,
                            "percentageQuestion": 18.89,
                            "percentageSurvey": 16.4
                          },
                          {
                            "count": 45,
                            "id": "positive",
                            "percentageBucket": 52.33,
                            "percentageQuestion": 20.74,
                            "percentageSurvey": 18
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 39.63,
                        "percentageSurvey": 34.4
                      }
                    ],
                    "completion": {
                      "count": 217,
                      "percentageSurvey": 86.8,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "scroll_snap",
                "_metadata": {
                  "sectionId": "interactions"
                },
                "entity": {
                  "name": "Scroll Snap",
                  "nameClean": "Scroll Snap",
                  "entityType": "feature",
                  "description": "`scroll-snap-type`, `scroll-snap-align`, `scroll-padding`…\n",
                  "descriptionClean": "scroll-snap-type, scroll-snap-align, scroll-padding…",
                  "descriptionHtml": "<code>scroll-snap-type</code>, <code>scroll-snap-align</code>, <code>scroll-padding</code>…\n",
                  "caniuse": {
                    "name": "css-snappoints",
                    "url": "https://caniuse.com/css-snappoints"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_scroll_snap",
                    "title": "CSS scroll snap",
                    "summary": "The CSS scroll snap module provides properties that let you control the panning and scrolling behavior by defining snap positions. Content can be snapped into position as the user scrolls overflowing content within a scroll container, providing paging and scroll positioning."
                  },
                  "example": {
                    "language": "css",
                    "code": ".scroller {\n  height: 300px;\n  overflow-y: scroll;\n  scroll-snap-type: y mandatory;\n}\n\n.scroller section {\n  scroll-snap-align: start;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.scroller</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">300px</span>;\n  <span class=\"hljs-attribute\">overflow-y</span>: scroll;\n  <span class=\"hljs-attribute\">scroll-snap-type</span>: y mandatory;\n}\n\n<span class=\"hljs-selector-class\">.scroller</span> <span class=\"hljs-selector-tag\">section</span> {\n  <span class=\"hljs-attribute\">scroll-snap-align</span>: start;\n}"
                  },
                  "webFeature": {
                    "id": "scroll-snap",
                    "description_html": "CSS scroll snap controls the panning and scrolling behavior within a scroll container.",
                    "group": [
                      "scrolling"
                    ],
                    "name": "Scroll snap",
                    "spec": [
                      "https://drafts.csswg.org/css-scroll-snap-2/"
                    ],
                    "status": {
                      "baseline": "high",
                      "baseline_low_date": "2020-01-15",
                      "support": {
                        "chrome": "69",
                        "chrome_android": "69",
                        "edge": "79",
                        "firefox": "68",
                        "firefox_android": "68",
                        "safari": "11",
                        "safari_ios": "11"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 3
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.87,
                      "interest": 0,
                      "usage": 0.52,
                      "retention": 1,
                      "positivity": 0.25,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 26,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 17,
                            "id": "neutral",
                            "percentageBucket": 65.38,
                            "percentageQuestion": 8.06,
                            "percentageSurvey": 6.8
                          },
                          {
                            "count": 9,
                            "id": "insufficient_data",
                            "percentageBucket": 35
                          }
                        ],
                        "percentageQuestion": 12.32,
                        "percentageSurvey": 10.4
                      },
                      {
                        "count": 74,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 48,
                            "id": "neutral",
                            "percentageBucket": 64.86,
                            "percentageQuestion": 22.75,
                            "percentageSurvey": 19.2
                          },
                          {
                            "count": 26,
                            "id": "insufficient_data",
                            "percentageBucket": 35
                          }
                        ],
                        "percentageQuestion": 35.07,
                        "percentageSurvey": 29.6
                      },
                      {
                        "count": 109,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 54,
                            "id": "positive",
                            "percentageBucket": 49.54,
                            "percentageQuestion": 25.59,
                            "percentageSurvey": 21.6
                          },
                          {
                            "count": 55,
                            "id": "insufficient_data",
                            "percentageBucket": 50
                          }
                        ],
                        "percentageQuestion": 51.66,
                        "percentageSurvey": 43.6
                      }
                    ],
                    "completion": {
                      "count": 211,
                      "percentageSurvey": 84.4,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "overscroll_behavior",
                "_metadata": {
                  "sectionId": "interactions"
                },
                "entity": {
                  "name": "`overscroll-behavior`",
                  "nameClean": "overscroll-behavior",
                  "nameHtml": "<code>overscroll-behavior</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-overscroll-behavior",
                    "url": "https://caniuse.com/css-overscroll-behavior"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior",
                    "title": "overscroll-behavior",
                    "summary": "The overscroll-behavior CSS property sets what a browser does when reaching the boundary of a scrolling area."
                  },
                  "example": {
                    "language": "css",
                    "code": ".foo {\n  height: 200px;\n  overflow: auto;\n  overscroll-behavior-y: contain;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.foo</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">200px</span>;\n  <span class=\"hljs-attribute\">overflow</span>: auto;\n  <span class=\"hljs-attribute\">overscroll-behavior-y</span>: contain;\n}"
                  },
                  "webFeature": {
                    "id": "overscroll-behavior",
                    "description_html": "The <code>overscroll-behavior</code> CSS property disables default scrolling behaviors when the edges of a scrolling area are reached.",
                    "group": [
                      "scrolling"
                    ],
                    "name": "overscroll-behavior",
                    "spec": [
                      "https://drafts.csswg.org/css-overscroll-1/"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2022-09-12",
                      "support": {
                        "chrome": "63",
                        "chrome_android": "63",
                        "edge": "18",
                        "firefox": "59",
                        "firefox_android": "59",
                        "safari": "16",
                        "safari_ios": "16"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 2
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.71,
                      "interest": 0,
                      "usage": 0.46,
                      "retention": 0,
                      "positivity": 0
                    },
                    "buckets": [
                      {
                        "count": 60,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 38,
                            "id": "neutral",
                            "percentageBucket": 63.33,
                            "percentageQuestion": 18.1,
                            "percentageSurvey": 15.2
                          },
                          {
                            "count": 22,
                            "id": "insufficient_data",
                            "percentageBucket": 37
                          }
                        ],
                        "percentageQuestion": 28.57,
                        "percentageSurvey": 24
                      },
                      {
                        "count": 52,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 32,
                            "id": "neutral",
                            "percentageBucket": 61.54,
                            "percentageQuestion": 15.24,
                            "percentageSurvey": 12.8
                          },
                          {
                            "count": 20,
                            "id": "insufficient_data",
                            "percentageBucket": 38
                          }
                        ],
                        "percentageQuestion": 24.76,
                        "percentageSurvey": 20.8
                      },
                      {
                        "count": 97,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 52,
                            "id": "neutral",
                            "percentageBucket": 53.61,
                            "percentageQuestion": 24.76,
                            "percentageSurvey": 20.8
                          },
                          {
                            "count": 45,
                            "id": "insufficient_data",
                            "percentageBucket": 46
                          }
                        ],
                        "percentageQuestion": 46.19,
                        "percentageSurvey": 38.8
                      }
                    ],
                    "completion": {
                      "count": 210,
                      "percentageSurvey": 84,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "scroll_behavior",
                "_metadata": {
                  "sectionId": "interactions"
                },
                "entity": {
                  "name": "`scroll-behavior`",
                  "nameClean": "scroll-behavior",
                  "nameHtml": "<code>scroll-behavior</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-scroll-behavior",
                    "url": "https://caniuse.com/css-scroll-behavior"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior",
                    "title": "scroll-behavior",
                    "summary": "The scroll-behavior CSS property sets the behavior for a scrolling box when scrolling is triggered by the navigation or CSSOM scrolling APIs."
                  },
                  "example": {
                    "language": "css",
                    "code": ".foo {\n  scroll-behavior: auto;\n  scroll-behavior: smooth;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.foo</span> {\n  <span class=\"hljs-attribute\">scroll-behavior</span>: auto;\n  <span class=\"hljs-attribute\">scroll-behavior</span>: smooth;\n}"
                  },
                  "webFeature": {
                    "id": "scroll-behavior",
                    "description_html": "The <code>scroll-behavior</code> CSS property controls whether scrolling is smooth or snaps, for scroll actions not performed by the user such as those triggered by navigation.",
                    "group": [
                      "scrolling"
                    ],
                    "name": "scroll-behavior",
                    "spec": [
                      "https://drafts.csswg.org/css-overflow-3/#smooth-scrolling"
                    ],
                    "status": {
                      "baseline": "high",
                      "baseline_low_date": "2022-03-14",
                      "support": {
                        "chrome": "61",
                        "chrome_android": "61",
                        "edge": "79",
                        "firefox": "36",
                        "firefox_android": "36",
                        "safari": "15.4",
                        "safari_ios": "15.4"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 1
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.94,
                      "interest": 0,
                      "usage": 0.77,
                      "retention": 0,
                      "positivity": 0
                    },
                    "buckets": [
                      {
                        "count": 12,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 12,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 5.69,
                        "percentageSurvey": 4.8
                      },
                      {
                        "count": 35,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 22,
                            "id": "neutral",
                            "percentageBucket": 62.86,
                            "percentageQuestion": 10.43,
                            "percentageSurvey": 8.8
                          },
                          {
                            "count": 13,
                            "id": "insufficient_data",
                            "percentageBucket": 37
                          }
                        ],
                        "percentageQuestion": 16.59,
                        "percentageSurvey": 14
                      },
                      {
                        "count": 162,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 91,
                            "id": "neutral",
                            "percentageBucket": 56.17,
                            "percentageQuestion": 43.13,
                            "percentageSurvey": 36.4
                          },
                          {
                            "count": 71,
                            "id": "insufficient_data",
                            "percentageBucket": 44
                          }
                        ],
                        "percentageQuestion": 76.78,
                        "percentageSurvey": 64.8
                      }
                    ],
                    "completion": {
                      "count": 211,
                      "percentageSurvey": 84.4,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "scrollbar_gutter",
                "_metadata": {
                  "sectionId": "interactions"
                },
                "entity": {
                  "name": "`scrollbar-gutter`",
                  "nameClean": "scrollbar-gutter",
                  "nameHtml": "<code>scrollbar-gutter</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_properties_scrollbar-gutter",
                    "url": "https://caniuse.com/mdn-css_properties_scrollbar-gutter"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-gutter",
                    "title": "scrollbar-gutter",
                    "summary": "The scrollbar-gutter CSS property allows authors to reserve space for the scrollbar, preventing unwanted layout changes as the content grows while also avoiding unnecessary visuals when scrolling isn't needed."
                  },
                  "example": {
                    "language": "css",
                    "code": ".container {\n  scrollbar-gutter: stable;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.container</span> {\n  <span class=\"hljs-attribute\">scrollbar-gutter</span>: stable;\n}"
                  },
                  "webFeature": {
                    "id": "scrollbar-gutter",
                    "description_html": "The <code>scrollbar-gutter</code> CSS property reserves space for the scrollbar, preventing unwanted layout changes as the scrollbar appears and disappears.",
                    "group": [
                      "scrolling"
                    ],
                    "name": "scrollbar-gutter",
                    "spec": [
                      "https://drafts.csswg.org/css-overflow-3/#scrollbar-gutter-property"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2024-12-11",
                      "support": {
                        "chrome": "94",
                        "chrome_android": "94",
                        "edge": "94",
                        "firefox": "97",
                        "firefox_android": "97",
                        "safari": "18.2",
                        "safari_ios": "18.2"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 3
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.68,
                      "interest": 0,
                      "usage": 0.38,
                      "retention": 0,
                      "positivity": 0
                    },
                    "buckets": [
                      {
                        "count": 67,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 48,
                            "id": "neutral",
                            "percentageBucket": 71.64,
                            "percentageQuestion": 22.75,
                            "percentageSurvey": 19.2
                          },
                          {
                            "count": 19,
                            "id": "insufficient_data",
                            "percentageBucket": 28
                          }
                        ],
                        "percentageQuestion": 31.75,
                        "percentageSurvey": 26.8
                      },
                      {
                        "count": 63,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 36,
                            "id": "neutral",
                            "percentageBucket": 57.14,
                            "percentageQuestion": 17.06,
                            "percentageSurvey": 14.4
                          },
                          {
                            "count": 27,
                            "id": "insufficient_data",
                            "percentageBucket": 43
                          }
                        ],
                        "percentageQuestion": 29.86,
                        "percentageSurvey": 25.2
                      },
                      {
                        "count": 81,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 44,
                            "id": "neutral",
                            "percentageBucket": 54.32,
                            "percentageQuestion": 20.85,
                            "percentageSurvey": 17.6
                          },
                          {
                            "count": 37,
                            "id": "insufficient_data",
                            "percentageBucket": 46
                          }
                        ],
                        "percentageQuestion": 38.39,
                        "percentageSurvey": 32.4
                      }
                    ],
                    "completion": {
                      "count": 211,
                      "percentageSurvey": 84.4,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "view_transitions",
                "_metadata": {
                  "sectionId": "interactions"
                },
                "entity": {
                  "name": "View Transition API",
                  "nameClean": "View Transition API",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-api_viewtransition",
                    "url": "https://caniuse.com/mdn-api_viewtransition"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/View_Transition_API",
                    "title": "View Transition API",
                    "summary": "The View Transition API provides a mechanism for easily creating animated transitions between different website views. This includes animating between DOM states in a single-page app (SPA), and animating the navigation between documents in a multi-page app (MPA)."
                  },
                  "example": {
                    "language": "css",
                    "code": "::view-transition-old(main-image),\n::view-transition-new(main-image) {\n  transform-origin: right top;\n}\n\n::view-transition-new(main-image) {\n  animation: 400ms ease-out both grow;\n}\n\nfigure {\n  view-transition-name: main-image;\n}\n",
                    "codeHighlighted": "::<span class=\"hljs-built_in\">view-transition-old</span>(main-image),\n::<span class=\"hljs-built_in\">view-transition-new</span>(main-image) {\n  <span class=\"hljs-attribute\">transform-origin</span>: right top;\n}\n\n::<span class=\"hljs-built_in\">view-transition-new</span>(main-image) {\n  <span class=\"hljs-attribute\">animation</span>: <span class=\"hljs-number\">400ms</span> ease-out both grow;\n}\n\n<span class=\"hljs-selector-tag\">figure</span> {\n  <span class=\"hljs-attribute\">view-transition-name</span>: main-image;\n}"
                  },
                  "resources": [
                    {
                      "title": "Smooth and simple transitions with the View Transitions API",
                      "url": "https://developer.chrome.com/docs/web-platform/view-transitions/"
                    }
                  ],
                  "webFeature": {
                    "id": "cross-document-view-transitions",
                    "description_html": "The <code>@view-transition</code> CSS rule sets whether a document opts-in to transitions between documents in a multi-page application. Both the old and new document must opt-in for a transition to be triggered.",
                    "group": [
                      "view-transitions"
                    ],
                    "name": "Cross-document view transitions",
                    "spec": [
                      "https://drafts.csswg.org/css-view-transitions-2/#cross-doc-opt-in"
                    ],
                    "status": {
                      "baseline": "false",
                      "support": {
                        "chrome": "126",
                        "chrome_android": "126",
                        "edge": "126"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 5
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.81,
                      "interest": 0,
                      "usage": 0.4,
                      "retention": 1,
                      "positivity": 0.19,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 39,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 29,
                            "id": "neutral",
                            "percentageBucket": 74.36,
                            "percentageQuestion": 13.68,
                            "percentageSurvey": 11.6
                          },
                          {
                            "count": 10,
                            "id": "insufficient_data",
                            "percentageBucket": 26
                          }
                        ],
                        "percentageQuestion": 18.4,
                        "percentageSurvey": 15.6
                      },
                      {
                        "count": 86,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 45,
                            "id": "neutral",
                            "percentageBucket": 52.33,
                            "percentageQuestion": 21.23,
                            "percentageSurvey": 18
                          },
                          {
                            "count": 41,
                            "id": "insufficient_data",
                            "percentageBucket": 48
                          }
                        ],
                        "percentageQuestion": 40.57,
                        "percentageSurvey": 34.4
                      },
                      {
                        "count": 86,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 41,
                            "id": "positive",
                            "percentageBucket": 47.67,
                            "percentageQuestion": 19.34,
                            "percentageSurvey": 16.4
                          },
                          {
                            "count": 45,
                            "id": "insufficient_data",
                            "percentageBucket": 52
                          }
                        ],
                        "percentageQuestion": 40.57,
                        "percentageSurvey": 34.4
                      }
                    ],
                    "completion": {
                      "count": 212,
                      "percentageSurvey": 84.8,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "scroll_driven_animations",
                "_metadata": {
                  "sectionId": "interactions"
                },
                "entity": {
                  "name": "Scroll-driven animations",
                  "nameClean": "Scroll-driven animations",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_properties_animation-timeline",
                    "url": "https://caniuse.com/mdn-css_properties_animation-timeline"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_scroll-driven_animations",
                    "title": "CSS scroll-driven animations",
                    "summary": "The CSS scroll-driven animations module provides functionality that builds on top of the CSS animations module and Web Animations API. It allows you to animate property values based on a progression along a scroll-based timeline instead of the default time-based document timeline. This means that you can animate an element by scrolling a scrollable element, rather than just by the passing of time."
                  },
                  "example": {
                    "language": "css",
                    "code": "html {\n  scroll-timeline: --page-scroll block;\n}\n\n@keyframes grow-progress {\n  from { transform: scaleX(0); }\n  to { transform: scaleX(1); }\n}\n\n#progress {\n  animation: grow-progress auto linear;\n  animation-timeline: --page-scroll;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">html</span> {\n  <span class=\"hljs-attribute\">scroll-timeline</span>: --page-scroll block;\n}\n\n<span class=\"hljs-keyword\">@keyframes</span> grow-progress {\n  <span class=\"hljs-selector-tag\">from</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scaleX</span>(<span class=\"hljs-number\">0</span>); }\n  <span class=\"hljs-selector-tag\">to</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scaleX</span>(<span class=\"hljs-number\">1</span>); }\n}\n\n<span class=\"hljs-selector-id\">#progress</span> {\n  <span class=\"hljs-attribute\">animation</span>: grow-progress auto linear;\n  <span class=\"hljs-attribute\">animation-timeline</span>: --page-scroll;\n}"
                  },
                  "resources": [
                    {
                      "title": "Scroll-driven Animations",
                      "url": "https://scroll-driven-animations.style/"
                    },
                    {
                      "title": "Unleash the Power of Scroll-Driven Animations",
                      "url": "https://css-tricks.com/unleash-the-power-of-scroll-driven-animations/"
                    },
                    {
                      "title": "Animate elements on scroll with Scroll-driven animations",
                      "url": "https://developer.chrome.com/docs/css-ui/scroll-driven-animations"
                    }
                  ],
                  "webFeature": {
                    "id": "scroll-driven-animations",
                    "description_html": "The <code>animation-timeline</code>, <code>scroll-timeline</code>, and <code>view-timeline</code> CSS properties advance animations based on the user's scroll position.",
                    "group": [
                      "scrolling",
                      "animation"
                    ],
                    "name": "Scroll-driven animations",
                    "spec": [
                      "https://drafts.csswg.org/scroll-animations-1/"
                    ],
                    "status": {
                      "baseline": "false",
                      "support": {
                        "chrome": "115",
                        "chrome_android": "115",
                        "edge": "115"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 2
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.87,
                      "interest": 0,
                      "usage": 0.29,
                      "retention": 1,
                      "positivity": 0.17,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 26,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 15,
                            "id": "neutral",
                            "percentageBucket": 57.69,
                            "percentageQuestion": 7.08,
                            "percentageSurvey": 6
                          },
                          {
                            "count": 11,
                            "id": "insufficient_data",
                            "percentageBucket": 42
                          }
                        ],
                        "percentageQuestion": 12.26,
                        "percentageSurvey": 10.4
                      },
                      {
                        "count": 124,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 66,
                            "id": "neutral",
                            "percentageBucket": 53.23,
                            "percentageQuestion": 31.13,
                            "percentageSurvey": 26.4
                          },
                          {
                            "count": 58,
                            "id": "insufficient_data",
                            "percentageBucket": 47
                          }
                        ],
                        "percentageQuestion": 58.49,
                        "percentageSurvey": 49.6
                      },
                      {
                        "count": 62,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 38,
                            "id": "positive",
                            "percentageBucket": 61.29,
                            "percentageQuestion": 17.92,
                            "percentageSurvey": 15.2
                          },
                          {
                            "count": 24,
                            "id": "neutral",
                            "percentageBucket": 38.71,
                            "percentageQuestion": 11.32,
                            "percentageSurvey": 9.6
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 29.25,
                        "percentageSurvey": 24.8
                      }
                    ],
                    "completion": {
                      "count": 212,
                      "percentageSurvey": 84.8,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "discrete_properties_animations",
                "_metadata": {
                  "sectionId": "interactions"
                },
                "entity": {
                  "name": "Discrete Properties Animations",
                  "nameClean": "Discrete Properties Animations",
                  "entityType": "feature",
                  "description": "Animate to and from properties such as `display: none`\n",
                  "descriptionClean": "Animate to and from properties such as display: none",
                  "descriptionHtml": "Animate to and from properties such as <code>display: none</code>\n",
                  "example": {
                    "language": "css",
                    "code": "/*   IS-OPEN STATE   */\ndialog[open] {\n  translate: 0 0;\n}\n\n/*   EXIT STATE   */\ndialog {\n  transition: opacity 1s, display 1s allow-discrete, overlay 1s allow-discrete;\n  translate: 0 100vh;\n}\n\n/*   0. BEFORE-OPEN STATE   */\n@starting-style {\n  dialog[open] {\n    translate: 0 100vh;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-comment\">/*   IS-OPEN STATE   */</span>\ndialog<span class=\"hljs-selector-attr\">[open]</span> {\n  <span class=\"hljs-attribute\">translate</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span>;\n}\n\n<span class=\"hljs-comment\">/*   EXIT STATE   */</span>\ndialog {\n  <span class=\"hljs-attribute\">transition</span>: opacity <span class=\"hljs-number\">1s</span>, display <span class=\"hljs-number\">1s</span> allow-discrete, overlay <span class=\"hljs-number\">1s</span> allow-discrete;\n  <span class=\"hljs-attribute\">translate</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">100vh</span>;\n}\n\n<span class=\"hljs-comment\">/*   0. BEFORE-OPEN STATE   */</span>\n<span class=\"hljs-keyword\">@starting-style</span> {\n  dialog<span class=\"hljs-selector-attr\">[open]</span> {\n    <span class=\"hljs-attribute\">translate</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">100vh</span>;\n  }\n}"
                  },
                  "webFeature": {
                    "id": "transition-behavior",
                    "description_html": "The <code>transition-behavior: allow-discrete</code> CSS declaration allows transitions for properties whose animation behavior is discrete. Such properties can't be interpolated and swap from their start value to the end value at 50%.",
                    "group": [
                      "transitions"
                    ],
                    "name": "transition-behavior",
                    "spec": [
                      "https://drafts.csswg.org/css-transitions-2/#transition-behavior-property"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2024-08-06",
                      "support": {
                        "chrome": "117",
                        "chrome_android": "117",
                        "edge": "117",
                        "firefox": "129",
                        "firefox_android": "129",
                        "safari": "17.4",
                        "safari_ios": "17.4"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 5
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.73,
                      "interest": 0,
                      "usage": 0.37,
                      "retention": 1,
                      "positivity": 0.19,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 55,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 40,
                            "id": "neutral",
                            "percentageBucket": 72.73,
                            "percentageQuestion": 18.87,
                            "percentageSurvey": 16
                          },
                          {
                            "count": 15,
                            "id": "insufficient_data",
                            "percentageBucket": 27
                          }
                        ],
                        "percentageQuestion": 25.94,
                        "percentageSurvey": 22
                      },
                      {
                        "count": 75,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 37,
                            "id": "neutral",
                            "percentageBucket": 49.33,
                            "percentageQuestion": 17.45,
                            "percentageSurvey": 14.8
                          },
                          {
                            "count": 38,
                            "id": "insufficient_data",
                            "percentageBucket": 51
                          }
                        ],
                        "percentageQuestion": 35.38,
                        "percentageSurvey": 30
                      },
                      {
                        "count": 79,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 40,
                            "id": "positive",
                            "percentageBucket": 50.63,
                            "percentageQuestion": 18.87,
                            "percentageSurvey": 16
                          },
                          {
                            "count": 39,
                            "id": "insufficient_data",
                            "percentageBucket": 49
                          }
                        ],
                        "percentageQuestion": 37.26,
                        "percentageSurvey": 31.6
                      }
                    ],
                    "completion": {
                      "count": 212,
                      "percentageSurvey": 84.8,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "scroll_state",
                "_metadata": {
                  "sectionId": "interactions"
                },
                "entity": {
                  "name": "Container scroll-state queries",
                  "nameClean": "Container scroll-state queries",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_at-rules_container_scroll-state_queries",
                    "url": "https://caniuse.com/mdn-css_at-rules_container_scroll-state_queries"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_conditional_rules/Container_scroll-state_queries",
                    "title": "Using container scroll-state queries",
                    "summary": "Container scroll-state queries are a type of container query. Rather than selectively applying styles to descendant elements based on the container's size, scroll-state queries allow you to selectively apply styles to descendant elements based on the container's scroll state. This can include whether the container is partially scrolled, snapped to a scroll snap container ancestor, or positioned via position: sticky and stuck to a boundary of a scroll container ancestor."
                  },
                  "example": {
                    "language": "css",
                    "code": "@container scroller scroll-state(scrollable: top) {\n  .back-to-top {\n    translate: 0 0;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@container</span> scroller scroll-state(<span class=\"hljs-attribute\">scrollable</span>: top) {\n  <span class=\"hljs-selector-class\">.back-to-top</span> {\n    <span class=\"hljs-attribute\">translate</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">0</span>;\n  }\n}"
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 1
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.31,
                      "interest": 1,
                      "usage": 0.04,
                      "retention": 0,
                      "positivity": 0.15,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 143,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 94,
                            "id": "neutral",
                            "percentageBucket": 65.73,
                            "percentageQuestion": 44.55,
                            "percentageSurvey": 37.6
                          },
                          {
                            "count": 49,
                            "id": "insufficient_data",
                            "percentageBucket": 34
                          }
                        ],
                        "percentageQuestion": 67.77,
                        "percentageSurvey": 57.2
                      },
                      {
                        "count": 57,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 32,
                            "id": "positive",
                            "percentageBucket": 56.14,
                            "percentageQuestion": 15.17,
                            "percentageSurvey": 12.8
                          },
                          {
                            "count": 25,
                            "id": "neutral",
                            "percentageBucket": 43.86,
                            "percentageQuestion": 11.85,
                            "percentageSurvey": 10
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 27.01,
                        "percentageSurvey": 22.8
                      },
                      {
                        "count": 10,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 10,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 4.74,
                        "percentageSurvey": 4
                      }
                    ],
                    "completion": {
                      "count": 211,
                      "percentageSurvey": 84.4,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "css_carousels",
                "_metadata": {
                  "sectionId": "interactions"
                },
                "entity": {
                  "name": "CSS Carousels",
                  "nameClean": "CSS Carousels",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_selectors_scroll-marker",
                    "url": "https://caniuse.com/mdn-css_selectors_scroll-marker"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_overflow/CSS_carousels",
                    "title": "Creating CSS carousels",
                    "summary": "The CSS overflow module defines features enabling the creation of flexible and accessible pure-CSS carousels with browser-generated and developer-styled scroll buttons and scroll markers. This guide explains how to create a carousel using these features."
                  },
                  "example": {
                    "language": "css",
                    "code": ".carousel {\n  &::scroll-button(left) {\n    content: \"⬅\" / \"Scroll Left\";\n  }\n  \n  &::scroll-button(right) {\n    content: \"⮕\" / \"Scroll Right\";\n  }\n\n  &::scroll-button(*):focus-visible {\n    outline-offset: 5px;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.carousel</span> {\n  &amp;::<span class=\"hljs-built_in\">scroll-button</span>(left) {\n    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot;⬅&quot;</span> / <span class=\"hljs-string\">&quot;Scroll Left&quot;</span>;\n  }\n  \n  &amp;::<span class=\"hljs-built_in\">scroll-button</span>(right) {\n    <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot;⮕&quot;</span> / <span class=\"hljs-string\">&quot;Scroll Right&quot;</span>;\n  }\n\n  &amp;::<span class=\"hljs-built_in\">scroll-button</span>(*):focus-visible {\n    <span class=\"hljs-attribute\">outline-offset</span>: <span class=\"hljs-number\">5px</span>;\n  }\n}"
                  },
                  "resources": [
                    {
                      "title": "Carousels with CSS",
                      "url": "https://developer.chrome.com/blog/carousels-with-css"
                    },
                    {
                      "title": "CSS Carousel Gallery",
                      "url": "https://chrome.dev/carousel/"
                    },
                    {
                      "title": "CSS Carousels",
                      "url": "https://css-tricks.com/css-carousels/"
                    }
                  ]
                },
                "comments": {
                  "currentEdition": {
                    "count": 15
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.65,
                      "interest": 0.67,
                      "usage": 0.05,
                      "retention": 0,
                      "positivity": 0.19,
                      "positivityRelative": 0.67
                    },
                    "buckets": [
                      {
                        "count": 72,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 39,
                            "id": "neutral",
                            "percentageBucket": 54.17,
                            "percentageQuestion": 18.4,
                            "percentageSurvey": 15.6
                          },
                          {
                            "count": 33,
                            "id": "insufficient_data",
                            "percentageBucket": 46
                          }
                        ],
                        "percentageQuestion": 33.96,
                        "percentageSurvey": 28.8
                      },
                      {
                        "count": 126,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 41,
                            "id": "positive",
                            "percentageBucket": 32.54,
                            "percentageQuestion": 19.34,
                            "percentageSurvey": 16.4
                          },
                          {
                            "count": 65,
                            "id": "neutral",
                            "percentageBucket": 51.59,
                            "percentageQuestion": 30.66,
                            "percentageSurvey": 26
                          },
                          {
                            "count": 20,
                            "id": "negative",
                            "percentageBucket": 15.87,
                            "percentageQuestion": 9.43,
                            "percentageSurvey": 8
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 59.43,
                        "percentageSurvey": 50.4
                      },
                      {
                        "count": 11,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 11,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 5.19,
                        "percentageSurvey": 4.4
                      }
                    ],
                    "completion": {
                      "count": 212,
                      "percentageSurvey": 84.8,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "line_clamp",
                "_metadata": {
                  "sectionId": "typography"
                },
                "entity": {
                  "name": "`line-clamp`",
                  "nameClean": "line-clamp",
                  "nameHtml": "<code>line-clamp</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-line-clamp",
                    "url": "https://caniuse.com/css-line-clamp"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/line-clamp",
                    "title": "line-clamp",
                    "summary": "The line-clamp CSS property allows limiting of the contents of a block to the specified number of lines."
                  },
                  "example": {
                    "language": "css",
                    "code": "p {\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">p</span> {\n  <span class=\"hljs-attribute\">display</span>: -webkit-box;\n  -webkit-<span class=\"hljs-selector-tag\">line</span>-clamp: <span class=\"hljs-number\">2</span>;\n  -webkit-<span class=\"hljs-attribute\">box-orient</span>: vertical;\n  <span class=\"hljs-attribute\">overflow</span>: hidden;\n}"
                  },
                  "webFeature": {
                    "id": "line-clamp",
                    "description_html": "The <code>line-clamp</code> CSS property limits the text in a block container to a certain number of lines. The prefixed <code>-webkit-line-clamp</code> is widely supported but only works with <code>-webkit-box-orient: vertical</code> in combination with <code>display: -webkit-box</code> or <code>display: -webkit-inline-box</code>.",
                    "group": [
                      "css"
                    ],
                    "name": "line-clamp",
                    "spec": [
                      "https://drafts.csswg.org/css-overflow-4/#line-clamp"
                    ],
                    "status": {
                      "baseline": "false",
                      "support": {
                        "safari": "18.2",
                        "safari_ios": "18.2"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 9
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.75,
                      "interest": 0,
                      "usage": 0.56,
                      "retention": 0.71,
                      "positivity": 0.2,
                      "positivityRelative": 0.71
                    },
                    "buckets": [
                      {
                        "count": 51,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 27,
                            "id": "neutral",
                            "percentageBucket": 52.94,
                            "percentageQuestion": 12.86,
                            "percentageSurvey": 10.8
                          },
                          {
                            "count": 24,
                            "id": "insufficient_data",
                            "percentageBucket": 47
                          }
                        ],
                        "percentageQuestion": 24.29,
                        "percentageSurvey": 20.4
                      },
                      {
                        "count": 40,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 26,
                            "id": "neutral",
                            "percentageBucket": 65,
                            "percentageQuestion": 12.38,
                            "percentageSurvey": 10.4
                          },
                          {
                            "count": 14,
                            "id": "insufficient_data",
                            "percentageBucket": 35
                          }
                        ],
                        "percentageQuestion": 19.05,
                        "percentageSurvey": 16
                      },
                      {
                        "count": 118,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 58,
                            "id": "neutral",
                            "percentageBucket": 49.15,
                            "percentageQuestion": 27.62,
                            "percentageSurvey": 23.2
                          },
                          {
                            "count": 17,
                            "id": "negative",
                            "percentageBucket": 14.41,
                            "percentageQuestion": 8.1,
                            "percentageSurvey": 6.8
                          },
                          {
                            "count": 43,
                            "id": "positive",
                            "percentageBucket": 36.44,
                            "percentageQuestion": 20.48,
                            "percentageSurvey": 17.2
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 56.19,
                        "percentageSurvey": 47.2
                      }
                    ],
                    "completion": {
                      "count": 210,
                      "percentageSurvey": 84,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "variable_fonts",
                "_metadata": {
                  "sectionId": "typography"
                },
                "entity": {
                  "name": "Variable Fonts",
                  "nameClean": "Variable Fonts",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "variable-fonts",
                    "url": "https://caniuse.com/variable-fonts"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_fonts/Variable_fonts_guide",
                    "title": "Variable fonts guide",
                    "summary": "Variable fonts are an evolution of the OpenType font specification that enables many different variations of a typeface to be incorporated into a single file, rather than having a separate font file for every width, weight, or style. They let you access all the variations contained in a given font file via CSS and a single @font-face reference. This article will give you all you need to know to get you started using variable fonts."
                  },
                  "example": {
                    "language": "css",
                    "code": "@font-face {\n  font-family: \"Fraunces\";\n  src: url(\"fraunces.woff2\") format(\"woff2\");\n  font-weight: 200 700;\n}\n\nh2 {\n  font-family: \"Fraunces\";\n  font-variation-settings: \"wght\" 375, \"SOFT\" 100;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@font-face</span> {\n  <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">&quot;Fraunces&quot;</span>;\n  <span class=\"hljs-attribute\">src</span>: <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">&quot;fraunces.woff2&quot;</span>) <span class=\"hljs-built_in\">format</span>(<span class=\"hljs-string\">&quot;woff2&quot;</span>);\n  <span class=\"hljs-attribute\">font-weight</span>: <span class=\"hljs-number\">200</span> <span class=\"hljs-number\">700</span>;\n}\n\n<span class=\"hljs-selector-tag\">h2</span> {\n  <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">&quot;Fraunces&quot;</span>;\n  <span class=\"hljs-attribute\">font-variation-settings</span>: <span class=\"hljs-string\">&quot;wght&quot;</span> <span class=\"hljs-number\">375</span>, <span class=\"hljs-string\">&quot;SOFT&quot;</span> <span class=\"hljs-number\">100</span>;\n}"
                  },
                  "webFeature": {
                    "id": "font-variation-settings",
                    "description_html": "The <code>font-variation-settings</code> CSS property sets an \"axis of variability\" on a variable font, such as weight, optical size, or a custom axis defined by the typeface designer. When possible, use other CSS font properties, such as <code>font-weight: bold</code>. Also known as variable fonts.",
                    "group": [
                      "fonts"
                    ],
                    "name": "font-variation-settings",
                    "spec": [
                      "https://drafts.csswg.org/css-fonts-4/#font-variation-settings-def"
                    ],
                    "status": {
                      "baseline": "high",
                      "baseline_low_date": "2018-09-05",
                      "support": {
                        "chrome": "62",
                        "chrome_android": "62",
                        "edge": "17",
                        "firefox": "62",
                        "firefox_android": "62",
                        "safari": "11",
                        "safari_ios": "11"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 3
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.87,
                      "interest": 0,
                      "usage": 0.6,
                      "retention": 0,
                      "positivity": 0
                    },
                    "buckets": [
                      {
                        "count": 26,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 15,
                            "id": "neutral",
                            "percentageBucket": 57.69,
                            "percentageQuestion": 7.14,
                            "percentageSurvey": 6
                          },
                          {
                            "count": 11,
                            "id": "insufficient_data",
                            "percentageBucket": 42
                          }
                        ],
                        "percentageQuestion": 12.38,
                        "percentageSurvey": 10.4
                      },
                      {
                        "count": 58,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 37,
                            "id": "neutral",
                            "percentageBucket": 63.79,
                            "percentageQuestion": 17.62,
                            "percentageSurvey": 14.8
                          },
                          {
                            "count": 21,
                            "id": "insufficient_data",
                            "percentageBucket": 36
                          }
                        ],
                        "percentageQuestion": 27.62,
                        "percentageSurvey": 23.2
                      },
                      {
                        "count": 126,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 67,
                            "id": "neutral",
                            "percentageBucket": 53.17,
                            "percentageQuestion": 31.9,
                            "percentageSurvey": 26.8
                          },
                          {
                            "count": 59,
                            "id": "insufficient_data",
                            "percentageBucket": 47
                          }
                        ],
                        "percentageQuestion": 60,
                        "percentageSurvey": 50.4
                      }
                    ],
                    "completion": {
                      "count": 210,
                      "percentageSurvey": 84,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "text_wrap_balance",
                "_metadata": {
                  "sectionId": "typography"
                },
                "entity": {
                  "name": "`text-wrap: balance`",
                  "nameClean": "text-wrap: balance",
                  "nameHtml": "<code>text-wrap: balance</code>",
                  "entityType": "feature",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/text-wrap",
                    "title": "text-wrap",
                    "summary": "The text-wrap CSS shorthand property controls how text inside an element is wrapped. The different values provide:"
                  },
                  "example": {
                    "language": "css",
                    "code": ".balanced {\n  max-inline-size: 50ch;\n  text-wrap: balance;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.balanced</span> {\n  <span class=\"hljs-attribute\">max-inline-size</span>: <span class=\"hljs-number\">50ch</span>;\n  <span class=\"hljs-attribute\">text-wrap</span>: balance;\n}"
                  },
                  "resources": [
                    {
                      "title": "CSS text-wrap: balance\n",
                      "url": "https://developer.chrome.com/blog/css-text-wrap-balance/"
                    }
                  ],
                  "webFeature": {
                    "id": "text-wrap-balance",
                    "description_html": "The <code>text-wrap: balance</code> CSS declaration balances the length of each line when text is broken into multiple lines. Also known as headline balancing.",
                    "group": [
                      "text-wrap"
                    ],
                    "name": "text-wrap: balance",
                    "spec": [
                      "https://drafts.csswg.org/css-text-4/#valdef-text-wrap-style-balance"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2024-05-13",
                      "support": {
                        "chrome": "114",
                        "chrome_android": "114",
                        "edge": "114",
                        "firefox": "121",
                        "firefox_android": "121",
                        "safari": "17.5",
                        "safari_ios": "17.5"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 1
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.89,
                      "interest": 1,
                      "usage": 0.7,
                      "retention": 1,
                      "positivity": 0.44,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 21,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 21,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 10,
                        "percentageSurvey": 8.4
                      },
                      {
                        "count": 40,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 25,
                            "id": "neutral",
                            "percentageBucket": 62.5,
                            "percentageQuestion": 11.9,
                            "percentageSurvey": 10
                          },
                          {
                            "count": 15,
                            "id": "positive",
                            "percentageBucket": 37.5,
                            "percentageQuestion": 7.14,
                            "percentageSurvey": 6
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 19.05,
                        "percentageSurvey": 16
                      },
                      {
                        "count": 148,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 79,
                            "id": "positive",
                            "percentageBucket": 53.38,
                            "percentageQuestion": 37.62,
                            "percentageSurvey": 31.6
                          },
                          {
                            "count": 69,
                            "id": "insufficient_data",
                            "percentageBucket": 47
                          }
                        ],
                        "percentageQuestion": 70.48,
                        "percentageSurvey": 59.2
                      }
                    ],
                    "completion": {
                      "count": 210,
                      "percentageSurvey": 84,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "text_wrap_pretty",
                "_metadata": {
                  "sectionId": "typography"
                },
                "entity": {
                  "name": "`text-wrap: pretty`",
                  "nameClean": "text-wrap: pretty",
                  "nameHtml": "<code>text-wrap: pretty</code>",
                  "entityType": "feature",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/text-wrap",
                    "title": "text-wrap",
                    "summary": "The text-wrap CSS shorthand property controls how text inside an element is wrapped. The different values provide:"
                  },
                  "example": {
                    "language": "css",
                    "code": ".pretty {\n  text-wrap: pretty;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.pretty</span> {\n  <span class=\"hljs-attribute\">text-wrap</span>: pretty;\n}"
                  },
                  "resources": [
                    {
                      "title": "CSS text-wrap: pretty\n",
                      "url": "https://developer.chrome.com/blog/css-text-wrap-pretty"
                    }
                  ],
                  "webFeature": {
                    "id": "text-wrap-pretty",
                    "description_html": "The <code>text-wrap: pretty</code> CSS declaration prioritizes better layout over speed when text is broken into multiple lines.",
                    "group": [
                      "text-wrap"
                    ],
                    "name": "text-wrap: pretty",
                    "spec": [
                      "https://drafts.csswg.org/css-text-4/#valdef-text-wrap-style-pretty"
                    ],
                    "status": {
                      "baseline": "false",
                      "support": {
                        "chrome": "117",
                        "chrome_android": "117",
                        "edge": "117"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 2
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.82,
                      "interest": 1,
                      "usage": 0.6,
                      "retention": 1,
                      "positivity": 0.49,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 36,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 21,
                            "id": "neutral",
                            "percentageBucket": 58.33,
                            "percentageQuestion": 10.1,
                            "percentageSurvey": 8.4
                          },
                          {
                            "count": 15,
                            "id": "positive",
                            "percentageBucket": 41.67,
                            "percentageQuestion": 7.21,
                            "percentageSurvey": 6
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 17.31,
                        "percentageSurvey": 14.4
                      },
                      {
                        "count": 46,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 26,
                            "id": "neutral",
                            "percentageBucket": 56.52,
                            "percentageQuestion": 12.5,
                            "percentageSurvey": 10.4
                          },
                          {
                            "count": 20,
                            "id": "positive",
                            "percentageBucket": 43.48,
                            "percentageQuestion": 9.62,
                            "percentageSurvey": 8
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 22.12,
                        "percentageSurvey": 18.4
                      },
                      {
                        "count": 126,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 67,
                            "id": "positive",
                            "percentageBucket": 53.17,
                            "percentageQuestion": 32.21,
                            "percentageSurvey": 26.8
                          },
                          {
                            "count": 59,
                            "id": "insufficient_data",
                            "percentageBucket": 47
                          }
                        ],
                        "percentageQuestion": 60.58,
                        "percentageSurvey": 50.4
                      }
                    ],
                    "completion": {
                      "count": 208,
                      "percentageSurvey": 83.2,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "hanging_punctuation",
                "_metadata": {
                  "sectionId": "typography"
                },
                "entity": {
                  "name": "`hanging-punctuation`",
                  "nameClean": "hanging-punctuation",
                  "nameHtml": "<code>hanging-punctuation</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-hanging-punctuation",
                    "url": "https://caniuse.com/css-hanging-punctuation"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/hanging-punctuation",
                    "title": "hanging-punctuation",
                    "summary": "The hanging-punctuation CSS property specifies whether a punctuation mark should hang at the start or end of a line of text. Hanging punctuation may be placed outside the line box."
                  },
                  "example": {
                    "language": "css",
                    "code": "p.hanging {\n  hanging-punctuation: first last;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-class\">.hanging</span> {\n  <span class=\"hljs-attribute\">hanging-punctuation</span>: first last;\n}"
                  },
                  "webFeature": {
                    "id": "hanging-punctuation",
                    "description_html": "The <code>hanging-punctuation</code> CSS property puts punctuation characters outside of the box to align the text with the rest of the document.",
                    "name": "Hanging punctuation",
                    "spec": [
                      "https://drafts.csswg.org/css-text-4/#hanging-punctuation-property"
                    ],
                    "status": {
                      "baseline": "false"
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 2
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.33,
                      "interest": 0,
                      "usage": 0.1,
                      "retention": 0,
                      "positivity": 0
                    },
                    "buckets": [
                      {
                        "count": 139,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 86,
                            "id": "neutral",
                            "percentageBucket": 61.87,
                            "percentageQuestion": 41.15,
                            "percentageSurvey": 34.4
                          },
                          {
                            "count": 53,
                            "id": "insufficient_data",
                            "percentageBucket": 38
                          }
                        ],
                        "percentageQuestion": 66.51,
                        "percentageSurvey": 55.6
                      },
                      {
                        "count": 47,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 28,
                            "id": "neutral",
                            "percentageBucket": 59.57,
                            "percentageQuestion": 13.4,
                            "percentageSurvey": 11.2
                          },
                          {
                            "count": 19,
                            "id": "insufficient_data",
                            "percentageBucket": 40
                          }
                        ],
                        "percentageQuestion": 22.49,
                        "percentageSurvey": 18.8
                      },
                      {
                        "count": 22,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 11,
                            "id": "neutral",
                            "percentageBucket": 50,
                            "percentageQuestion": 5.26,
                            "percentageSurvey": 4.4
                          },
                          {
                            "count": 11,
                            "id": "insufficient_data",
                            "percentageBucket": 50
                          }
                        ],
                        "percentageQuestion": 10.53,
                        "percentageSurvey": 8.8
                      }
                    ],
                    "completion": {
                      "count": 209,
                      "percentageSurvey": 83.6,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "initial_letter",
                "_metadata": {
                  "sectionId": "typography"
                },
                "entity": {
                  "name": "`initial-letter`",
                  "nameClean": "initial-letter",
                  "nameHtml": "<code>initial-letter</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-initial-letter",
                    "url": "https://caniuse.com/css-initial-letter"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/initial-letter",
                    "title": "initial-letter",
                    "summary": "The initial-letter CSS property sets the size and sink for dropped, raised, and sunken initial letters. This property applies to ::first-letter pseudo-elements and inline-level first children of block containers."
                  },
                  "example": {
                    "language": "css",
                    "code": ".intro {\n  /* Initial letter occupies 3 lines */\n  initial-letter: 3;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.intro</span> {\n  <span class=\"hljs-comment\">/* Initial letter occupies 3 lines */</span>\n  <span class=\"hljs-attribute\">initial-letter</span>: <span class=\"hljs-number\">3</span>;\n}"
                  },
                  "webFeature": {
                    "id": "initial-letter",
                    "description_html": "The <code>initial-letter</code> CSS property sets the number of lines the first letter of an element occupies. You can use the property to make a raised capital or drop cap.",
                    "group": [
                      "css"
                    ],
                    "name": "initial-letter",
                    "spec": [
                      "https://drafts.csswg.org/css-inline-3/#sizing-drop-initials"
                    ],
                    "status": {
                      "baseline": "false",
                      "support": {
                        "chrome": "110",
                        "chrome_android": "110",
                        "edge": "110"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 2
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.65,
                      "interest": 0,
                      "usage": 0.2,
                      "retention": 0,
                      "positivity": 0
                    },
                    "buckets": [
                      {
                        "count": 72,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 40,
                            "id": "neutral",
                            "percentageBucket": 55.56,
                            "percentageQuestion": 19.14,
                            "percentageSurvey": 16
                          },
                          {
                            "count": 32,
                            "id": "insufficient_data",
                            "percentageBucket": 44
                          }
                        ],
                        "percentageQuestion": 34.45,
                        "percentageSurvey": 28.8
                      },
                      {
                        "count": 93,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 67,
                            "id": "neutral",
                            "percentageBucket": 72.04,
                            "percentageQuestion": 32.06,
                            "percentageSurvey": 26.8
                          },
                          {
                            "count": 26,
                            "id": "insufficient_data",
                            "percentageBucket": 28
                          }
                        ],
                        "percentageQuestion": 44.5,
                        "percentageSurvey": 37.2
                      },
                      {
                        "count": 43,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 22,
                            "id": "neutral",
                            "percentageBucket": 51.16,
                            "percentageQuestion": 10.53,
                            "percentageSurvey": 8.8
                          },
                          {
                            "count": 21,
                            "id": "insufficient_data",
                            "percentageBucket": 49
                          }
                        ],
                        "percentageQuestion": 20.57,
                        "percentageSurvey": 17.2
                      }
                    ],
                    "completion": {
                      "count": 209,
                      "percentageSurvey": 83.6,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "text_box_trim",
                "_metadata": {
                  "sectionId": "typography"
                },
                "entity": {
                  "name": "`text-box-edge`/`text-box-trim`",
                  "nameClean": "text-box-edge/text-box-trim",
                  "nameHtml": "<code>text-box-edge</code>/<code>text-box-trim</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-text-box-trim",
                    "url": "https://caniuse.com/css-text-box-trim"
                  },
                  "example": {
                    "language": "css",
                    "code": "p {\n  text-box-edge: cap alphabetic;\n  text-box-trim: trim-both;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">p</span> {\n  <span class=\"hljs-selector-tag\">text</span>-box-edge: cap alphabetic;\n  <span class=\"hljs-selector-tag\">text</span>-box-trim: trim-both;\n}"
                  },
                  "resources": [
                    {
                      "title": "Leading-Trim: The Future of Digital Typesetting",
                      "url": "https://medium.com/microsoft-design/leading-trim-the-future-of-digital-typesetting-d082d84b202"
                    }
                  ]
                },
                "comments": {
                  "currentEdition": {
                    "count": 4
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.41,
                      "interest": 1,
                      "usage": 0.16,
                      "retention": 1,
                      "positivity": 0.24,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 122,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 80,
                            "id": "neutral",
                            "percentageBucket": 65.57,
                            "percentageQuestion": 38.28,
                            "percentageSurvey": 32
                          },
                          {
                            "count": 42,
                            "id": "insufficient_data",
                            "percentageBucket": 34
                          }
                        ],
                        "percentageQuestion": 58.37,
                        "percentageSurvey": 48.8
                      },
                      {
                        "count": 53,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 24,
                            "id": "neutral",
                            "percentageBucket": 45.28,
                            "percentageQuestion": 11.48,
                            "percentageSurvey": 9.6
                          },
                          {
                            "count": 29,
                            "id": "positive",
                            "percentageBucket": 54.72,
                            "percentageQuestion": 13.88,
                            "percentageSurvey": 11.6
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 25.36,
                        "percentageSurvey": 21.2
                      },
                      {
                        "count": 34,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 12,
                            "id": "neutral",
                            "percentageBucket": 35.29,
                            "percentageQuestion": 5.74,
                            "percentageSurvey": 4.8
                          },
                          {
                            "count": 22,
                            "id": "positive",
                            "percentageBucket": 64.71,
                            "percentageQuestion": 10.53,
                            "percentageSurvey": 8.8
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 16.27,
                        "percentageSurvey": 13.6
                      }
                    ],
                    "completion": {
                      "count": 209,
                      "percentageSurvey": 83.6,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "comparison_functions",
                "_metadata": {
                  "sectionId": "math_features"
                },
                "entity": {
                  "name": "Comparison Functions",
                  "nameClean": "Comparison Functions",
                  "entityType": "feature",
                  "description": "`min()`, `max()`, `clamp()`\n",
                  "descriptionClean": "min(), max(), clamp()",
                  "descriptionHtml": "<code>min()</code>, <code>max()</code>, <code>clamp()</code>\n",
                  "caniuse": {
                    "name": "css-math-functions",
                    "url": "https://caniuse.com/css-math-functions"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Values_and_Units/CSS_Value_Functions",
                    "title": "CSS value functions",
                    "summary": "CSS value functions are statements that invoke special data processing or calculations to return a CSS value for a CSS property. CSS value functions represent more complex data types and they may take some input arguments to calculate the return value."
                  },
                  "example": {
                    "language": "css",
                    "code": ".element {\n  width: clamp(100px, 50vw, 600px);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.element</span> {\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-built_in\">clamp</span>(<span class=\"hljs-number\">100px</span>, <span class=\"hljs-number\">50vw</span>, <span class=\"hljs-number\">600px</span>);\n}"
                  },
                  "webFeature": {
                    "id": "min-max-clamp",
                    "description_html": "The <code>min()</code> and <code>max()</code> CSS functions return the minimum or maximum of the arguments, while <code>clamp()</code> clamps a value to a given range.",
                    "group": [
                      "css"
                    ],
                    "name": "min(), max(), and clamp()",
                    "spec": [
                      "https://drafts.csswg.org/css-values-4/#comp-func"
                    ],
                    "status": {
                      "baseline": "high",
                      "baseline_low_date": "2020-07-28",
                      "support": {
                        "chrome": "79",
                        "chrome_android": "79",
                        "edge": "79",
                        "firefox": "75",
                        "firefox_android": "79",
                        "safari": "13.1",
                        "safari_ios": "13.4"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 2
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.95,
                      "interest": 0,
                      "usage": 0.8,
                      "retention": 1,
                      "positivity": 0.4,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 10,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 10,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 4.83,
                        "percentageSurvey": 4
                      },
                      {
                        "count": 31,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 31,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 14.98,
                        "percentageSurvey": 12.4
                      },
                      {
                        "count": 164,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 84,
                            "id": "positive",
                            "percentageBucket": 51.22,
                            "percentageQuestion": 40.58,
                            "percentageSurvey": 33.6
                          },
                          {
                            "count": 80,
                            "id": "insufficient_data",
                            "percentageBucket": 49
                          }
                        ],
                        "percentageQuestion": 79.23,
                        "percentageSurvey": 65.6
                      }
                    ],
                    "completion": {
                      "count": 207,
                      "percentageSurvey": 82.8,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "trigonometric_functions",
                "_metadata": {
                  "sectionId": "math_features"
                },
                "entity": {
                  "name": "Trigonometric Functions",
                  "nameClean": "Trigonometric Functions",
                  "entityType": "feature",
                  "description": "`sin()`, `cos()`, `tan()`…\n",
                  "descriptionClean": "sin(), cos(), tan()…",
                  "descriptionHtml": "<code>sin()</code>, <code>cos()</code>, <code>tan()</code>…\n",
                  "caniuse": {
                    "name": "css-math-functions",
                    "url": "https://caniuse.com/css-math-functions"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Values_and_Units/CSS_Value_Functions",
                    "title": "CSS value functions",
                    "summary": "CSS value functions are statements that invoke special data processing or calculations to return a CSS value for a CSS property. CSS value functions represent more complex data types and they may take some input arguments to calculate the return value."
                  },
                  "example": {
                    "language": "css",
                    "code": "div {\n  width: calc(100px * cos(45deg));\n  height: calc(100px * cos(45deg));\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">div</span> {\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-built_in\">calc</span>(<span class=\"hljs-number\">100px</span> * <span class=\"hljs-built_in\">cos</span>(<span class=\"hljs-number\">45deg</span>));\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-built_in\">calc</span>(<span class=\"hljs-number\">100px</span> * <span class=\"hljs-built_in\">cos</span>(<span class=\"hljs-number\">45deg</span>));\n}"
                  },
                  "webFeature": {
                    "id": "trig-functions",
                    "description_html": "The <code>sin()</code>, <code>cos()</code>, <code>tan()</code>, <code>asin()</code>, <code>acos()</code>, <code>atan()</code>, and <code>atan2()</code> CSS functions compute various trigonometric functions.",
                    "group": [
                      "css"
                    ],
                    "name": "sin(), cos(), tan(), asin(), acos(), atan(), and atan2() (CSS)",
                    "spec": [
                      "https://drafts.csswg.org/css-values-4/#trig-funcs"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2023-03-13",
                      "support": {
                        "chrome": "111",
                        "chrome_android": "111",
                        "edge": "111",
                        "firefox": "108",
                        "firefox_android": "108",
                        "safari": "15.4",
                        "safari_ios": "15.4"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 1
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.85,
                      "interest": 0.71,
                      "usage": 0.22,
                      "retention": 1,
                      "positivity": 0.24,
                      "positivityRelative": 0.79
                    },
                    "buckets": [
                      {
                        "count": 29,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 19,
                            "id": "neutral",
                            "percentageBucket": 65.52,
                            "percentageQuestion": 9.18,
                            "percentageSurvey": 7.6
                          },
                          {
                            "count": 10,
                            "id": "insufficient_data",
                            "percentageBucket": 34
                          }
                        ],
                        "percentageQuestion": 14.01,
                        "percentageSurvey": 11.6
                      },
                      {
                        "count": 128,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 82,
                            "id": "neutral",
                            "percentageBucket": 64.06,
                            "percentageQuestion": 39.61,
                            "percentageSurvey": 32.8
                          },
                          {
                            "count": 13,
                            "id": "negative",
                            "percentageBucket": 10.16,
                            "percentageQuestion": 6.28,
                            "percentageSurvey": 5.2
                          },
                          {
                            "count": 33,
                            "id": "positive",
                            "percentageBucket": 25.78,
                            "percentageQuestion": 15.94,
                            "percentageSurvey": 13.2
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 61.84,
                        "percentageSurvey": 51.2
                      },
                      {
                        "count": 46,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 29,
                            "id": "neutral",
                            "percentageBucket": 63.04,
                            "percentageQuestion": 14.01,
                            "percentageSurvey": 11.6
                          },
                          {
                            "count": 17,
                            "id": "positive",
                            "percentageBucket": 36.96,
                            "percentageQuestion": 8.21,
                            "percentageSurvey": 6.8
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 22.22,
                        "percentageSurvey": 18.4
                      }
                    ],
                    "completion": {
                      "count": 207,
                      "percentageSurvey": 82.8,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "stepped_value_functions",
                "_metadata": {
                  "sectionId": "math_features"
                },
                "entity": {
                  "name": "Stepped Value Functions",
                  "nameClean": "Stepped Value Functions",
                  "entityType": "feature",
                  "description": "`round()`, `mod()`, `rem()`\n",
                  "descriptionClean": "round(), mod(), rem()",
                  "descriptionHtml": "<code>round()</code>, <code>mod()</code>, <code>rem()</code>\n",
                  "caniuse": {
                    "name": "mdn-css_types_round",
                    "url": "https://caniuse.com/mdn-css_types_round"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Values_and_Units/CSS_Value_Functions",
                    "title": "CSS value functions",
                    "summary": "CSS value functions are statements that invoke special data processing or calculations to return a CSS value for a CSS property. CSS value functions represent more complex data types and they may take some input arguments to calculate the return value."
                  },
                  "example": {
                    "language": "css",
                    "code": "div {\n  width: round(var(--width), 50px);\n  line-height: mod(7, 2); /* 1 */\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">div</span> {\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-built_in\">round</span>(<span class=\"hljs-built_in\">var</span>(--width), <span class=\"hljs-number\">50px</span>);\n  <span class=\"hljs-attribute\">line-height</span>: <span class=\"hljs-built_in\">mod</span>(<span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">2</span>); <span class=\"hljs-comment\">/* 1 */</span>\n}"
                  },
                  "webFeature": {
                    "id": "round-mod-rem",
                    "description_html": "The <code>round()</code>, <code>mod()</code>, and <code>rem()</code> CSS functions compute rounded values and the remainder after division.",
                    "group": [
                      "css"
                    ],
                    "name": "round(), mod(), and rem()",
                    "spec": [
                      "https://drafts.csswg.org/css-values-4/#round-func"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2024-05-17",
                      "support": {
                        "chrome": "125",
                        "chrome_android": "125",
                        "edge": "125",
                        "firefox": "118",
                        "firefox_android": "118",
                        "safari": "15.4",
                        "safari_ios": "15.4"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 2
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.52,
                      "interest": 0,
                      "usage": 0.15,
                      "retention": 1,
                      "positivity": 0.07,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 98,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 61,
                            "id": "neutral",
                            "percentageBucket": 62.24,
                            "percentageQuestion": 29.47,
                            "percentageSurvey": 24.4
                          },
                          {
                            "count": 37,
                            "id": "insufficient_data",
                            "percentageBucket": 38
                          }
                        ],
                        "percentageQuestion": 47.34,
                        "percentageSurvey": 39.2
                      },
                      {
                        "count": 77,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 44,
                            "id": "neutral",
                            "percentageBucket": 57.14,
                            "percentageQuestion": 21.26,
                            "percentageSurvey": 17.6
                          },
                          {
                            "count": 33,
                            "id": "insufficient_data",
                            "percentageBucket": 43
                          }
                        ],
                        "percentageQuestion": 37.2,
                        "percentageSurvey": 30.8
                      },
                      {
                        "count": 31,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 15,
                            "id": "neutral",
                            "percentageBucket": 48.39,
                            "percentageQuestion": 7.25,
                            "percentageSurvey": 6
                          },
                          {
                            "count": 16,
                            "id": "positive",
                            "percentageBucket": 51.61,
                            "percentageQuestion": 7.73,
                            "percentageSurvey": 6.4
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 14.98,
                        "percentageSurvey": 12.4
                      }
                    ],
                    "completion": {
                      "count": 207,
                      "percentageSurvey": 82.8,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "sign_related_functions",
                "_metadata": {
                  "sectionId": "math_features"
                },
                "entity": {
                  "name": "Sign-related Functions",
                  "nameClean": "Sign-related Functions",
                  "entityType": "feature",
                  "description": "`sign()`, `abs()`\n",
                  "descriptionClean": "sign(), abs()",
                  "descriptionHtml": "<code>sign()</code>, <code>abs()</code>\n",
                  "caniuse": {
                    "name": "css-math-functions",
                    "url": "https://caniuse.com/css-math-functions"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/sign",
                    "title": "sign()",
                    "summary": "The sign() CSS function contains one calculation, and returns -1 if the numeric value of the argument is negative, +1 if the numeric value of the argument is positive, 0⁺ if the numeric value of the argument is 0⁺, and 0⁻ if the numeric value of the argument is 0⁻."
                  },
                  "example": {
                    "language": "css",
                    "code": "div {\n  top: sign(20vh - 100px);\n  width: abs(20% - 100px);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">div</span> {\n  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-built_in\">sign</span>(<span class=\"hljs-number\">20vh</span> - <span class=\"hljs-number\">100px</span>);\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-built_in\">abs</span>(<span class=\"hljs-number\">20%</span> - <span class=\"hljs-number\">100px</span>);\n}"
                  },
                  "webFeature": {
                    "id": "abs-sign",
                    "description_html": "The <code>abs()</code> and <code>sign()</code> CSS functions compute the absolute value or the sign of the input.",
                    "group": [
                      "css"
                    ],
                    "name": "abs() and sign()",
                    "spec": [
                      "https://drafts.csswg.org/css-values-4/#sign-funcs"
                    ],
                    "status": {
                      "baseline": "false",
                      "support": {
                        "firefox": "118",
                        "firefox_android": "118",
                        "safari": "15.4",
                        "safari_ios": "15.4"
                      }
                    }
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.47,
                      "interest": 0,
                      "usage": 0.12,
                      "retention": 1,
                      "positivity": 0.05,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 109,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 69,
                            "id": "neutral",
                            "percentageBucket": 63.3,
                            "percentageQuestion": 33.5,
                            "percentageSurvey": 27.6
                          },
                          {
                            "count": 40,
                            "id": "insufficient_data",
                            "percentageBucket": 37
                          }
                        ],
                        "percentageQuestion": 52.91,
                        "percentageSurvey": 43.6
                      },
                      {
                        "count": 72,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 45,
                            "id": "neutral",
                            "percentageBucket": 62.5,
                            "percentageQuestion": 21.84,
                            "percentageSurvey": 18
                          },
                          {
                            "count": 27,
                            "id": "insufficient_data",
                            "percentageBucket": 38
                          }
                        ],
                        "percentageQuestion": 34.95,
                        "percentageSurvey": 28.8
                      },
                      {
                        "count": 25,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 13,
                            "id": "neutral",
                            "percentageBucket": 52,
                            "percentageQuestion": 6.31,
                            "percentageSurvey": 5.2
                          },
                          {
                            "count": 12,
                            "id": "positive",
                            "percentageBucket": 48,
                            "percentageQuestion": 5.83,
                            "percentageSurvey": 4.8
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 12.14,
                        "percentageSurvey": 10
                      }
                    ],
                    "completion": {
                      "count": 206,
                      "percentageSurvey": 82.4,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "exponential_functions",
                "_metadata": {
                  "sectionId": "math_features"
                },
                "entity": {
                  "name": "Exponential Functions",
                  "nameClean": "Exponential Functions",
                  "entityType": "feature",
                  "description": "`pow()`, `sqrt()`, `exp()`, `log()`, `hypot()`\n",
                  "descriptionClean": "pow(), sqrt(), exp(), log(), hypot()",
                  "descriptionHtml": "<code>pow()</code>, <code>sqrt()</code>, <code>exp()</code>, <code>log()</code>, <code>hypot()</code>\n",
                  "caniuse": {
                    "name": "css-math-functions",
                    "url": "https://caniuse.com/css-math-functions"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/pow",
                    "title": "pow()",
                    "summary": "The pow() CSS function is an exponential function that returns the value of a base raised to the power of a number."
                  },
                  "example": {
                    "language": "css",
                    "code": "h1 {\n  font-size: calc(1rem * pow(1.5, 4));\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">h1</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-built_in\">calc</span>(<span class=\"hljs-number\">1rem</span> * <span class=\"hljs-built_in\">pow</span>(<span class=\"hljs-number\">1.5</span>, <span class=\"hljs-number\">4</span>));\n}"
                  },
                  "webFeature": {
                    "id": "exp-functions",
                    "description_html": "The <code>pow()</code>, <code>sqrt()</code>, <code>hypot()</code>, <code>log()</code>, and <code>exp()</code> CSS functions compute various exponential functions.",
                    "group": [
                      "css"
                    ],
                    "name": "pow(), sqrt(), hypot(), log(), and exp()",
                    "spec": [
                      "https://drafts.csswg.org/css-values-4/#exponent-funcs"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2023-12-07",
                      "support": {
                        "chrome": "120",
                        "chrome_android": "120",
                        "edge": "120",
                        "firefox": "118",
                        "firefox_android": "118",
                        "safari": "15.4",
                        "safari_ios": "15.4"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 1
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.57,
                      "interest": 0,
                      "usage": 0.13,
                      "retention": 1,
                      "positivity": 0.05,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 88,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 59,
                            "id": "neutral",
                            "percentageBucket": 67.05,
                            "percentageQuestion": 28.5,
                            "percentageSurvey": 23.6
                          },
                          {
                            "count": 29,
                            "id": "insufficient_data",
                            "percentageBucket": 33
                          }
                        ],
                        "percentageQuestion": 42.51,
                        "percentageSurvey": 35.2
                      },
                      {
                        "count": 91,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 56,
                            "id": "neutral",
                            "percentageBucket": 61.54,
                            "percentageQuestion": 27.05,
                            "percentageSurvey": 22.4
                          },
                          {
                            "count": 35,
                            "id": "insufficient_data",
                            "percentageBucket": 38
                          }
                        ],
                        "percentageQuestion": 43.96,
                        "percentageSurvey": 36.4
                      },
                      {
                        "count": 28,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 17,
                            "id": "neutral",
                            "percentageBucket": 60.71,
                            "percentageQuestion": 8.21,
                            "percentageSurvey": 6.8
                          },
                          {
                            "count": 11,
                            "id": "positive",
                            "percentageBucket": 39.29,
                            "percentageQuestion": 5.31,
                            "percentageSurvey": 4.4
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 13.53,
                        "percentageSurvey": 11.2
                      }
                    ],
                    "completion": {
                      "count": 207,
                      "percentageSurvey": 82.8,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "feature_support_queries",
                "_metadata": {
                  "sectionId": "other_features"
                },
                "entity": {
                  "name": "`@supports`",
                  "nameClean": "@supports",
                  "nameHtml": "<code>@supports</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-supports-api",
                    "url": "https://caniuse.com/css-supports-api"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@supports",
                    "title": "@supports",
                    "summary": "The @supports CSS at-rule lets you specify CSS declarations that depend on a browser's support for CSS features.\nUsing this at-rule is commonly called a feature query.\nThe rule must be placed at the top level of your code or nested inside any other conditional group at-rule."
                  },
                  "example": {
                    "language": "css",
                    "code": "@supports (display: table-cell) and (display: list-item) {\n  //...\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@supports</span> (<span class=\"hljs-attribute\">display</span>: table-cell) <span class=\"hljs-keyword\">and</span> (<span class=\"hljs-attribute\">display</span>: list-item) {\n  //...\n}"
                  },
                  "webFeature": {
                    "id": "supports",
                    "description_html": "The <code>@supports</code> at-rule applies styles based on a browser's support for CSS features, such as a CSS property and value. Also known as feature queries.",
                    "group": [
                      "css"
                    ],
                    "name": "@supports",
                    "spec": [
                      "https://drafts.csswg.org/css-conditional-3/#at-supports"
                    ],
                    "status": {
                      "baseline": "high",
                      "baseline_low_date": "2015-09-30",
                      "support": {
                        "chrome": "28",
                        "chrome_android": "28",
                        "edge": "12",
                        "firefox": "22",
                        "firefox_android": "22",
                        "safari": "9",
                        "safari_ios": "9"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 4
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.89,
                      "interest": 0,
                      "usage": 0.66,
                      "retention": 1,
                      "positivity": 0.35,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 20,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 14,
                            "id": "neutral",
                            "percentageBucket": 70,
                            "percentageQuestion": 7.11,
                            "percentageSurvey": 5.6
                          },
                          {
                            "count": 6,
                            "id": "insufficient_data",
                            "percentageBucket": 30
                          }
                        ],
                        "percentageQuestion": 10.15,
                        "percentageSurvey": 8
                      },
                      {
                        "count": 46,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 27,
                            "id": "neutral",
                            "percentageBucket": 58.7,
                            "percentageQuestion": 13.71,
                            "percentageSurvey": 10.8
                          },
                          {
                            "count": 19,
                            "id": "insufficient_data",
                            "percentageBucket": 41
                          }
                        ],
                        "percentageQuestion": 23.35,
                        "percentageSurvey": 18.4
                      },
                      {
                        "count": 131,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 69,
                            "id": "positive",
                            "percentageBucket": 52.67,
                            "percentageQuestion": 35.03,
                            "percentageSurvey": 27.6
                          },
                          {
                            "count": 62,
                            "id": "insufficient_data",
                            "percentageBucket": 47
                          }
                        ],
                        "percentageQuestion": 66.5,
                        "percentageSurvey": 52.4
                      }
                    ],
                    "completion": {
                      "count": 197,
                      "percentageSurvey": 78.8,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "at_property",
                "_metadata": {
                  "sectionId": "other_features"
                },
                "entity": {
                  "name": "`@property`",
                  "nameClean": "@property",
                  "nameHtml": "<code>@property</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_at-rules_property",
                    "url": "https://caniuse.com/mdn-css_at-rules_property"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@property",
                    "title": "@property",
                    "summary": "The @property CSS at-rule is part of the CSS Houdini set of APIs. It allows developers to explicitly define CSS custom properties, allowing for property type checking and constraining, setting default values, and defining whether a custom property can inherit values or not."
                  },
                  "example": {
                    "language": "css",
                    "code": "@property --property-name {\n  syntax: \"<color>\";\n  inherits: false;\n  initial-value: #c0ffee;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@property</span> --property-name {\n  syntax: <span class=\"hljs-string\">&quot;&lt;color&gt;&quot;</span>;\n  inherits: false;\n  initial-value: <span class=\"hljs-number\">#c0ffee</span>;\n}"
                  },
                  "webFeature": {
                    "id": "registered-custom-properties",
                    "description_html": "The <code>CSS.registerProperty()</code> static method and the <code>@property</code> CSS at-rule register custom properties for which types and behaviors can be defined.",
                    "name": "Registered custom properties",
                    "spec": [
                      "https://drafts.css-houdini.org/css-properties-values-api-1/"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2024-07-09",
                      "support": {
                        "chrome": "85",
                        "chrome_android": "85",
                        "edge": "85",
                        "firefox": "128",
                        "firefox_android": "128",
                        "safari": "16.4",
                        "safari_ios": "16.4"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 2
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.84,
                      "interest": 0,
                      "usage": 0.47,
                      "retention": 1,
                      "positivity": 0.28,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 30,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 21,
                            "id": "neutral",
                            "percentageBucket": 70,
                            "percentageQuestion": 10.61,
                            "percentageSurvey": 8.4
                          },
                          {
                            "count": 9,
                            "id": "insufficient_data",
                            "percentageBucket": 30
                          }
                        ],
                        "percentageQuestion": 15.15,
                        "percentageSurvey": 12
                      },
                      {
                        "count": 73,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 39,
                            "id": "neutral",
                            "percentageBucket": 53.42,
                            "percentageQuestion": 19.7,
                            "percentageSurvey": 15.6
                          },
                          {
                            "count": 34,
                            "id": "insufficient_data",
                            "percentageBucket": 47
                          }
                        ],
                        "percentageQuestion": 36.87,
                        "percentageSurvey": 29.2
                      },
                      {
                        "count": 95,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 57,
                            "id": "positive",
                            "percentageBucket": 60,
                            "percentageQuestion": 28.79,
                            "percentageSurvey": 22.8
                          },
                          {
                            "count": 38,
                            "id": "insufficient_data",
                            "percentageBucket": 40
                          }
                        ],
                        "percentageQuestion": 47.98,
                        "percentageSurvey": 38
                      }
                    ],
                    "completion": {
                      "count": 198,
                      "percentageSurvey": 79.2,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "has_selector",
                "_metadata": {
                  "sectionId": "other_features"
                },
                "entity": {
                  "name": "`:has()`",
                  "nameClean": ":has()",
                  "nameHtml": "<code>:has()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-has",
                    "url": "https://caniuse.com/css-has"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/:has",
                    "title": ":has()",
                    "summary": "The functional :has() CSS pseudo-class represents an element if any of the relative selectors that are passed as an argument match at least one element when anchored against this element. This pseudo-class presents a way of selecting a parent element or a previous sibling element with respect to a reference element by taking a relative selector list as an argument."
                  },
                  "example": {
                    "language": "css",
                    "code": "a:has(> img) {\n  border: 2px solid grey;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">a</span><span class=\"hljs-selector-pseudo\">:has</span>(&gt; <span class=\"hljs-selector-tag\">img</span>) {\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">2px</span> solid grey;\n}"
                  },
                  "webFeature": {
                    "id": "has",
                    "description_html": "The <code>:has()</code> CSS functional pseudo-class matches an element if any of the selectors passed as parameters would match at least one element.",
                    "group": [
                      "selectors"
                    ],
                    "name": ":has()",
                    "spec": [
                      "https://drafts.csswg.org/selectors-4/#relational"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2023-12-19",
                      "support": {
                        "chrome": "105",
                        "chrome_android": "105",
                        "edge": "105",
                        "firefox": "121",
                        "firefox_android": "121",
                        "safari": "15.4",
                        "safari_ios": "15.4"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 4
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 1,
                      "interest": 0,
                      "usage": 0.92,
                      "retention": 1,
                      "positivity": 0.57,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 0,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 5,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 0,
                        "percentageSurvey": 0
                      },
                      {
                        "count": 15,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 15,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 7.58,
                        "percentageSurvey": 6
                      },
                      {
                        "count": 178,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 111,
                            "id": "positive",
                            "percentageBucket": 62.36,
                            "percentageQuestion": 56.06,
                            "percentageSurvey": 44.4
                          },
                          {
                            "count": 67,
                            "id": "neutral",
                            "percentageBucket": 37.64,
                            "percentageQuestion": 33.84,
                            "percentageSurvey": 26.8
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 89.9,
                        "percentageSurvey": 71.2
                      }
                    ],
                    "completion": {
                      "count": 198,
                      "percentageSurvey": 79.2,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "where_selector",
                "_metadata": {
                  "sectionId": "other_features"
                },
                "entity": {
                  "name": "`:where()`",
                  "nameClean": ":where()",
                  "nameHtml": "<code>:where()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-where",
                    "url": "https://caniuse.com/css-where"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/:where",
                    "title": ":where()",
                    "summary": "The :where() CSS pseudo-class function takes a selector list as its argument, and selects any element that can be selected by one of the selectors in that list."
                  },
                  "example": {
                    "language": "css",
                    "code": ":where(header, main, footer) p:hover {\n  color: red;\n  cursor: pointer;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-pseudo\">:where</span>(<span class=\"hljs-selector-tag\">header</span>, <span class=\"hljs-selector-tag\">main</span>, <span class=\"hljs-selector-tag\">footer</span>) <span class=\"hljs-selector-tag\">p</span><span class=\"hljs-selector-pseudo\">:hover</span> {\n  <span class=\"hljs-attribute\">color</span>: red;\n  <span class=\"hljs-attribute\">cursor</span>: pointer;\n}"
                  },
                  "webFeature": {
                    "id": "where",
                    "description_html": "The <code>:where()</code> CSS functional pseudo-class takes a selector list as its argument, and matches any element that can be selected by one of the selectors in that list. It is functionally equivalent to the selectors in the list, but doesn't affect the CSS rule specificity.",
                    "group": [
                      "selectors"
                    ],
                    "name": ":where()",
                    "spec": [
                      "https://drafts.csswg.org/selectors-4/#zero-matches"
                    ],
                    "status": {
                      "baseline": "high",
                      "baseline_low_date": "2021-01-21",
                      "support": {
                        "chrome": "88",
                        "chrome_android": "88",
                        "edge": "88",
                        "firefox": "82",
                        "firefox_android": "82",
                        "safari": "14",
                        "safari_ios": "14"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 2
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.89,
                      "interest": 0,
                      "usage": 0.67,
                      "retention": 1,
                      "positivity": 0.39,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 21,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 21,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 10.61,
                        "percentageSurvey": 8.4
                      },
                      {
                        "count": 43,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 23,
                            "id": "neutral",
                            "percentageBucket": 53.49,
                            "percentageQuestion": 11.62,
                            "percentageSurvey": 9.2
                          },
                          {
                            "count": 20,
                            "id": "insufficient_data",
                            "percentageBucket": 47
                          }
                        ],
                        "percentageQuestion": 21.72,
                        "percentageSurvey": 17.2
                      },
                      {
                        "count": 134,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 55,
                            "id": "neutral",
                            "percentageBucket": 41.04,
                            "percentageQuestion": 27.78,
                            "percentageSurvey": 22
                          },
                          {
                            "count": 79,
                            "id": "positive",
                            "percentageBucket": 58.96,
                            "percentageQuestion": 39.9,
                            "percentageSurvey": 31.6
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 67.68,
                        "percentageSurvey": 53.6
                      }
                    ],
                    "completion": {
                      "count": 198,
                      "percentageSurvey": 79.2,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "cascade_layers",
                "_metadata": {
                  "sectionId": "other_features"
                },
                "entity": {
                  "name": "Cascade Layers",
                  "nameClean": "Cascade Layers",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-cascade-layers",
                    "url": "https://caniuse.com/css-cascade-layers"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@layer",
                    "title": "@layer",
                    "summary": "The @layer CSS at-rule is used to declare a cascade layer and can also be used to define the order of precedence in case of multiple cascade layers."
                  },
                  "example": {
                    "language": "css",
                    "code": "@layer layer-name {rules}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@layer</span> layer-name {rules}"
                  },
                  "webFeature": {
                    "id": "cascade-layers",
                    "description_html": "The <code>@layer</code> CSS at-rule avoids specificity conflicts by providing priority levels for different groups of CSS rules, such as low-priority styles like resets, and high-priority styles like UI components.",
                    "group": [
                      "css"
                    ],
                    "name": "Cascade layers",
                    "spec": [
                      "https://drafts.csswg.org/css-cascade-5/"
                    ],
                    "status": {
                      "baseline": "high",
                      "baseline_low_date": "2022-03-14",
                      "support": {
                        "chrome": "99",
                        "chrome_android": "99",
                        "edge": "99",
                        "firefox": "97",
                        "firefox_android": "97",
                        "safari": "15.4",
                        "safari_ios": "15.4"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 7
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.87,
                      "interest": 0,
                      "usage": 0.41,
                      "retention": 1,
                      "positivity": 0.23,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 25,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 20,
                            "id": "neutral",
                            "percentageBucket": 80,
                            "percentageQuestion": 10.15,
                            "percentageSurvey": 8
                          },
                          {
                            "count": 5,
                            "id": "insufficient_data",
                            "percentageBucket": 20
                          }
                        ],
                        "percentageQuestion": 12.69,
                        "percentageSurvey": 10
                      },
                      {
                        "count": 91,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 49,
                            "id": "neutral",
                            "percentageBucket": 53.85,
                            "percentageQuestion": 24.87,
                            "percentageSurvey": 19.6
                          },
                          {
                            "count": 42,
                            "id": "insufficient_data",
                            "percentageBucket": 46
                          }
                        ],
                        "percentageQuestion": 46.19,
                        "percentageSurvey": 36.4
                      },
                      {
                        "count": 81,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 47,
                            "id": "positive",
                            "percentageBucket": 58.02,
                            "percentageQuestion": 23.86,
                            "percentageSurvey": 18.8
                          },
                          {
                            "count": 34,
                            "id": "insufficient_data",
                            "percentageBucket": 42
                          }
                        ],
                        "percentageQuestion": 41.12,
                        "percentageSurvey": 32.4
                      }
                    ],
                    "completion": {
                      "count": 197,
                      "percentageSurvey": 78.8,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "css_nesting",
                "_metadata": {
                  "sectionId": "other_features"
                },
                "entity": {
                  "name": "CSS Nesting",
                  "nameClean": "CSS Nesting",
                  "entityType": "feature",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_nesting",
                    "title": "CSS nesting",
                    "summary": "The CSS nesting module defines a syntax for nesting selectors, providing the ability to nest one style rule inside another, with the selector of the child rule relative to the selector of the parent rule."
                  },
                  "example": {
                    "language": "css",
                    "code": ".parent {\n  color: blue;\n\n  .child {\n    color: red;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">color</span>: blue;\n\n  <span class=\"hljs-selector-class\">.child</span> {\n    <span class=\"hljs-attribute\">color</span>: red;\n  }\n}"
                  },
                  "resources": [
                    {
                      "title": "CSS Nesting",
                      "url": "https://developer.chrome.com/articles/css-nesting/"
                    }
                  ],
                  "webFeature": {
                    "id": "nesting",
                    "description_html": "CSS nesting allows for shorter selectors, easier reading, and more modularity by nesting rules inside others.",
                    "group": [
                      "css"
                    ],
                    "name": "Nesting",
                    "spec": [
                      "https://drafts.csswg.org/css-nesting-1/"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2023-12-11",
                      "support": {
                        "chrome": "120",
                        "chrome_android": "120",
                        "edge": "120",
                        "firefox": "117",
                        "firefox_android": "117",
                        "safari": "17.2",
                        "safari_ios": "17.2"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 4
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 1,
                      "interest": 0,
                      "usage": 0.8,
                      "retention": 1,
                      "positivity": 0.51,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 0,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 7,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 0,
                        "percentageSurvey": 0
                      },
                      {
                        "count": 36,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 23,
                            "id": "neutral",
                            "percentageBucket": 63.89,
                            "percentageQuestion": 11.62,
                            "percentageSurvey": 9.2
                          },
                          {
                            "count": 13,
                            "id": "insufficient_data",
                            "percentageBucket": 36
                          }
                        ],
                        "percentageQuestion": 18.18,
                        "percentageSurvey": 14.4
                      },
                      {
                        "count": 153,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 97,
                            "id": "positive",
                            "percentageBucket": 63.4,
                            "percentageQuestion": 48.99,
                            "percentageSurvey": 38.8
                          },
                          {
                            "count": 56,
                            "id": "insufficient_data",
                            "percentageBucket": 37
                          }
                        ],
                        "percentageQuestion": 77.27,
                        "percentageSurvey": 61.2
                      }
                    ],
                    "completion": {
                      "count": 198,
                      "percentageSurvey": 79.2,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "image_set",
                "_metadata": {
                  "sectionId": "other_features"
                },
                "entity": {
                  "name": "`image-set()`",
                  "nameClean": "image-set()",
                  "nameHtml": "<code>image-set()</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-image-set",
                    "url": "https://caniuse.com/css-image-set"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/image/image-set",
                    "title": "image-set()",
                    "summary": "The image-set() CSS functional notation is a method of letting the browser pick the most appropriate CSS image from a given set, primarily for high pixel density screens."
                  },
                  "example": {
                    "language": "css",
                    "code": ".box {\n  background-image: image-set(\n    url(\"small-balloons.jpg\") 1x,\n    url(\"large-balloons.jpg\") 2x);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.box</span> {\n  <span class=\"hljs-attribute\">background-image</span>: <span class=\"hljs-built_in\">image-set</span>(\n    <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">&quot;small-balloons.jpg&quot;</span>) <span class=\"hljs-number\">1</span>x,\n    <span class=\"hljs-built_in\">url</span>(<span class=\"hljs-string\">&quot;large-balloons.jpg&quot;</span>) <span class=\"hljs-number\">2</span>x);\n}"
                  },
                  "webFeature": {
                    "id": "image-set",
                    "description_html": "The <code>image-set()</code> CSS function provides a set of images at different resolutions or pixel densities, which the browser can pick from, depending on the device capabilities.",
                    "group": [
                      "css"
                    ],
                    "name": "image-set()",
                    "spec": [
                      "https://drafts.csswg.org/css-images-4/#image-set-notation"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2023-09-18",
                      "support": {
                        "chrome": "113",
                        "chrome_android": "113",
                        "edge": "113",
                        "firefox": "89",
                        "firefox_android": "89",
                        "safari": "17",
                        "safari_ios": "17"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 1
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.56,
                      "interest": 0,
                      "usage": 0.22,
                      "retention": 0,
                      "positivity": 0
                    },
                    "buckets": [
                      {
                        "count": 85,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 49,
                            "id": "neutral",
                            "percentageBucket": 57.65,
                            "percentageQuestion": 24.75,
                            "percentageSurvey": 19.6
                          },
                          {
                            "count": 36,
                            "id": "insufficient_data",
                            "percentageBucket": 42
                          }
                        ],
                        "percentageQuestion": 42.93,
                        "percentageSurvey": 34
                      },
                      {
                        "count": 67,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 36,
                            "id": "neutral",
                            "percentageBucket": 53.73,
                            "percentageQuestion": 18.18,
                            "percentageSurvey": 14.4
                          },
                          {
                            "count": 31,
                            "id": "insufficient_data",
                            "percentageBucket": 46
                          }
                        ],
                        "percentageQuestion": 33.84,
                        "percentageSurvey": 26.8
                      },
                      {
                        "count": 44,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 23,
                            "id": "neutral",
                            "percentageBucket": 52.27,
                            "percentageQuestion": 11.62,
                            "percentageSurvey": 9.2
                          },
                          {
                            "count": 21,
                            "id": "insufficient_data",
                            "percentageBucket": 48
                          }
                        ],
                        "percentageQuestion": 22.22,
                        "percentageSurvey": 17.6
                      }
                    ],
                    "completion": {
                      "count": 198,
                      "percentageSurvey": 79.2,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "at_scope",
                "_metadata": {
                  "sectionId": "other_features"
                },
                "entity": {
                  "name": "`@scope`",
                  "nameClean": "@scope",
                  "nameHtml": "<code>@scope</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "css-cascade-scope",
                    "url": "https://caniuse.com/css-cascade-scope"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@scope",
                    "title": "@scope",
                    "summary": "The @scope CSS at-rule enables you to select elements in specific DOM subtrees, targeting elements precisely without writing overly-specific selectors that are hard to override, and without coupling your selectors too tightly to the DOM structure."
                  },
                  "example": {
                    "language": "css",
                    "code": "@scope (.card) {\n  :scope {\n    padding: 1rem;\n  }\n\n  .title {\n    font-size: 1.2rem;\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@scope</span> (.card) {\n  <span class=\"hljs-selector-pseudo\">:scope</span> {\n    <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">1rem</span>;\n  }\n\n  <span class=\"hljs-selector-class\">.title</span> {\n    <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">1.2rem</span>;\n  }\n}"
                  },
                  "webFeature": {
                    "id": "scope",
                    "description_html": "The <code>@scope</code> CSS at-rule sets the scope for a group of rules.",
                    "group": [
                      "css"
                    ],
                    "name": "@scope",
                    "spec": [
                      "https://drafts.csswg.org/css-cascade-6/#scope-atrule"
                    ],
                    "status": {
                      "baseline": "false",
                      "support": {
                        "chrome": "118",
                        "chrome_android": "118",
                        "edge": "118",
                        "safari": "17.4",
                        "safari_ios": "17.4"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 2
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.65,
                      "interest": 0,
                      "usage": 0.15,
                      "retention": 0,
                      "positivity": 0
                    },
                    "buckets": [
                      {
                        "count": 68,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 41,
                            "id": "neutral",
                            "percentageBucket": 60.29,
                            "percentageQuestion": 20.71,
                            "percentageSurvey": 16.4
                          },
                          {
                            "count": 27,
                            "id": "insufficient_data",
                            "percentageBucket": 40
                          }
                        ],
                        "percentageQuestion": 34.34,
                        "percentageSurvey": 27.2
                      },
                      {
                        "count": 99,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 56,
                            "id": "neutral",
                            "percentageBucket": 56.57,
                            "percentageQuestion": 28.28,
                            "percentageSurvey": 22.4
                          },
                          {
                            "count": 43,
                            "id": "insufficient_data",
                            "percentageBucket": 43
                          }
                        ],
                        "percentageQuestion": 50,
                        "percentageSurvey": 39.6
                      },
                      {
                        "count": 30,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 30,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 15.15,
                        "percentageSurvey": 12
                      }
                    ],
                    "completion": {
                      "count": 198,
                      "percentageSurvey": 79.2,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "nth_child_of_s",
                "_metadata": {
                  "sectionId": "other_features"
                },
                "entity": {
                  "name": "`nth-child of S`",
                  "nameClean": "nth-child of S",
                  "nameHtml": "<code>nth-child of S</code>",
                  "entityType": "feature",
                  "description": "Pre-filter a set of child elements before applying `nth-child` to it.\n",
                  "descriptionClean": "Pre-filter a set of child elements before applying nth-child to it.",
                  "descriptionHtml": "Pre-filter a set of child elements before applying <code>nth-child</code> to it.\n",
                  "example": {
                    "language": "css",
                    "code": ":nth-child(2 of .highlight)\n  border: 2px red solid;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-pseudo\">:nth-child</span>(<span class=\"hljs-number\">2</span> of <span class=\"hljs-selector-class\">.highlight</span>)\n  <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">2px</span> red solid;\n}"
                  },
                  "resources": [
                    {
                      "title": "More control over :nth-child() selections with the of S syntax\n",
                      "url": "https://developer.chrome.com/docs/css-ui/css-nth-child-of-s"
                    }
                  ],
                  "webFeature": {
                    "id": "nth-child-of",
                    "description_html": "The <code>of</code> syntax for the <code>:nth-child()</code> and <code>:nth-last-child()</code> CSS functional pseudo-classes match elements by the relative position of elements, counted from the first or last sibling matching a selector list.",
                    "group": [
                      "selectors"
                    ],
                    "name": ":nth-child() of <selector>",
                    "spec": [
                      "https://drafts.csswg.org/selectors-4/#the-nth-child-pseudo",
                      "https://drafts.csswg.org/selectors-4/#the-nth-last-child-pseudo"
                    ],
                    "status": {
                      "baseline": "low",
                      "baseline_low_date": "2023-05-09",
                      "support": {
                        "chrome": "111",
                        "chrome_android": "111",
                        "edge": "111",
                        "firefox": "113",
                        "firefox_android": "113",
                        "safari": "9",
                        "safari_ios": "9"
                      }
                    }
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 2
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.53,
                      "interest": 1,
                      "usage": 0.29,
                      "retention": 1,
                      "positivity": 0.45,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 91,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 47,
                            "id": "neutral",
                            "percentageBucket": 51.65,
                            "percentageQuestion": 23.86,
                            "percentageSurvey": 18.8
                          },
                          {
                            "count": 44,
                            "id": "positive",
                            "percentageBucket": 48.35,
                            "percentageQuestion": 22.34,
                            "percentageSurvey": 17.6
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 46.19,
                        "percentageSurvey": 36.4
                      },
                      {
                        "count": 47,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 28,
                            "id": "neutral",
                            "percentageBucket": 59.57,
                            "percentageQuestion": 14.21,
                            "percentageSurvey": 11.2
                          },
                          {
                            "count": 19,
                            "id": "positive",
                            "percentageBucket": 40.43,
                            "percentageQuestion": 9.64,
                            "percentageSurvey": 7.6
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 23.86,
                        "percentageSurvey": 18.8
                      },
                      {
                        "count": 58,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 27,
                            "id": "positive",
                            "percentageBucket": 46.55,
                            "percentageQuestion": 13.71,
                            "percentageSurvey": 10.8
                          },
                          {
                            "count": 31,
                            "id": "neutral",
                            "percentageBucket": 53.45,
                            "percentageQuestion": 15.74,
                            "percentageSurvey": 12.4
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 29.44,
                        "percentageSurvey": 23.2
                      }
                    ],
                    "completion": {
                      "count": 197,
                      "percentageSurvey": 78.8,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "field_sizing",
                "_metadata": {
                  "sectionId": "other_features"
                },
                "entity": {
                  "name": "`field-sizing`",
                  "nameClean": "field-sizing",
                  "nameHtml": "<code>field-sizing</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_properties_field-sizing",
                    "url": "https://caniuse.com/mdn-css_properties_field-sizing"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/field-sizing",
                    "title": "field-sizing",
                    "summary": "The field-sizing CSS property enables you to control the sizing behavior of elements that are given a default preferred size, such as form control elements. This property enables you to override the default sizing behavior, allowing form controls to adjust in size to fit their contents."
                  },
                  "example": {
                    "language": "css",
                    "code": "input,\ntextarea {\n  field-sizing: content;\n  min-width: 50px;\n  max-width: 350px;\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">input</span>,\n<span class=\"hljs-selector-tag\">textarea</span> {\n  <span class=\"hljs-attribute\">field-sizing</span>: content;\n  <span class=\"hljs-attribute\">min-width</span>: <span class=\"hljs-number\">50px</span>;\n  <span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">350px</span>;\n}"
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 2
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.48,
                      "interest": 1,
                      "usage": 0.18,
                      "retention": 1,
                      "positivity": 0.29,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 101,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 61,
                            "id": "neutral",
                            "percentageBucket": 60.4,
                            "percentageQuestion": 30.81,
                            "percentageSurvey": 24.4
                          },
                          {
                            "count": 40,
                            "id": "insufficient_data",
                            "percentageBucket": 40
                          }
                        ],
                        "percentageQuestion": 51.01,
                        "percentageSurvey": 40.4
                      },
                      {
                        "count": 60,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 36,
                            "id": "positive",
                            "percentageBucket": 60,
                            "percentageQuestion": 18.18,
                            "percentageSurvey": 14.4
                          },
                          {
                            "count": 24,
                            "id": "neutral",
                            "percentageBucket": 40,
                            "percentageQuestion": 12.12,
                            "percentageSurvey": 9.6
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 30.3,
                        "percentageSurvey": 24
                      },
                      {
                        "count": 36,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 22,
                            "id": "positive",
                            "percentageBucket": 61.11,
                            "percentageQuestion": 11.11,
                            "percentageSurvey": 8.8
                          },
                          {
                            "count": 14,
                            "id": "neutral",
                            "percentageBucket": 38.89,
                            "percentageQuestion": 7.07,
                            "percentageSurvey": 5.6
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 18.18,
                        "percentageSurvey": 14.4
                      }
                    ],
                    "completion": {
                      "count": 198,
                      "percentageSurvey": 79.2,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "target_text_selector",
                "_metadata": {
                  "sectionId": "other_features"
                },
                "entity": {
                  "name": "`::target-text`",
                  "nameClean": "::target-text",
                  "nameHtml": "<code>::target-text</code>",
                  "entityType": "feature",
                  "caniuse": {
                    "name": "mdn-css_selectors_target-text",
                    "url": "https://caniuse.com/mdn-css_selectors_target-text"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/::target-text",
                    "title": "::target-text",
                    "summary": "The ::target-text CSS pseudo-element represents the text that has been scrolled to if the browser supports text fragments. It allows authors to choose how to highlight that section of text."
                  },
                  "example": {
                    "language": "css",
                    "code": "::target-text {\n  background-color: pink;\n}\n",
                    "codeHighlighted": "::target-text {\n  <span class=\"hljs-attribute\">background-color</span>: pink;\n}"
                  }
                },
                "comments": {
                  "currentEdition": {
                    "count": 1
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.32,
                      "interest": 1,
                      "usage": 0.1,
                      "retention": 1,
                      "positivity": 0.13,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 133,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 78,
                            "id": "neutral",
                            "percentageBucket": 58.65,
                            "percentageQuestion": 39.39,
                            "percentageSurvey": 31.2
                          },
                          {
                            "count": 55,
                            "id": "insufficient_data",
                            "percentageBucket": 41
                          }
                        ],
                        "percentageQuestion": 67.17,
                        "percentageSurvey": 53.2
                      },
                      {
                        "count": 43,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 26,
                            "id": "neutral",
                            "percentageBucket": 60.47,
                            "percentageQuestion": 13.13,
                            "percentageSurvey": 10.4
                          },
                          {
                            "count": 17,
                            "id": "positive",
                            "percentageBucket": 39.53,
                            "percentageQuestion": 8.59,
                            "percentageSurvey": 6.8
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 21.72,
                        "percentageSurvey": 17.2
                      },
                      {
                        "count": 20,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 10,
                            "id": "positive",
                            "percentageBucket": 50,
                            "percentageQuestion": 5.05,
                            "percentageSurvey": 4
                          },
                          {
                            "count": 10,
                            "id": "neutral",
                            "percentageBucket": 50,
                            "percentageQuestion": 5.05,
                            "percentageSurvey": 4
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 10.1,
                        "percentageSurvey": 8
                      }
                    ],
                    "completion": {
                      "count": 198,
                      "percentageSurvey": 79.2,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "at_function",
                "_metadata": {
                  "sectionId": "other_features"
                },
                "entity": {
                  "name": "`@function`",
                  "nameClean": "@function",
                  "nameHtml": "<code>@function</code>",
                  "entityType": "feature",
                  "example": {
                    "language": "css",
                    "code": "@function --negate(--value) {\n  result: calc(-1 * var(--value));\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">@function</span> --negate(--value) {\n  result: <span class=\"hljs-built_in\">calc</span>(-<span class=\"hljs-number\">1</span> * <span class=\"hljs-built_in\">var</span>(--value));\n}"
                  },
                  "resources": [
                    {
                      "title": "Functions in CSS?!",
                      "url": "https://css-tricks.com/functions-in-css/"
                    },
                    {
                      "title": "CSS Custom Functions are coming … and they are going to be a game changer!",
                      "url": "https://www.bram.us/2025/02/09/css-custom-functions-teaser/"
                    }
                  ]
                },
                "comments": {
                  "currentEdition": {
                    "count": 3
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.57,
                      "interest": 1,
                      "usage": 0,
                      "retention": 0,
                      "positivity": 0.29,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 79,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 51,
                            "id": "neutral",
                            "percentageBucket": 64.56,
                            "percentageQuestion": 25.76,
                            "percentageSurvey": 20.4
                          },
                          {
                            "count": 28,
                            "id": "insufficient_data",
                            "percentageBucket": 35
                          }
                        ],
                        "percentageQuestion": 39.9,
                        "percentageSurvey": 31.6
                      },
                      {
                        "count": 108,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 56,
                            "id": "positive",
                            "percentageBucket": 51.85,
                            "percentageQuestion": 28.28,
                            "percentageSurvey": 22.4
                          },
                          {
                            "count": 52,
                            "id": "insufficient_data",
                            "percentageBucket": 48
                          }
                        ],
                        "percentageQuestion": 54.55,
                        "percentageSurvey": 43.2
                      },
                      {
                        "count": 0,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 8,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 0,
                        "percentageSurvey": 0
                      }
                    ],
                    "completion": {
                      "count": 198,
                      "percentageSurvey": 79.2,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "display_contents",
                "_metadata": {
                  "sectionId": "other_features"
                },
                "entity": {
                  "name": "`display: contents`",
                  "nameClean": "display: contents",
                  "nameHtml": "<code>display: contents</code>",
                  "entityType": "feature"
                },
                "comments": {
                  "currentEdition": {
                    "count": 3
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.73,
                      "interest": 0,
                      "usage": 0.46,
                      "retention": 0.79,
                      "positivity": 0.19,
                      "positivityRelative": 0.79
                    },
                    "buckets": [
                      {
                        "count": 52,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 28,
                            "id": "neutral",
                            "percentageBucket": 53.85,
                            "percentageQuestion": 14.14,
                            "percentageSurvey": 11.2
                          },
                          {
                            "count": 24,
                            "id": "insufficient_data",
                            "percentageBucket": 46
                          }
                        ],
                        "percentageQuestion": 26.26,
                        "percentageSurvey": 20.8
                      },
                      {
                        "count": 53,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 31,
                            "id": "neutral",
                            "percentageBucket": 58.49,
                            "percentageQuestion": 15.66,
                            "percentageSurvey": 12.4
                          },
                          {
                            "count": 22,
                            "id": "insufficient_data",
                            "percentageBucket": 42
                          }
                        ],
                        "percentageQuestion": 26.77,
                        "percentageSurvey": 21.2
                      },
                      {
                        "count": 91,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 43,
                            "id": "neutral",
                            "percentageBucket": 47.25,
                            "percentageQuestion": 21.72,
                            "percentageSurvey": 17.2
                          },
                          {
                            "count": 10,
                            "id": "negative",
                            "percentageBucket": 10.99,
                            "percentageQuestion": 5.05,
                            "percentageSurvey": 4
                          },
                          {
                            "count": 38,
                            "id": "positive",
                            "percentageBucket": 41.76,
                            "percentageQuestion": 19.19,
                            "percentageSurvey": 15.2
                          },
                          {
                            "count": 0,
                            "id": "insufficient_data",
                            "percentageBucket": 0
                          }
                        ],
                        "percentageQuestion": 45.96,
                        "percentageSurvey": 36.4
                      }
                    ],
                    "completion": {
                      "count": 198,
                      "percentageSurvey": 79.2,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "advanced_attr_function",
                "_metadata": {
                  "sectionId": "other_features"
                },
                "entity": {
                  "name": "Advanced `attr()`",
                  "nameClean": "Advanced attr()",
                  "nameHtml": "Advanced <code>attr()</code>",
                  "entityType": "feature",
                  "description": "Support for properties other than content",
                  "descriptionClean": "Support for properties other than content",
                  "example": {
                    "language": "css",
                    "code": ".title {\n  background-color: attr(data-color type(<color>));\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-class\">.title</span> {\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">attr</span>(data-color <span class=\"hljs-built_in\">type</span>(&lt;color&gt;));\n}"
                  },
                  "resources": [
                    {
                      "title": "New capabilities for attr()",
                      "url": "https://una.im/advanced-attr/"
                    },
                    {
                      "title": "First Look at The Modern attr()",
                      "url": "https://ishadeed.com/article/modern-attr/"
                    }
                  ]
                },
                "comments": {
                  "currentEdition": {
                    "count": 5
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.79,
                      "interest": 1,
                      "usage": 0.19,
                      "retention": 1,
                      "positivity": 0.41,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 41,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 29,
                            "id": "neutral",
                            "percentageBucket": 70.73,
                            "percentageQuestion": 14.72,
                            "percentageSurvey": 11.6
                          },
                          {
                            "count": 12,
                            "id": "insufficient_data",
                            "percentageBucket": 29
                          }
                        ],
                        "percentageQuestion": 20.81,
                        "percentageSurvey": 16.4
                      },
                      {
                        "count": 117,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 62,
                            "id": "positive",
                            "percentageBucket": 52.99,
                            "percentageQuestion": 31.47,
                            "percentageSurvey": 24.8
                          },
                          {
                            "count": 55,
                            "id": "insufficient_data",
                            "percentageBucket": 47
                          }
                        ],
                        "percentageQuestion": 59.39,
                        "percentageSurvey": 46.8
                      },
                      {
                        "count": 39,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 20,
                            "id": "positive",
                            "percentageBucket": 51.28,
                            "percentageQuestion": 10.15,
                            "percentageSurvey": 8
                          },
                          {
                            "count": 19,
                            "id": "insufficient_data",
                            "percentageBucket": 49
                          }
                        ],
                        "percentageQuestion": 19.8,
                        "percentageSurvey": 15.6
                      }
                    ],
                    "completion": {
                      "count": 197,
                      "percentageSurvey": 78.8,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "if_function",
                "_metadata": {
                  "sectionId": "other_features"
                },
                "entity": {
                  "name": "`if()`",
                  "nameClean": "if()",
                  "nameHtml": "<code>if()</code>",
                  "entityType": "feature",
                  "example": {
                    "language": "css",
                    "code": "div {\n  color: var(--color);\n  background-color: if(style(--color: white): black; else: white);\n}\n",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">div</span> {\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-built_in\">var</span>(--color);\n  <span class=\"hljs-attribute\">background-color</span>: <span class=\"hljs-built_in\">if</span>(<span class=\"hljs-built_in\">style</span>(--color: white): black; else: white);\n}"
                  },
                  "resources": [
                    {
                      "title": "Feature: CSS if() function",
                      "url": "https://chromestatus.com/feature/6313805904347136"
                    },
                    {
                      "title": "“If” CSS Gets Inline Conditionals",
                      "url": "https://css-tricks.com/if-css-gets-inline-conditionals/"
                    }
                  ]
                },
                "comments": {
                  "currentEdition": {
                    "count": 3
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.73,
                      "interest": 0,
                      "usage": 0,
                      "retention": 0,
                      "positivity": 0
                    },
                    "buckets": [
                      {
                        "count": 49,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 27,
                            "id": "neutral",
                            "percentageBucket": 55.1,
                            "percentageQuestion": 13.71,
                            "percentageSurvey": 10.8
                          },
                          {
                            "count": 22,
                            "id": "insufficient_data",
                            "percentageBucket": 45
                          }
                        ],
                        "percentageQuestion": 24.87,
                        "percentageSurvey": 19.6
                      },
                      {
                        "count": 137,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 69,
                            "id": "neutral",
                            "percentageBucket": 50.36,
                            "percentageQuestion": 35.03,
                            "percentageSurvey": 27.6
                          },
                          {
                            "count": 68,
                            "id": "insufficient_data",
                            "percentageBucket": 50
                          }
                        ],
                        "percentageQuestion": 69.54,
                        "percentageSurvey": 54.8
                      },
                      {
                        "count": 0,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 9,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 0,
                        "percentageSurvey": 0
                      }
                    ],
                    "completion": {
                      "count": 197,
                      "percentageSurvey": 78.8,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "sibling_index",
                "_metadata": {
                  "sectionId": "other_features"
                },
                "entity": {
                  "name": "`sibling-index()`",
                  "nameClean": "sibling-index()",
                  "nameHtml": "<code>sibling-index()</code>",
                  "entityType": "feature",
                  "resources": [
                    {
                      "title": "Tree Counting Functions: the sibling-count() and sibling-index() notations",
                      "url": "https://www.w3.org/TR/css-values-5/#tree-counting"
                    },
                    {
                      "title": "Let the stagger experiments begin",
                      "url": "https://nerdy.dev/sibling-index"
                    }
                  ]
                },
                "comments": {
                  "currentEdition": {
                    "count": 2
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.42,
                      "interest": 1,
                      "usage": 0.05,
                      "retention": 0,
                      "positivity": 0.22,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 114,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 73,
                            "id": "neutral",
                            "percentageBucket": 64.04,
                            "percentageQuestion": 37.06,
                            "percentageSurvey": 29.2
                          },
                          {
                            "count": 41,
                            "id": "insufficient_data",
                            "percentageBucket": 36
                          }
                        ],
                        "percentageQuestion": 57.87,
                        "percentageSurvey": 45.6
                      },
                      {
                        "count": 73,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 44,
                            "id": "positive",
                            "percentageBucket": 60.27,
                            "percentageQuestion": 22.34,
                            "percentageSurvey": 17.6
                          },
                          {
                            "count": 29,
                            "id": "insufficient_data",
                            "percentageBucket": 40
                          }
                        ],
                        "percentageQuestion": 37.06,
                        "percentageSurvey": 29.2
                      },
                      {
                        "count": 10,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 10,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 5.08,
                        "percentageSurvey": 4
                      }
                    ],
                    "completion": {
                      "count": 197,
                      "percentageSurvey": 78.8,
                      "total": 250
                    }
                  }
                }
              },
              {
                "id": "sibling_count",
                "_metadata": {
                  "sectionId": "other_features"
                },
                "entity": {
                  "name": "`sibling-count()`",
                  "nameClean": "sibling-count()",
                  "nameHtml": "<code>sibling-count()</code>",
                  "entityType": "feature",
                  "resources": [
                    {
                      "title": "Tree Counting Functions: the sibling-count() and sibling-index() notations",
                      "url": "https://www.w3.org/TR/css-values-5/#tree-counting"
                    }
                  ]
                },
                "comments": {
                  "currentEdition": {
                    "count": 1
                  }
                },
                "responses": {
                  "currentEdition": {
                    "ratios": {
                      "awareness": 0.43,
                      "interest": 1,
                      "usage": 0.05,
                      "retention": 0,
                      "positivity": 0.21,
                      "positivityRelative": 1
                    },
                    "buckets": [
                      {
                        "count": 112,
                        "id": "never_heard",
                        "facetBuckets": [
                          {
                            "count": 70,
                            "id": "neutral",
                            "percentageBucket": 62.5,
                            "percentageQuestion": 35.35,
                            "percentageSurvey": 28
                          },
                          {
                            "count": 42,
                            "id": "insufficient_data",
                            "percentageBucket": 38
                          }
                        ],
                        "percentageQuestion": 56.57,
                        "percentageSurvey": 44.8
                      },
                      {
                        "count": 75,
                        "id": "heard",
                        "facetBuckets": [
                          {
                            "count": 43,
                            "id": "positive",
                            "percentageBucket": 57.33,
                            "percentageQuestion": 21.72,
                            "percentageSurvey": 17.2
                          },
                          {
                            "count": 32,
                            "id": "insufficient_data",
                            "percentageBucket": 43
                          }
                        ],
                        "percentageQuestion": 37.88,
                        "percentageSurvey": 30
                      },
                      {
                        "count": 10,
                        "id": "used",
                        "facetBuckets": [
                          {
                            "count": 10,
                            "id": "insufficient_data",
                            "percentageBucket": 100
                          }
                        ],
                        "percentageQuestion": 5.05,
                        "percentageSurvey": 4
                      }
                    ],
                    "completion": {
                      "count": 198,
                      "percentageSurvey": 79.2,
                      "total": 250
                    }
                  }
                }
              }
            ]
          }
        }
      }
    }
  }
}