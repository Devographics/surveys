{
  "dataAPI": {
    "surveys": {
      "state_of_react": {
        "react2024": {
          "features": {
            "features_ratios": [
              {
                "id": "createcontext",
                "entity": {
                  "name": "`createContext`",
                  "nameClean": "createContext",
                  "nameHtml": "<code>createContext</code>",
                  "entityType": "feature",
                  "homepage": {
                    "url": "https://react.dev/reference/react/createContext"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const SomeContext = createContext(defaultValue)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">SomeContext</span> = <span class=\"hljs-title function_\">createContext</span>(defaultValue)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.96,
                        "interest": 0.76,
                        "usage": 0.85,
                        "retention": 0.88,
                        "positivity": 0.53,
                        "positivityRelative": 0.87,
                        "appreciation": 0.11
                      },
                      "completion": {
                        "count": 12766,
                        "percentageSurvey": 98.18,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.97,
                        "interest": 0.74,
                        "usage": 0.87,
                        "retention": 0.9,
                        "positivity": 0.53,
                        "positivityRelative": 0.89,
                        "appreciation": 0.15
                      },
                      "completion": {
                        "count": 7774,
                        "percentageSurvey": 98.78,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "createportal",
                "entity": {
                  "name": "`createPortal`",
                  "nameClean": "createPortal",
                  "nameHtml": "<code>createPortal</code>",
                  "entityType": "feature",
                  "homepage": {
                    "url": "https://react.dev/reference/react-dom/createPortal"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "<div>\n  <SomeComponent />\n  {createPortal(children, domNode, key?)}\n</div>\n",
                    "codeHighlighted": "&lt;div&gt;\n  &lt;SomeComponent /&gt;\n  {<span class=\"hljs-title function_\">createPortal</span>(children, domNode, key?)}\n&lt;/div&gt;"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.76,
                        "interest": 0.79,
                        "usage": 0.45,
                        "retention": 0.91,
                        "positivity": 0.46,
                        "positivityRelative": 0.86,
                        "appreciation": 0.12
                      },
                      "completion": {
                        "count": 12708,
                        "percentageSurvey": 97.73,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.77,
                        "interest": 0.78,
                        "usage": 0.46,
                        "retention": 0.91,
                        "positivity": 0.42,
                        "positivityRelative": 0.86,
                        "appreciation": 0.13
                      },
                      "completion": {
                        "count": 7734,
                        "percentageSurvey": 98.27,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "forwardref",
                "entity": {
                  "name": "`forwardRef`",
                  "nameClean": "forwardRef",
                  "nameHtml": "<code>forwardRef</code>",
                  "entityType": "feature",
                  "homepage": {
                    "url": "https://react.dev/reference/react/forwardRef"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const SomeComponent = forwardRef(render)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">SomeComponent</span> = <span class=\"hljs-title function_\">forwardRef</span>(render)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.87,
                        "interest": 0.73,
                        "usage": 0.68,
                        "retention": 0.64,
                        "positivity": 0.34,
                        "positivityRelative": 0.67,
                        "appreciation": -0.1
                      },
                      "completion": {
                        "count": 12632,
                        "percentageSurvey": 97.15,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.91,
                        "interest": 0.59,
                        "usage": 0.73,
                        "retention": 0.41,
                        "positivity": 0.23,
                        "positivityRelative": 0.46,
                        "appreciation": -0.18
                      },
                      "completion": {
                        "count": 7710,
                        "percentageSurvey": 97.97,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "fragment",
                "entity": {
                  "name": "`<Fragment>`\n",
                  "nameClean": "Fragment",
                  "nameHtml": "<code>&lt;Fragment&gt;</code>\n",
                  "entityType": "feature",
                  "description": "`<Fragment>`, often used via `<>...</>` syntax, lets you group elements without a wrapper node.\n",
                  "descriptionClean": "Fragment, often used via .../ syntax, lets you group elements without a wrapper node.",
                  "descriptionHtml": "<code>&lt;Fragment&gt;</code>, often used via <code>&lt;&gt;...&lt;/&gt;</code> syntax, lets you group elements without a wrapper node.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/Fragment"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "<>\n  <OneChild />\n  <AnotherChild />\n</>\n",
                    "codeHighlighted": "&lt;&gt;\n  &lt;OneChild /&gt;\n  &lt;AnotherChild /&gt;\n&lt;/&gt;"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.99,
                        "interest": 0.68,
                        "usage": 0.97,
                        "retention": 0.97,
                        "positivity": 0.57,
                        "positivityRelative": 0.96,
                        "appreciation": 0.29
                      },
                      "completion": {
                        "count": 12637,
                        "percentageSurvey": 97.19,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.99,
                        "interest": 0,
                        "usage": 0.97,
                        "retention": 0.96,
                        "positivity": 0.56,
                        "positivityRelative": 0.96,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 7711,
                        "percentageSurvey": 97.98,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "lazy",
                "entity": {
                  "name": "`lazy` ",
                  "nameClean": "lazy ",
                  "nameHtml": "<code>lazy</code> ",
                  "entityType": "feature",
                  "homepage": {
                    "url": "https://react.dev/reference/react/lazy"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const SomeComponent = lazy(load)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">SomeComponent</span> = <span class=\"hljs-title function_\">lazy</span>(load)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.86,
                        "interest": 0.93,
                        "usage": 0.53,
                        "retention": 0.94,
                        "positivity": 0.49,
                        "positivityRelative": 0.93,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 12596,
                        "percentageSurvey": 96.87,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.88,
                        "interest": 0.87,
                        "usage": 0.57,
                        "retention": 0.89,
                        "positivity": 0.41,
                        "positivityRelative": 0.88,
                        "appreciation": 0.02
                      },
                      "completion": {
                        "count": 7677,
                        "percentageSurvey": 97.55,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "memo",
                "entity": {
                  "name": "`memo`",
                  "nameClean": "memo",
                  "nameHtml": "<code>memo</code>",
                  "entityType": "feature",
                  "description": "`memo` lets you skip re-rendering a component when its props are unchanged.\n",
                  "descriptionClean": "memo lets you skip re-rendering a component when its props are unchanged.",
                  "descriptionHtml": "<code>memo</code> lets you skip re-rendering a component when its props are unchanged.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/memo"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const MemoizedComponent = memo(SomeComponent, arePropsEqual?)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">MemoizedComponent</span> = <span class=\"hljs-title function_\">memo</span>(<span class=\"hljs-title class_\">SomeComponent</span>, arePropsEqual?)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.93,
                        "interest": 0.8,
                        "usage": 0.73,
                        "retention": 0.77,
                        "positivity": 0.4,
                        "positivityRelative": 0.79,
                        "appreciation": -0.03
                      },
                      "completion": {
                        "count": 12584,
                        "percentageSurvey": 96.78,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.95,
                        "interest": 0.8,
                        "usage": 0.76,
                        "retention": 0.7,
                        "positivity": 0.33,
                        "positivityRelative": 0.72,
                        "appreciation": -0.11
                      },
                      "completion": {
                        "count": 7682,
                        "percentageSurvey": 97.61,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "profiler",
                "entity": {
                  "name": "`<Profiler>`\n",
                  "nameClean": "Profiler",
                  "nameHtml": "<code>&lt;Profiler&gt;</code>\n",
                  "entityType": "feature",
                  "description": "`<Profiler>` lets you measure rendering performance of a React tree programmatically.\n",
                  "descriptionClean": "Profiler lets you measure rendering performance of a React tree programmatically.",
                  "descriptionHtml": "<code>&lt;Profiler&gt;</code> lets you measure rendering performance of a React tree programmatically.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/Profiler"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "<Profiler id=\"App\" onRender={onRender}>\n  <App />\n</Profiler>\n",
                    "codeHighlighted": "&lt;<span class=\"hljs-title class_\">Profiler</span> id=<span class=\"hljs-string\">&quot;App&quot;</span> onRender={onRender}&gt;\n  &lt;App /&gt;\n&lt;/<span class=\"hljs-title class_\">Profiler</span>&gt;"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.34,
                        "interest": 0.89,
                        "usage": 0.07,
                        "retention": 0.84,
                        "positivity": 0.48,
                        "positivityRelative": 0.92,
                        "appreciation": -0.05
                      },
                      "completion": {
                        "count": 12556,
                        "percentageSurvey": 96.56,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.39,
                        "interest": 0.85,
                        "usage": 0.08,
                        "retention": 0.79,
                        "positivity": 0.37,
                        "positivityRelative": 0.89,
                        "appreciation": -0.07
                      },
                      "completion": {
                        "count": 7670,
                        "percentageSurvey": 97.46,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "strictmode",
                "entity": {
                  "name": "`<StrictMode>`\n",
                  "nameClean": "StrictMode",
                  "nameHtml": "<code>&lt;StrictMode&gt;</code>\n",
                  "entityType": "feature",
                  "description": "`<StrictMode>` lets you find common bugs in your components early during development.\n",
                  "descriptionClean": "StrictMode lets you find common bugs in your components early during development.",
                  "descriptionHtml": "<code>&lt;StrictMode&gt;</code> lets you find common bugs in your components early during development.\n",
                  "example": {
                    "language": "jsx",
                    "code": "<StrictMode>\n  <App />\n</StrictMode>\n",
                    "codeHighlighted": "&lt;<span class=\"hljs-title class_\">StrictMode</span>&gt;\n  &lt;App /&gt;\n&lt;/<span class=\"hljs-title class_\">StrictMode</span>&gt;"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.88,
                        "interest": 0.75,
                        "usage": 0.66,
                        "retention": 0.82,
                        "positivity": 0.39,
                        "positivityRelative": 0.81,
                        "appreciation": 0.06
                      },
                      "completion": {
                        "count": 12579,
                        "percentageSurvey": 96.74,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.92,
                        "interest": 0.75,
                        "usage": 0.71,
                        "retention": 0.76,
                        "positivity": 0.33,
                        "positivityRelative": 0.77,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 7675,
                        "percentageSurvey": 97.52,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "react_act",
                "entity": {
                  "name": "`act`\n",
                  "nameClean": "act",
                  "nameHtml": "<code>act</code>\n",
                  "entityType": "feature",
                  "description": "`act` is a test helper to apply pending React updates before making assertions.\n",
                  "descriptionClean": "act is a test helper to apply pending React updates before making assertions.",
                  "descriptionHtml": "<code>act</code> is a test helper to apply pending React updates before making assertions.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/act"
                  },
                  "example": {
                    "language": "js",
                    "code": "it ('renders with button disabled', async () => {\n  await act(async () => {\n    root.render(<TestComponent />)\n  });\n  expect(container.querySelector('button')).toBeDisabled();\n});\n",
                    "codeHighlighted": "it (<span class=\"hljs-string\">&#x27;renders with button disabled&#x27;</span>, <span class=\"hljs-keyword\">async</span> () =&gt; {\n  <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">act</span>(<span class=\"hljs-keyword\">async</span> () =&gt; {\n    root.<span class=\"hljs-title function_\">render</span>(&lt;TestComponent /&gt;)\n  });\n  <span class=\"hljs-title function_\">expect</span>(container.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">&#x27;button&#x27;</span>)).<span class=\"hljs-title function_\">toBeDisabled</span>();\n});"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.43,
                        "interest": 0.66,
                        "usage": 0.3,
                        "retention": 0.51,
                        "positivity": 0.26,
                        "positivityRelative": 0.67,
                        "appreciation": -0.16
                      },
                      "completion": {
                        "count": 7666,
                        "percentageSurvey": 97.41,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "usecallback",
                "entity": {
                  "name": "`useCallback`\n",
                  "nameClean": "useCallback",
                  "nameHtml": "<code>useCallback</code>\n",
                  "entityType": "feature",
                  "description": "`useCallback` is a React Hook that lets you cache a function definition between re-renders.\n",
                  "descriptionClean": "useCallback is a React Hook that lets you cache a function definition between re-renders.",
                  "descriptionHtml": "<code>useCallback</code> is a React Hook that lets you cache a function definition between re-renders.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useCallback"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const cachedFn = useCallback(fn, dependencies)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> cachedFn = <span class=\"hljs-title function_\">useCallback</span>(fn, dependencies)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.96,
                        "interest": 0.8,
                        "usage": 0.85,
                        "retention": 0.81,
                        "positivity": 0.41,
                        "positivityRelative": 0.81,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 11090,
                        "percentageSurvey": 85.29,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.97,
                        "interest": 0.76,
                        "usage": 0.88,
                        "retention": 0.72,
                        "positivity": 0.34,
                        "positivityRelative": 0.72,
                        "appreciation": -0.04
                      },
                      "completion": {
                        "count": 6959,
                        "percentageSurvey": 88.42,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "usecontext",
                "entity": {
                  "name": "`useContext`\n",
                  "nameClean": "useContext",
                  "nameHtml": "<code>useContext</code>\n",
                  "entityType": "feature",
                  "description": "`useContext` is a React Hook that lets you read and subscribe to context from your component.\n",
                  "descriptionClean": "useContext is a React Hook that lets you read and subscribe to context from your component.",
                  "descriptionHtml": "<code>useContext</code> is a React Hook that lets you read and subscribe to context from your component.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useContext"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const value = useContext(SomeContext)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> value = <span class=\"hljs-title function_\">useContext</span>(<span class=\"hljs-title class_\">SomeContext</span>)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.98,
                        "interest": 0.73,
                        "usage": 0.9,
                        "retention": 0.9,
                        "positivity": 0.46,
                        "positivityRelative": 0.89,
                        "appreciation": 0.16
                      },
                      "completion": {
                        "count": 11073,
                        "percentageSurvey": 85.16,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.98,
                        "interest": 0.67,
                        "usage": 0.92,
                        "retention": 0.91,
                        "positivity": 0.43,
                        "positivityRelative": 0.9,
                        "appreciation": 0.24
                      },
                      "completion": {
                        "count": 6944,
                        "percentageSurvey": 88.23,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "usedeferredvalue",
                "entity": {
                  "name": "`useDeferredValue`\n",
                  "nameClean": "useDeferredValue",
                  "nameHtml": "<code>useDeferredValue</code>\n",
                  "entityType": "feature",
                  "description": "`useDeferredValue` is a React Hook that lets you defer updating a part of the UI.\n",
                  "descriptionClean": "useDeferredValue is a React Hook that lets you defer updating a part of the UI.",
                  "descriptionHtml": "<code>useDeferredValue</code> is a React Hook that lets you defer updating a part of the UI.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useDeferredValue"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const deferredValue = useDeferredValue(value)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> deferredValue = <span class=\"hljs-title function_\">useDeferredValue</span>(value)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.49,
                        "interest": 0.87,
                        "usage": 0.09,
                        "retention": 0.84,
                        "positivity": 0.42,
                        "positivityRelative": 0.88,
                        "appreciation": -0.03
                      },
                      "completion": {
                        "count": 11063,
                        "percentageSurvey": 85.08,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.59,
                        "interest": 0.83,
                        "usage": 0.14,
                        "retention": 0.82,
                        "positivity": 0.32,
                        "positivityRelative": 0.84,
                        "appreciation": -0.01
                      },
                      "completion": {
                        "count": 6940,
                        "percentageSurvey": 88.18,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "useeffect",
                "entity": {
                  "name": "`useEffect`\n",
                  "nameClean": "useEffect",
                  "nameHtml": "<code>useEffect</code>\n",
                  "entityType": "feature",
                  "description": "`useEffect` is a React Hook that lets you synchronize a component with an external system.\n",
                  "descriptionClean": "useEffect is a React Hook that lets you synchronize a component with an external system.",
                  "descriptionHtml": "<code>useEffect</code> is a React Hook that lets you synchronize a component with an external system.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useEffect"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "useEffect(setup, dependencies?)\n",
                    "codeHighlighted": "<span class=\"hljs-title function_\">useEffect</span>(setup, dependencies?)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.99,
                        "interest": 0.72,
                        "usage": 0.98,
                        "retention": 0.74,
                        "positivity": 0.4,
                        "positivityRelative": 0.74,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 11063,
                        "percentageSurvey": 85.08,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 1,
                        "interest": 0,
                        "usage": 0.99,
                        "retention": 0.68,
                        "positivity": 0.34,
                        "positivityRelative": 0.68,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 6949,
                        "percentageSurvey": 88.3,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "useid",
                "entity": {
                  "name": "`useId`\n",
                  "nameClean": "useId",
                  "nameHtml": "<code>useId</code>\n",
                  "entityType": "feature",
                  "description": "`useId` is a React Hook for generating unique IDs that can be passed to accessibility attributes.\n",
                  "descriptionClean": "useId is a React Hook for generating unique IDs that can be passed to accessibility attributes.",
                  "descriptionHtml": "<code>useId</code> is a React Hook for generating unique IDs that can be passed to accessibility attributes.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useId"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const id = useId()\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> id = <span class=\"hljs-title function_\">useId</span>()"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.6,
                        "interest": 0.84,
                        "usage": 0.24,
                        "retention": 0.95,
                        "positivity": 0.44,
                        "positivityRelative": 0.9,
                        "appreciation": 0.11
                      },
                      "completion": {
                        "count": 11050,
                        "percentageSurvey": 84.98,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.67,
                        "interest": 0.8,
                        "usage": 0.32,
                        "retention": 0.95,
                        "positivity": 0.38,
                        "positivityRelative": 0.88,
                        "appreciation": 0.15
                      },
                      "completion": {
                        "count": 6938,
                        "percentageSurvey": 88.16,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "usememo",
                "entity": {
                  "name": "`useMemo`\n",
                  "nameClean": "useMemo",
                  "nameHtml": "<code>useMemo</code>\n",
                  "entityType": "feature",
                  "description": "`useMemo` is a React Hook that lets you cache the result of a calculation between re-renders.\n",
                  "descriptionClean": "useMemo is a React Hook that lets you cache the result of a calculation between re-renders.",
                  "descriptionHtml": "<code>useMemo</code> is a React Hook that lets you cache the result of a calculation between re-renders.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useMemo"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const cachedValue = useMemo(calculateValue, dependencies)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> cachedValue = <span class=\"hljs-title function_\">useMemo</span>(calculateValue, dependencies)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.97,
                        "interest": 0.83,
                        "usage": 0.86,
                        "retention": 0.85,
                        "positivity": 0.43,
                        "positivityRelative": 0.85,
                        "appreciation": 0.02
                      },
                      "completion": {
                        "count": 11033,
                        "percentageSurvey": 84.85,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.98,
                        "interest": 0.77,
                        "usage": 0.88,
                        "retention": 0.78,
                        "positivity": 0.35,
                        "positivityRelative": 0.78,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 6936,
                        "percentageSurvey": 88.13,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "usereducer",
                "entity": {
                  "name": "`useReducer`\n",
                  "nameClean": "useReducer",
                  "nameHtml": "<code>useReducer</code>\n",
                  "entityType": "feature",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useReducer"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const [state, dispatch] = useReducer(reducer, initialArg, init?)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> [state, dispatch] = <span class=\"hljs-title function_\">useReducer</span>(reducer, initialArg, init?)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.94,
                        "interest": 0.54,
                        "usage": 0.67,
                        "retention": 0.77,
                        "positivity": 0.34,
                        "positivityRelative": 0.71,
                        "appreciation": 0.22
                      },
                      "completion": {
                        "count": 11039,
                        "percentageSurvey": 84.9,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.94,
                        "interest": 0.5,
                        "usage": 0.67,
                        "retention": 0.73,
                        "positivity": 0.28,
                        "positivityRelative": 0.67,
                        "appreciation": 0.22
                      },
                      "completion": {
                        "count": 6927,
                        "percentageSurvey": 88.02,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "useref",
                "entity": {
                  "name": "`useRef`\n",
                  "nameClean": "useRef",
                  "nameHtml": "<code>useRef</code>\n",
                  "entityType": "feature",
                  "description": "`useRef` is a React Hook that lets you reference a value that’s not needed for rendering.\n",
                  "descriptionClean": "useRef is a React Hook that lets you reference a value that’s not needed for rendering.",
                  "descriptionHtml": "<code>useRef</code> is a React Hook that lets you reference a value that’s not needed for rendering.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useRef"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const ref = useRef(initialValue)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> ref = <span class=\"hljs-title function_\">useRef</span>(initialValue)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.98,
                        "interest": 0.82,
                        "usage": 0.92,
                        "retention": 0.91,
                        "positivity": 0.44,
                        "positivityRelative": 0.9,
                        "appreciation": 0.08
                      },
                      "completion": {
                        "count": 11029,
                        "percentageSurvey": 84.82,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.98,
                        "interest": 0.71,
                        "usage": 0.93,
                        "retention": 0.87,
                        "positivity": 0.38,
                        "positivityRelative": 0.87,
                        "appreciation": 0.16
                      },
                      "completion": {
                        "count": 6927,
                        "percentageSurvey": 88.02,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "usestate",
                "entity": {
                  "name": "`useState`\n",
                  "nameClean": "useState",
                  "nameHtml": "<code>useState</code>\n",
                  "entityType": "feature",
                  "description": "`useState` is a React Hook that lets you add a state variable to your component.\n",
                  "descriptionClean": "useState is a React Hook that lets you add a state variable to your component.",
                  "descriptionHtml": "<code>useState</code> is a React Hook that lets you add a state variable to your component.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useState"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const [state, setState] = useState(initialState);\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> [state, setState] = <span class=\"hljs-title function_\">useState</span>(initialState);"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.99,
                        "interest": 0,
                        "usage": 0.98,
                        "retention": 0.97,
                        "positivity": 0.53,
                        "positivityRelative": 0.97,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 11033,
                        "percentageSurvey": 84.85,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.99,
                        "interest": 0,
                        "usage": 0.99,
                        "retention": 0.97,
                        "positivity": 0.5,
                        "positivityRelative": 0.97,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 6927,
                        "percentageSurvey": 88.02,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "usesyncexternalstore",
                "entity": {
                  "name": "`useSyncExternalStore`\n",
                  "nameClean": "useSyncExternalStore",
                  "nameHtml": "<code>useSyncExternalStore</code>\n",
                  "entityType": "feature",
                  "description": "`useSyncExternalStore` is a React Hook that lets you subscribe to an external store.\n",
                  "descriptionClean": "useSyncExternalStore is a React Hook that lets you subscribe to an external store.",
                  "descriptionHtml": "<code>useSyncExternalStore</code> is a React Hook that lets you subscribe to an external store.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useSyncExternalStore"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const snapshot = useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot?)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> snapshot = <span class=\"hljs-title function_\">useSyncExternalStore</span>(subscribe, getSnapshot, getServerSnapshot?)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.42,
                        "interest": 0.76,
                        "usage": 0.07,
                        "retention": 0.88,
                        "positivity": 0.37,
                        "positivityRelative": 0.81,
                        "appreciation": 0.12
                      },
                      "completion": {
                        "count": 11032,
                        "percentageSurvey": 84.84,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.5,
                        "interest": 0.76,
                        "usage": 0.12,
                        "retention": 0.86,
                        "positivity": 0.29,
                        "positivityRelative": 0.79,
                        "appreciation": 0.1
                      },
                      "completion": {
                        "count": 6931,
                        "percentageSurvey": 88.07,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "uselayouteffect",
                "entity": {
                  "name": "`useLayoutEffect`\n",
                  "nameClean": "useLayoutEffect",
                  "nameHtml": "<code>useLayoutEffect</code>\n",
                  "entityType": "feature"
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.78,
                        "interest": 0.76,
                        "usage": 0.42,
                        "retention": 0.78,
                        "positivity": 0.28,
                        "positivityRelative": 0.78,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 6931,
                        "percentageSurvey": 88.07,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "cache",
                "entity": {
                  "name": "React `cache`",
                  "nameClean": "React cache",
                  "nameHtml": "React <code>cache</code>",
                  "entityType": "feature",
                  "homepage": {
                    "url": "https://nextjs.org/docs/app/building-your-application/data-fetching/caching#react-cache"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.29,
                        "interest": 0.9,
                        "usage": 0.06,
                        "retention": 0.88,
                        "positivity": 0.45,
                        "positivityRelative": 0.93,
                        "appreciation": -0.03
                      },
                      "completion": {
                        "count": 10292,
                        "percentageSurvey": 79.15,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.42,
                        "interest": 0.89,
                        "usage": 0.1,
                        "retention": 0.83,
                        "positivity": 0.33,
                        "positivityRelative": 0.89,
                        "appreciation": -0.07
                      },
                      "completion": {
                        "count": 6530,
                        "percentageSurvey": 82.97,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "react_server_components",
                "entity": {
                  "name": "React Server Components",
                  "nameClean": "React Server Components",
                  "entityType": "feature",
                  "homepage": {
                    "url": "https://nextjs.org/docs/getting-started/react-essentials#server-components"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.9,
                        "interest": 0.75,
                        "usage": 0.28,
                        "retention": 0.87,
                        "positivity": 0.42,
                        "positivityRelative": 0.79,
                        "appreciation": 0.11
                      },
                      "completion": {
                        "count": 10311,
                        "percentageSurvey": 79.3,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.94,
                        "interest": 0.68,
                        "usage": 0.4,
                        "retention": 0.79,
                        "positivity": 0.33,
                        "positivityRelative": 0.73,
                        "appreciation": 0.11
                      },
                      "completion": {
                        "count": 6528,
                        "percentageSurvey": 82.95,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "server_actions",
                "entity": {
                  "name": "Server Actions",
                  "nameClean": "Server Actions",
                  "entityType": "feature",
                  "homepage": {
                    "url": "https://nextjs.org/docs/app/api-reference/functions/server-actions"
                  },
                  "example": {
                    "language": "js",
                    "code": "export default function ServerComponent() {\n  async function myAction() {\n    'use server'\n    // ...\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">ServerComponent</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">myAction</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-string\">&#x27;use server&#x27;</span>\n    <span class=\"hljs-comment\">// ...</span>\n  }\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.71,
                        "interest": 0.72,
                        "usage": 0.14,
                        "retention": 0.82,
                        "positivity": 0.38,
                        "positivityRelative": 0.75,
                        "appreciation": 0.1
                      },
                      "completion": {
                        "count": 10281,
                        "percentageSurvey": 79.07,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.81,
                        "interest": 0.62,
                        "usage": 0.29,
                        "retention": 0.74,
                        "positivity": 0.28,
                        "positivityRelative": 0.67,
                        "appreciation": 0.11
                      },
                      "completion": {
                        "count": 6516,
                        "percentageSurvey": 82.8,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "starttransition",
                "entity": {
                  "name": "`startTransition`",
                  "nameClean": "startTransition",
                  "nameHtml": "<code>startTransition</code>",
                  "entityType": "feature",
                  "description": "`startTransition` lets you update the state without blocking the UI.\n",
                  "descriptionClean": "startTransition lets you update the state without blocking the UI.",
                  "descriptionHtml": "<code>startTransition</code> lets you update the state without blocking the UI.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/startTransition"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "startTransition(scope)\n",
                    "codeHighlighted": "<span class=\"hljs-title function_\">startTransition</span>(scope)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.56,
                        "interest": 0.91,
                        "usage": 0.1,
                        "retention": 0.87,
                        "positivity": 0.44,
                        "positivityRelative": 0.91,
                        "appreciation": -0.04
                      },
                      "completion": {
                        "count": 10263,
                        "percentageSurvey": 78.93,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.63,
                        "interest": 0.9,
                        "usage": 0.17,
                        "retention": 0.88,
                        "positivity": 0.34,
                        "positivityRelative": 0.9,
                        "appreciation": -0.02
                      },
                      "completion": {
                        "count": 6508,
                        "percentageSurvey": 82.69,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "suspense",
                "entity": {
                  "name": "`<Suspense>`\n",
                  "nameClean": "Suspense",
                  "nameHtml": "<code>&lt;Suspense&gt;</code>\n",
                  "entityType": "feature",
                  "homepage": {
                    "url": "https://react.dev/reference/react/Suspense"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "<Suspense fallback={<Loading />}>\n  <SomeComponent />\n</Suspense>\n",
                    "codeHighlighted": "&lt;<span class=\"hljs-title class_\">Suspense</span> fallback={&lt;Loading /&gt;}&gt;\n  &lt;SomeComponent /&gt;\n&lt;/<span class=\"hljs-title class_\">Suspense</span>&gt;"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.91,
                        "interest": 0.93,
                        "usage": 0.59,
                        "retention": 0.96,
                        "positivity": 0.5,
                        "positivityRelative": 0.95,
                        "appreciation": 0.02
                      },
                      "completion": {
                        "count": 10275,
                        "percentageSurvey": 79.02,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.94,
                        "interest": 0.91,
                        "usage": 0.69,
                        "retention": 0.91,
                        "positivity": 0.39,
                        "positivityRelative": 0.91,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 6526,
                        "percentageSurvey": 82.92,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "taint_api",
                "entity": {
                  "name": "Taint API",
                  "nameClean": "Taint API",
                  "entityType": "feature",
                  "homepage": {
                    "url": "https://react.dev/reference/react/experimental_taintObjectReference"
                  },
                  "example": {
                    "language": "js",
                    "code": "taintObjectReference(message, object);\ntaintUniqueValue(errMessage, lifetime, value)\n",
                    "codeHighlighted": "<span class=\"hljs-title function_\">taintObjectReference</span>(message, object);\n<span class=\"hljs-title function_\">taintUniqueValue</span>(errMessage, lifetime, value)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.23,
                        "interest": 0.73,
                        "usage": 0,
                        "retention": 0,
                        "positivity": 0.32,
                        "positivityRelative": 0.73,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 10245,
                        "percentageSurvey": 78.79,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.17,
                        "interest": 0.62,
                        "usage": 0.01,
                        "retention": 0.59,
                        "positivity": 0.22,
                        "positivityRelative": 0.67,
                        "appreciation": -0.03
                      },
                      "completion": {
                        "count": 6506,
                        "percentageSurvey": 82.67,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "use_hook",
                "entity": {
                  "name": "`use()`\n",
                  "nameClean": "use()",
                  "nameHtml": "<code>use()</code>\n",
                  "entityType": "feature",
                  "homepage": {
                    "url": "https://github.com/reactjs/rfcs/pull/229"
                  },
                  "example": {
                    "language": "js",
                    "code": "const value = use(resource);\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> value = <span class=\"hljs-title function_\">use</span>(resource);"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.48,
                        "interest": 0.87,
                        "usage": 0.05,
                        "retention": 0.83,
                        "positivity": 0.42,
                        "positivityRelative": 0.88,
                        "appreciation": -0.05
                      },
                      "completion": {
                        "count": 10252,
                        "percentageSurvey": 78.84,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.68,
                        "interest": 0.93,
                        "usage": 0.09,
                        "retention": 0.88,
                        "positivity": 0.36,
                        "positivityRelative": 0.9,
                        "appreciation": -0.05
                      },
                      "completion": {
                        "count": 6517,
                        "percentageSurvey": 82.81,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "useformstatus",
                "entity": {
                  "name": "useFormStatus",
                  "nameClean": "useFormStatus",
                  "entityType": "feature",
                  "homepage": {
                    "url": "https://react.dev/reference/react-dom/hooks/useFormStatus"
                  },
                  "example": {
                    "language": "js",
                    "code": "const { pending, data, method, action } = useFormStatus();\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> { pending, data, method, action } = <span class=\"hljs-title function_\">useFormStatus</span>();"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.28,
                        "interest": 0.83,
                        "usage": 0.05,
                        "retention": 0.83,
                        "positivity": 0.41,
                        "positivityRelative": 0.87,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 10226,
                        "percentageSurvey": 78.64,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.59,
                        "interest": 0.83,
                        "usage": 0.13,
                        "retention": 0.8,
                        "positivity": 0.33,
                        "positivityRelative": 0.84,
                        "appreciation": -0.04
                      },
                      "completion": {
                        "count": 6502,
                        "percentageSurvey": 82.62,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "usetransition",
                "entity": {
                  "name": "`useTransition`\n",
                  "nameClean": "useTransition",
                  "nameHtml": "<code>useTransition</code>\n",
                  "entityType": "feature",
                  "description": "`useTransition` is a React Hook that lets you update the state without blocking the UI.\n",
                  "descriptionClean": "useTransition is a React Hook that lets you update the state without blocking the UI.",
                  "descriptionHtml": "<code>useTransition</code> is a React Hook that lets you update the state without blocking the UI.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useTransition"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const [isPending, startTransition] = useTransition()\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> [isPending, startTransition] = <span class=\"hljs-title function_\">useTransition</span>()"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.6,
                        "interest": 0.91,
                        "usage": 0.12,
                        "retention": 0.89,
                        "positivity": 0.41,
                        "positivityRelative": 0.9,
                        "appreciation": -0.02
                      },
                      "completion": {
                        "count": 10247,
                        "percentageSurvey": 78.8,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.7,
                        "interest": 0.91,
                        "usage": 0.19,
                        "retention": 0.89,
                        "positivity": 0.33,
                        "positivityRelative": 0.9,
                        "appreciation": -0.03
                      },
                      "completion": {
                        "count": 6498,
                        "percentageSurvey": 82.57,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "useactionstate",
                "entity": {
                  "name": "`useActionState` (formerly `useFormState`)\n",
                  "nameClean": "useActionState (formerly useFormState)",
                  "nameHtml": "<code>useActionState</code> (formerly <code>useFormState</code>)\n",
                  "entityType": "feature",
                  "description": "`useActionState` is a Hook that allows you to update state based on the result of a form action.\n",
                  "descriptionClean": "useActionState is a Hook that allows you to update state based on the result of a form action.",
                  "descriptionHtml": "<code>useActionState</code> is a Hook that allows you to update state based on the result of a form action.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useActionState"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const [state, formAction] = useActionState(fn, initialState, permalink?);\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> [state, formAction] = <span class=\"hljs-title function_\">useActionState</span>(fn, initialState, permalink?);"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.51,
                        "interest": 0.8,
                        "usage": 0.11,
                        "retention": 0.76,
                        "positivity": 0.28,
                        "positivityRelative": 0.8,
                        "appreciation": -0.04
                      },
                      "completion": {
                        "count": 6491,
                        "percentageSurvey": 82.48,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "useoptimistic",
                "entity": {
                  "name": "`useOptimistic`\n",
                  "nameClean": "useOptimistic",
                  "nameHtml": "<code>useOptimistic</code>\n",
                  "entityType": "feature",
                  "description": "`useOptimistic` is a React Hook that lets you optimistically update the UI.\n",
                  "descriptionClean": "useOptimistic is a React Hook that lets you optimistically update the UI.",
                  "descriptionHtml": "<code>useOptimistic</code> is a React Hook that lets you optimistically update the UI.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useOptimistic"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const [optimisticState, addOptimistic] = useOptimistic(state, updateFn);\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> [optimisticState, addOptimistic] = <span class=\"hljs-title function_\">useOptimistic</span>(state, updateFn);"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.57,
                        "interest": 0.9,
                        "usage": 0.07,
                        "retention": 0.83,
                        "positivity": 0.35,
                        "positivityRelative": 0.88,
                        "appreciation": -0.08
                      },
                      "completion": {
                        "count": 6499,
                        "percentageSurvey": 82.58,
                        "total": 7870
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  }
}