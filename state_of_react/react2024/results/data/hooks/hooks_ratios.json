{
  "dataAPI": {
    "surveys": {
      "state_of_react": {
        "react2024": {
          "hooks": {
            "hooks_ratios": [
              {
                "id": "usecallback",
                "entity": {
                  "name": "`useCallback`\n",
                  "nameClean": "useCallback",
                  "nameHtml": "<code>useCallback</code>\n",
                  "entityType": "feature",
                  "description": "`useCallback` is a React Hook that lets you cache a function definition between re-renders.\n",
                  "descriptionClean": "useCallback is a React Hook that lets you cache a function definition between re-renders.",
                  "descriptionHtml": "<code>useCallback</code> is a React Hook that lets you cache a function definition between re-renders.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useCallback"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const cachedFn = useCallback(fn, dependencies)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> cachedFn = <span class=\"hljs-title function_\">useCallback</span>(fn, dependencies)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.96,
                        "interest": 0.8,
                        "usage": 0.85,
                        "retention": 0.81,
                        "positivity": 0.41,
                        "positivityRelative": 0.81,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 11090,
                        "percentageSurvey": 85.29,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.97,
                        "interest": 0.76,
                        "usage": 0.88,
                        "retention": 0.72,
                        "positivity": 0.34,
                        "positivityRelative": 0.72,
                        "appreciation": -0.04
                      },
                      "completion": {
                        "count": 6959,
                        "percentageSurvey": 88.42,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "usecontext",
                "entity": {
                  "name": "`useContext`\n",
                  "nameClean": "useContext",
                  "nameHtml": "<code>useContext</code>\n",
                  "entityType": "feature",
                  "description": "`useContext` is a React Hook that lets you read and subscribe to context from your component.\n",
                  "descriptionClean": "useContext is a React Hook that lets you read and subscribe to context from your component.",
                  "descriptionHtml": "<code>useContext</code> is a React Hook that lets you read and subscribe to context from your component.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useContext"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const value = useContext(SomeContext)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> value = <span class=\"hljs-title function_\">useContext</span>(<span class=\"hljs-title class_\">SomeContext</span>)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.98,
                        "interest": 0.73,
                        "usage": 0.9,
                        "retention": 0.9,
                        "positivity": 0.46,
                        "positivityRelative": 0.89,
                        "appreciation": 0.16
                      },
                      "completion": {
                        "count": 11073,
                        "percentageSurvey": 85.16,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.98,
                        "interest": 0.67,
                        "usage": 0.92,
                        "retention": 0.91,
                        "positivity": 0.43,
                        "positivityRelative": 0.9,
                        "appreciation": 0.24
                      },
                      "completion": {
                        "count": 6944,
                        "percentageSurvey": 88.23,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "usedeferredvalue",
                "entity": {
                  "name": "`useDeferredValue`\n",
                  "nameClean": "useDeferredValue",
                  "nameHtml": "<code>useDeferredValue</code>\n",
                  "entityType": "feature",
                  "description": "`useDeferredValue` is a React Hook that lets you defer updating a part of the UI.\n",
                  "descriptionClean": "useDeferredValue is a React Hook that lets you defer updating a part of the UI.",
                  "descriptionHtml": "<code>useDeferredValue</code> is a React Hook that lets you defer updating a part of the UI.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useDeferredValue"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const deferredValue = useDeferredValue(value)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> deferredValue = <span class=\"hljs-title function_\">useDeferredValue</span>(value)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.49,
                        "interest": 0.87,
                        "usage": 0.09,
                        "retention": 0.84,
                        "positivity": 0.42,
                        "positivityRelative": 0.88,
                        "appreciation": -0.03
                      },
                      "completion": {
                        "count": 11063,
                        "percentageSurvey": 85.08,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.59,
                        "interest": 0.83,
                        "usage": 0.14,
                        "retention": 0.82,
                        "positivity": 0.32,
                        "positivityRelative": 0.84,
                        "appreciation": -0.01
                      },
                      "completion": {
                        "count": 6940,
                        "percentageSurvey": 88.18,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "useeffect",
                "entity": {
                  "name": "`useEffect`\n",
                  "nameClean": "useEffect",
                  "nameHtml": "<code>useEffect</code>\n",
                  "entityType": "feature",
                  "description": "`useEffect` is a React Hook that lets you synchronize a component with an external system.\n",
                  "descriptionClean": "useEffect is a React Hook that lets you synchronize a component with an external system.",
                  "descriptionHtml": "<code>useEffect</code> is a React Hook that lets you synchronize a component with an external system.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useEffect"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "useEffect(setup, dependencies?)\n",
                    "codeHighlighted": "<span class=\"hljs-title function_\">useEffect</span>(setup, dependencies?)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.99,
                        "interest": 0.72,
                        "usage": 0.98,
                        "retention": 0.74,
                        "positivity": 0.4,
                        "positivityRelative": 0.74,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 11063,
                        "percentageSurvey": 85.08,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 1,
                        "interest": 0,
                        "usage": 0.99,
                        "retention": 0.68,
                        "positivity": 0.34,
                        "positivityRelative": 0.68,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 6949,
                        "percentageSurvey": 88.3,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "useid",
                "entity": {
                  "name": "`useId`\n",
                  "nameClean": "useId",
                  "nameHtml": "<code>useId</code>\n",
                  "entityType": "feature",
                  "description": "`useId` is a React Hook for generating unique IDs that can be passed to accessibility attributes.\n",
                  "descriptionClean": "useId is a React Hook for generating unique IDs that can be passed to accessibility attributes.",
                  "descriptionHtml": "<code>useId</code> is a React Hook for generating unique IDs that can be passed to accessibility attributes.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useId"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const id = useId()\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> id = <span class=\"hljs-title function_\">useId</span>()"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.6,
                        "interest": 0.84,
                        "usage": 0.24,
                        "retention": 0.95,
                        "positivity": 0.44,
                        "positivityRelative": 0.9,
                        "appreciation": 0.11
                      },
                      "completion": {
                        "count": 11050,
                        "percentageSurvey": 84.98,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.67,
                        "interest": 0.8,
                        "usage": 0.32,
                        "retention": 0.95,
                        "positivity": 0.38,
                        "positivityRelative": 0.88,
                        "appreciation": 0.15
                      },
                      "completion": {
                        "count": 6938,
                        "percentageSurvey": 88.16,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "usememo",
                "entity": {
                  "name": "`useMemo`\n",
                  "nameClean": "useMemo",
                  "nameHtml": "<code>useMemo</code>\n",
                  "entityType": "feature",
                  "description": "`useMemo` is a React Hook that lets you cache the result of a calculation between re-renders.\n",
                  "descriptionClean": "useMemo is a React Hook that lets you cache the result of a calculation between re-renders.",
                  "descriptionHtml": "<code>useMemo</code> is a React Hook that lets you cache the result of a calculation between re-renders.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useMemo"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const cachedValue = useMemo(calculateValue, dependencies)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> cachedValue = <span class=\"hljs-title function_\">useMemo</span>(calculateValue, dependencies)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.97,
                        "interest": 0.83,
                        "usage": 0.86,
                        "retention": 0.85,
                        "positivity": 0.43,
                        "positivityRelative": 0.85,
                        "appreciation": 0.02
                      },
                      "completion": {
                        "count": 11033,
                        "percentageSurvey": 84.85,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.98,
                        "interest": 0.77,
                        "usage": 0.88,
                        "retention": 0.78,
                        "positivity": 0.35,
                        "positivityRelative": 0.78,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 6936,
                        "percentageSurvey": 88.13,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "usereducer",
                "entity": {
                  "name": "`useReducer`\n",
                  "nameClean": "useReducer",
                  "nameHtml": "<code>useReducer</code>\n",
                  "entityType": "feature",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useReducer"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const [state, dispatch] = useReducer(reducer, initialArg, init?)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> [state, dispatch] = <span class=\"hljs-title function_\">useReducer</span>(reducer, initialArg, init?)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.94,
                        "interest": 0.54,
                        "usage": 0.67,
                        "retention": 0.77,
                        "positivity": 0.34,
                        "positivityRelative": 0.71,
                        "appreciation": 0.22
                      },
                      "completion": {
                        "count": 11039,
                        "percentageSurvey": 84.9,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.94,
                        "interest": 0.5,
                        "usage": 0.67,
                        "retention": 0.73,
                        "positivity": 0.28,
                        "positivityRelative": 0.67,
                        "appreciation": 0.22
                      },
                      "completion": {
                        "count": 6927,
                        "percentageSurvey": 88.02,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "useref",
                "entity": {
                  "name": "`useRef`\n",
                  "nameClean": "useRef",
                  "nameHtml": "<code>useRef</code>\n",
                  "entityType": "feature",
                  "description": "`useRef` is a React Hook that lets you reference a value that’s not needed for rendering.\n",
                  "descriptionClean": "useRef is a React Hook that lets you reference a value that’s not needed for rendering.",
                  "descriptionHtml": "<code>useRef</code> is a React Hook that lets you reference a value that’s not needed for rendering.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useRef"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const ref = useRef(initialValue)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> ref = <span class=\"hljs-title function_\">useRef</span>(initialValue)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.98,
                        "interest": 0.82,
                        "usage": 0.92,
                        "retention": 0.91,
                        "positivity": 0.44,
                        "positivityRelative": 0.9,
                        "appreciation": 0.08
                      },
                      "completion": {
                        "count": 11029,
                        "percentageSurvey": 84.82,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.98,
                        "interest": 0.71,
                        "usage": 0.93,
                        "retention": 0.87,
                        "positivity": 0.38,
                        "positivityRelative": 0.87,
                        "appreciation": 0.16
                      },
                      "completion": {
                        "count": 6927,
                        "percentageSurvey": 88.02,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "usestate",
                "entity": {
                  "name": "`useState`\n",
                  "nameClean": "useState",
                  "nameHtml": "<code>useState</code>\n",
                  "entityType": "feature",
                  "description": "`useState` is a React Hook that lets you add a state variable to your component.\n",
                  "descriptionClean": "useState is a React Hook that lets you add a state variable to your component.",
                  "descriptionHtml": "<code>useState</code> is a React Hook that lets you add a state variable to your component.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useState"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const [state, setState] = useState(initialState);\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> [state, setState] = <span class=\"hljs-title function_\">useState</span>(initialState);"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.99,
                        "interest": 0,
                        "usage": 0.98,
                        "retention": 0.97,
                        "positivity": 0.53,
                        "positivityRelative": 0.97,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 11033,
                        "percentageSurvey": 84.85,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.99,
                        "interest": 0,
                        "usage": 0.99,
                        "retention": 0.97,
                        "positivity": 0.5,
                        "positivityRelative": 0.97,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 6927,
                        "percentageSurvey": 88.02,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "usesyncexternalstore",
                "entity": {
                  "name": "`useSyncExternalStore`\n",
                  "nameClean": "useSyncExternalStore",
                  "nameHtml": "<code>useSyncExternalStore</code>\n",
                  "entityType": "feature",
                  "description": "`useSyncExternalStore` is a React Hook that lets you subscribe to an external store.\n",
                  "descriptionClean": "useSyncExternalStore is a React Hook that lets you subscribe to an external store.",
                  "descriptionHtml": "<code>useSyncExternalStore</code> is a React Hook that lets you subscribe to an external store.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/useSyncExternalStore"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const snapshot = useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot?)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> snapshot = <span class=\"hljs-title function_\">useSyncExternalStore</span>(subscribe, getSnapshot, getServerSnapshot?)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.42,
                        "interest": 0.76,
                        "usage": 0.07,
                        "retention": 0.88,
                        "positivity": 0.37,
                        "positivityRelative": 0.81,
                        "appreciation": 0.12
                      },
                      "completion": {
                        "count": 11032,
                        "percentageSurvey": 84.84,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.5,
                        "interest": 0.76,
                        "usage": 0.12,
                        "retention": 0.86,
                        "positivity": 0.29,
                        "positivityRelative": 0.79,
                        "appreciation": 0.1
                      },
                      "completion": {
                        "count": 6931,
                        "percentageSurvey": 88.07,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "uselayouteffect",
                "entity": {
                  "name": "`useLayoutEffect`\n",
                  "nameClean": "useLayoutEffect",
                  "nameHtml": "<code>useLayoutEffect</code>\n",
                  "entityType": "feature"
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.78,
                        "interest": 0.76,
                        "usage": 0.42,
                        "retention": 0.78,
                        "positivity": 0.28,
                        "positivityRelative": 0.78,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 6931,
                        "percentageSurvey": 88.07,
                        "total": 7870
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  }
}