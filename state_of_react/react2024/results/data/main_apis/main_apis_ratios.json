{
  "dataAPI": {
    "surveys": {
      "state_of_react": {
        "react2024": {
          "main_apis": {
            "main_apis_ratios": [
              {
                "id": "createcontext",
                "entity": {
                  "name": "`createContext`",
                  "nameClean": "createContext",
                  "nameHtml": "<code>createContext</code>",
                  "entityType": "feature",
                  "homepage": {
                    "url": "https://react.dev/reference/react/createContext"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const SomeContext = createContext(defaultValue)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">SomeContext</span> = <span class=\"hljs-title function_\">createContext</span>(defaultValue)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.96,
                        "interest": 0.76,
                        "usage": 0.85,
                        "retention": 0.88,
                        "positivity": 0.53,
                        "positivityRelative": 0.87,
                        "appreciation": 0.11
                      },
                      "completion": {
                        "count": 12766,
                        "percentageSurvey": 98.18,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.97,
                        "interest": 0.74,
                        "usage": 0.87,
                        "retention": 0.9,
                        "positivity": 0.53,
                        "positivityRelative": 0.89,
                        "appreciation": 0.15
                      },
                      "completion": {
                        "count": 7774,
                        "percentageSurvey": 98.78,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "createportal",
                "entity": {
                  "name": "`createPortal`",
                  "nameClean": "createPortal",
                  "nameHtml": "<code>createPortal</code>",
                  "entityType": "feature",
                  "homepage": {
                    "url": "https://react.dev/reference/react-dom/createPortal"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "<div>\n  <SomeComponent />\n  {createPortal(children, domNode, key?)}\n</div>\n",
                    "codeHighlighted": "&lt;div&gt;\n  &lt;SomeComponent /&gt;\n  {<span class=\"hljs-title function_\">createPortal</span>(children, domNode, key?)}\n&lt;/div&gt;"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.76,
                        "interest": 0.79,
                        "usage": 0.45,
                        "retention": 0.91,
                        "positivity": 0.46,
                        "positivityRelative": 0.86,
                        "appreciation": 0.12
                      },
                      "completion": {
                        "count": 12708,
                        "percentageSurvey": 97.73,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.77,
                        "interest": 0.78,
                        "usage": 0.46,
                        "retention": 0.91,
                        "positivity": 0.42,
                        "positivityRelative": 0.86,
                        "appreciation": 0.13
                      },
                      "completion": {
                        "count": 7734,
                        "percentageSurvey": 98.27,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "forwardref",
                "entity": {
                  "name": "`forwardRef`",
                  "nameClean": "forwardRef",
                  "nameHtml": "<code>forwardRef</code>",
                  "entityType": "feature",
                  "homepage": {
                    "url": "https://react.dev/reference/react/forwardRef"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const SomeComponent = forwardRef(render)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">SomeComponent</span> = <span class=\"hljs-title function_\">forwardRef</span>(render)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.87,
                        "interest": 0.73,
                        "usage": 0.68,
                        "retention": 0.64,
                        "positivity": 0.34,
                        "positivityRelative": 0.67,
                        "appreciation": -0.1
                      },
                      "completion": {
                        "count": 12632,
                        "percentageSurvey": 97.15,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.91,
                        "interest": 0.59,
                        "usage": 0.73,
                        "retention": 0.41,
                        "positivity": 0.23,
                        "positivityRelative": 0.46,
                        "appreciation": -0.18
                      },
                      "completion": {
                        "count": 7710,
                        "percentageSurvey": 97.97,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "fragment",
                "entity": {
                  "name": "`<Fragment>`\n",
                  "nameClean": "Fragment",
                  "nameHtml": "<code>&lt;Fragment&gt;</code>\n",
                  "entityType": "feature",
                  "description": "`<Fragment>`, often used via `<>...</>` syntax, lets you group elements without a wrapper node.\n",
                  "descriptionClean": "Fragment, often used via .../ syntax, lets you group elements without a wrapper node.",
                  "descriptionHtml": "<code>&lt;Fragment&gt;</code>, often used via <code>&lt;&gt;...&lt;/&gt;</code> syntax, lets you group elements without a wrapper node.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/Fragment"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "<>\n  <OneChild />\n  <AnotherChild />\n</>\n",
                    "codeHighlighted": "&lt;&gt;\n  &lt;OneChild /&gt;\n  &lt;AnotherChild /&gt;\n&lt;/&gt;"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.99,
                        "interest": 0.68,
                        "usage": 0.97,
                        "retention": 0.97,
                        "positivity": 0.57,
                        "positivityRelative": 0.96,
                        "appreciation": 0.29
                      },
                      "completion": {
                        "count": 12637,
                        "percentageSurvey": 97.19,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.99,
                        "interest": 0,
                        "usage": 0.97,
                        "retention": 0.96,
                        "positivity": 0.56,
                        "positivityRelative": 0.96,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 7711,
                        "percentageSurvey": 97.98,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "lazy",
                "entity": {
                  "name": "`lazy` ",
                  "nameClean": "lazy ",
                  "nameHtml": "<code>lazy</code> ",
                  "entityType": "feature",
                  "homepage": {
                    "url": "https://react.dev/reference/react/lazy"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const SomeComponent = lazy(load)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">SomeComponent</span> = <span class=\"hljs-title function_\">lazy</span>(load)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.86,
                        "interest": 0.93,
                        "usage": 0.53,
                        "retention": 0.94,
                        "positivity": 0.49,
                        "positivityRelative": 0.93,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 12596,
                        "percentageSurvey": 96.87,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.88,
                        "interest": 0.87,
                        "usage": 0.57,
                        "retention": 0.89,
                        "positivity": 0.41,
                        "positivityRelative": 0.88,
                        "appreciation": 0.02
                      },
                      "completion": {
                        "count": 7677,
                        "percentageSurvey": 97.55,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "memo",
                "entity": {
                  "name": "`memo`",
                  "nameClean": "memo",
                  "nameHtml": "<code>memo</code>",
                  "entityType": "feature",
                  "description": "`memo` lets you skip re-rendering a component when its props are unchanged.\n",
                  "descriptionClean": "memo lets you skip re-rendering a component when its props are unchanged.",
                  "descriptionHtml": "<code>memo</code> lets you skip re-rendering a component when its props are unchanged.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/memo"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "const MemoizedComponent = memo(SomeComponent, arePropsEqual?)\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">MemoizedComponent</span> = <span class=\"hljs-title function_\">memo</span>(<span class=\"hljs-title class_\">SomeComponent</span>, arePropsEqual?)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.93,
                        "interest": 0.8,
                        "usage": 0.73,
                        "retention": 0.77,
                        "positivity": 0.4,
                        "positivityRelative": 0.79,
                        "appreciation": -0.03
                      },
                      "completion": {
                        "count": 12584,
                        "percentageSurvey": 96.78,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.95,
                        "interest": 0.8,
                        "usage": 0.76,
                        "retention": 0.7,
                        "positivity": 0.33,
                        "positivityRelative": 0.72,
                        "appreciation": -0.11
                      },
                      "completion": {
                        "count": 7682,
                        "percentageSurvey": 97.61,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "profiler",
                "entity": {
                  "name": "`<Profiler>`\n",
                  "nameClean": "Profiler",
                  "nameHtml": "<code>&lt;Profiler&gt;</code>\n",
                  "entityType": "feature",
                  "description": "`<Profiler>` lets you measure rendering performance of a React tree programmatically.\n",
                  "descriptionClean": "Profiler lets you measure rendering performance of a React tree programmatically.",
                  "descriptionHtml": "<code>&lt;Profiler&gt;</code> lets you measure rendering performance of a React tree programmatically.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/Profiler"
                  },
                  "example": {
                    "language": "jsx",
                    "code": "<Profiler id=\"App\" onRender={onRender}>\n  <App />\n</Profiler>\n",
                    "codeHighlighted": "&lt;<span class=\"hljs-title class_\">Profiler</span> id=<span class=\"hljs-string\">&quot;App&quot;</span> onRender={onRender}&gt;\n  &lt;App /&gt;\n&lt;/<span class=\"hljs-title class_\">Profiler</span>&gt;"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.34,
                        "interest": 0.89,
                        "usage": 0.07,
                        "retention": 0.84,
                        "positivity": 0.48,
                        "positivityRelative": 0.92,
                        "appreciation": -0.05
                      },
                      "completion": {
                        "count": 12556,
                        "percentageSurvey": 96.56,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.39,
                        "interest": 0.85,
                        "usage": 0.08,
                        "retention": 0.79,
                        "positivity": 0.37,
                        "positivityRelative": 0.89,
                        "appreciation": -0.07
                      },
                      "completion": {
                        "count": 7670,
                        "percentageSurvey": 97.46,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "strictmode",
                "entity": {
                  "name": "`<StrictMode>`\n",
                  "nameClean": "StrictMode",
                  "nameHtml": "<code>&lt;StrictMode&gt;</code>\n",
                  "entityType": "feature",
                  "description": "`<StrictMode>` lets you find common bugs in your components early during development.\n",
                  "descriptionClean": "StrictMode lets you find common bugs in your components early during development.",
                  "descriptionHtml": "<code>&lt;StrictMode&gt;</code> lets you find common bugs in your components early during development.\n",
                  "example": {
                    "language": "jsx",
                    "code": "<StrictMode>\n  <App />\n</StrictMode>\n",
                    "codeHighlighted": "&lt;<span class=\"hljs-title class_\">StrictMode</span>&gt;\n  &lt;App /&gt;\n&lt;/<span class=\"hljs-title class_\">StrictMode</span>&gt;"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "react2023",
                      "ratios": {
                        "awareness": 0.88,
                        "interest": 0.75,
                        "usage": 0.66,
                        "retention": 0.82,
                        "positivity": 0.39,
                        "positivityRelative": 0.81,
                        "appreciation": 0.06
                      },
                      "completion": {
                        "count": 12579,
                        "percentageSurvey": 96.74,
                        "total": 13003
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.92,
                        "interest": 0.75,
                        "usage": 0.71,
                        "retention": 0.76,
                        "positivity": 0.33,
                        "positivityRelative": 0.77,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 7675,
                        "percentageSurvey": 97.52,
                        "total": 7870
                      }
                    }
                  ]
                }
              },
              {
                "id": "react_act",
                "entity": {
                  "name": "`act`\n",
                  "nameClean": "act",
                  "nameHtml": "<code>act</code>\n",
                  "entityType": "feature",
                  "description": "`act` is a test helper to apply pending React updates before making assertions.\n",
                  "descriptionClean": "act is a test helper to apply pending React updates before making assertions.",
                  "descriptionHtml": "<code>act</code> is a test helper to apply pending React updates before making assertions.\n",
                  "homepage": {
                    "url": "https://react.dev/reference/react/act"
                  },
                  "example": {
                    "language": "js",
                    "code": "it ('renders with button disabled', async () => {\n  await act(async () => {\n    root.render(<TestComponent />)\n  });\n  expect(container.querySelector('button')).toBeDisabled();\n});\n",
                    "codeHighlighted": "it (<span class=\"hljs-string\">&#x27;renders with button disabled&#x27;</span>, <span class=\"hljs-keyword\">async</span> () =&gt; {\n  <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">act</span>(<span class=\"hljs-keyword\">async</span> () =&gt; {\n    root.<span class=\"hljs-title function_\">render</span>(&lt;TestComponent /&gt;)\n  });\n  <span class=\"hljs-title function_\">expect</span>(container.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">&#x27;button&#x27;</span>)).<span class=\"hljs-title function_\">toBeDisabled</span>();\n});"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "react2024",
                      "ratios": {
                        "awareness": 0.43,
                        "interest": 0.66,
                        "usage": 0.3,
                        "retention": 0.51,
                        "positivity": 0.26,
                        "positivityRelative": 0.67,
                        "appreciation": -0.16
                      },
                      "completion": {
                        "count": 7666,
                        "percentageSurvey": 97.41,
                        "total": 7870
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  }
}