{
  "dataAPI": {
    "surveys": {
      "state_of_html": {
        "html2025": {
          "features": {
            "features_ratios_over_time": [
              {
                "id": "datalist_element",
                "entity": {
                  "name": "`<datalist>`",
                  "nameClean": "<datalist>",
                  "nameHtml": "<code>&lt;datalist&gt;</code>",
                  "entityType": "feature",
                  "description": "Method of providing a list of presets for a user to select in a form control, while still allowing custom options.",
                  "descriptionClean": "Method of providing a list of presets for a user to select in a form control, while still allowing custom options.",
                  "caniuse": {
                    "name": "datalist",
                    "url": "https://caniuse.com/datalist"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/datalist",
                    "title": "<datalist>: The HTML Data List element",
                    "summary": "The <datalist> HTML element contains a set of <option> elements that represent the permissible or recommended options available to choose from within other controls."
                  },
                  "example": {
                    "language": "html",
                    "code": "<input name=\"country\" list=\"countries\">\n<datalist id=\"countries\">\n  <option>Afghanistan</option>\n  ...\n</datalist>",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;country&quot;</span> <span class=\"hljs-attr\">list</span>=<span class=\"hljs-string\">&quot;countries&quot;</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">datalist</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;countries&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span>&gt;</span>Afghanistan<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n  ...\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">datalist</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.58,
                        "interest": 0.91,
                        "usage": 0.22,
                        "retention": 0.91,
                        "positivity": 0.55,
                        "positivityRelative": 0.93,
                        "appreciation": -0.01
                      },
                      "completion": {
                        "count": 20498,
                        "percentageSurvey": 98.06,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.7,
                        "interest": 0.93,
                        "usage": 0.29,
                        "retention": 0.86,
                        "positivity": 0.49,
                        "positivityRelative": 0.92,
                        "appreciation": -0.07
                      },
                      "completion": {
                        "count": 5309,
                        "percentageSurvey": 98.3,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.69,
                        "interest": 0.93,
                        "usage": 0.3,
                        "retention": 0.87,
                        "positivity": 0.46,
                        "positivityRelative": 0.92,
                        "appreciation": -0.07
                      },
                      "completion": {
                        "count": 6129,
                        "percentageSurvey": 98.49,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "showpicker",
                "entity": {
                  "name": "`input.showPicker()`",
                  "nameClean": "input.showPicker()",
                  "nameHtml": "<code>input.showPicker()</code>",
                  "entityType": "feature",
                  "description": "Programmatically open the picker of form controls that have one (color pickers, date inputs etc).",
                  "descriptionClean": "Programmatically open the picker of form controls that have one (color pickers, date inputs etc).",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/showPicker",
                    "title": "HTMLInputElement: showPicker() method",
                    "summary": "The HTMLInputElement.showPicker() method displays the browser picker for an input element."
                  },
                  "example": {
                    "language": "html",
                    "code": "<input id=\"dateInput\" type=\"date\">\n<button onclick=\"dateInput.showPicker()\">Select date</button>",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;dateInput&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;date&quot;</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onclick</span>=<span class=\"hljs-string\">&quot;dateInput.showPicker()&quot;</span>&gt;</span>Select date<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.25,
                        "interest": 0.88,
                        "usage": 0.07,
                        "retention": 0.9,
                        "positivity": 0.41,
                        "positivityRelative": 0.9,
                        "appreciation": 0.02
                      },
                      "completion": {
                        "count": 20071,
                        "percentageSurvey": 96.02,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.32,
                        "interest": 0.86,
                        "usage": 0.09,
                        "retention": 0.83,
                        "positivity": 0.37,
                        "positivityRelative": 0.9,
                        "appreciation": -0.04
                      },
                      "completion": {
                        "count": 5236,
                        "percentageSurvey": 96.95,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.35,
                        "interest": 0.91,
                        "usage": 0.09,
                        "retention": 0.91,
                        "positivity": 0.37,
                        "positivityRelative": 0.91,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 6080,
                        "percentageSurvey": 97.7,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "customizable_select",
                "entity": {
                  "name": "Customizable Select",
                  "nameClean": "Customizable Select",
                  "entityType": "feature",
                  "description": "Stylable, customizable dropdown control. Previously `<selectlist>` and `<selectmenu>`.\n",
                  "descriptionClean": "Stylable, customizable dropdown control. Previously <selectlist> and <selectmenu>.",
                  "descriptionHtml": "Stylable, customizable dropdown control. Previously <code>&lt;selectlist&gt;</code> and <code>&lt;selectmenu&gt;</code>.\n",
                  "example": {
                    "language": "css",
                    "code": "select,\n::picker(select) {\n  appearance: base-select;\n}",
                    "codeHighlighted": "<span class=\"hljs-selector-tag\">select</span>,\n::<span class=\"hljs-built_in\">picker</span>(select) {\n  <span class=\"hljs-attribute\">appearance</span>: base-select;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.3,
                        "interest": 0.96,
                        "usage": 0.05,
                        "retention": 0.73,
                        "positivity": 0.43,
                        "positivityRelative": 0.95,
                        "appreciation": -0.23
                      },
                      "completion": {
                        "count": 5209,
                        "percentageSurvey": 96.45,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.49,
                        "interest": 0.97,
                        "usage": 0.07,
                        "retention": 0.89,
                        "positivity": 0.42,
                        "positivityRelative": 0.95,
                        "appreciation": -0.08
                      },
                      "completion": {
                        "count": 6037,
                        "percentageSurvey": 97.01,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "input_type_color",
                "entity": {
                  "name": "`<input type=\"color\">`\n",
                  "nameClean": "<input type=\"color\">",
                  "nameHtml": "<code>&lt;input type=\"color\"&gt;</code>\n",
                  "entityType": "feature",
                  "description": "Creates a color picker from which users can choose a color value.\n",
                  "descriptionClean": "Creates a color picker from which users can choose a color value.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/input/color",
                    "title": "<input type=\"color\">",
                    "summary": "<input> elements of type color provide a user interface element that lets a user specify a color, either by using a visual color picker interface or by entering the color into a text field in a CSS color value format."
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.83,
                        "interest": 0.77,
                        "usage": 0.42,
                        "retention": 0.83,
                        "positivity": 0.29,
                        "positivityRelative": 0.82,
                        "appreciation": 0.05
                      },
                      "completion": {
                        "count": 6048,
                        "percentageSurvey": 97.19,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "input_type_color_colospace",
                "entity": {
                  "name": "`<input type=\"color\" colorspace=\"display-p3\">`\n",
                  "nameClean": "<input type=\"color\" colorspace=\"display-p3\">",
                  "nameHtml": "<code>&lt;input type=\"color\" colorspace=\"display-p3\"&gt;</code>\n",
                  "entityType": "feature",
                  "description": "Creates a color picker which allows the user to select a wide-gamut (P3) color.\n",
                  "descriptionClean": "Creates a color picker which allows the user to select a wide-gamut (P3) color.\n"
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.22,
                        "interest": 0.72,
                        "usage": 0.02,
                        "retention": 0.97,
                        "positivity": 0.23,
                        "positivityRelative": 0.73,
                        "appreciation": 0.24
                      },
                      "completion": {
                        "count": 6012,
                        "percentageSurvey": 96.61,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "input_type_color_alpha",
                "entity": {
                  "name": "`<input type=\"color\" alpha>`\n",
                  "nameClean": "<input type=\"color\" alpha>",
                  "nameHtml": "<code>&lt;input type=\"color\" alpha&gt;</code>\n",
                  "entityType": "feature",
                  "description": "Creates a color picker which allows the user to select a semi-transparent color.\n",
                  "descriptionClean": "Creates a color picker which allows the user to select a semi-transparent color.\n"
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.21,
                        "interest": 0.83,
                        "usage": 0.03,
                        "retention": 0.97,
                        "positivity": 0.27,
                        "positivityRelative": 0.85,
                        "appreciation": 0.14
                      },
                      "completion": {
                        "count": 5994,
                        "percentageSurvey": 96.32,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "contenteditable_plaintext",
                "entity": {
                  "name": "`contenteditable=\"plaintext-only\"`",
                  "nameClean": "contenteditable=\"plaintext-only\"",
                  "nameHtml": "<code>contenteditable=\"plaintext-only\"</code>",
                  "entityType": "feature",
                  "description": "Permits editing of the element's raw text, but not rich text formatting.",
                  "descriptionClean": "Permits editing of the element's raw text, but not rich text formatting.",
                  "descriptionHtml": "Permits editing of the element's raw text, but not rich text formatting.",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Global_attributes/contenteditable",
                    "title": "HTML contenteditable global attribute",
                    "summary": "The contenteditable global attribute is an enumerated attribute indicating if the element should be editable by the user. If so, the browser modifies its widget to allow editing."
                  },
                  "example": {
                    "language": "html",
                    "code": "<h2 class=\"title\" contenteditable=\"plaintext-only\"></h2>",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;title&quot;</span> <span class=\"hljs-attr\">contenteditable</span>=<span class=\"hljs-string\">&quot;plaintext-only&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.28,
                        "interest": 0.76,
                        "usage": 0.09,
                        "retention": 0.85,
                        "positivity": 0.34,
                        "positivityRelative": 0.81,
                        "appreciation": 0.09
                      },
                      "completion": {
                        "count": 19828,
                        "percentageSurvey": 94.86,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.21,
                        "interest": 0.79,
                        "usage": 0.06,
                        "retention": 0.89,
                        "positivity": 0.33,
                        "positivityRelative": 0.85,
                        "appreciation": 0.09
                      },
                      "completion": {
                        "count": 5188,
                        "percentageSurvey": 96.06,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.32,
                        "interest": 0.85,
                        "usage": 0.08,
                        "retention": 0.87,
                        "positivity": 0.3,
                        "positivityRelative": 0.87,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 5992,
                        "percentageSurvey": 96.29,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "details_element",
                "entity": {
                  "name": "`<details>` and `<summary>`",
                  "nameClean": "<details> and <summary>",
                  "nameHtml": "<code>&lt;details&gt;</code> and <code>&lt;summary&gt;</code>",
                  "entityType": "feature",
                  "description": "A disclosure widget that can be toggled to hide or show content interactively.",
                  "descriptionClean": "A disclosure widget that can be toggled to hide or show content interactively.",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/details",
                    "title": "<details>: The Details disclosure element",
                    "summary": "The <details> HTML element creates a disclosure widget in which information is visible only when the widget is toggled into an open state. A summary or label must be provided using the <summary> element."
                  },
                  "example": {
                    "language": "html",
                    "code": "<details>\n    <summary>Details</summary>\n    Longer content\n</details>",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">details</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">summary</span>&gt;</span>Details<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">summary</span>&gt;</span>\n    Longer content\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">details</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.72,
                        "interest": 0.88,
                        "usage": 0.46,
                        "retention": 0.93,
                        "positivity": 0.42,
                        "positivityRelative": 0.93,
                        "appreciation": 0.05
                      },
                      "completion": {
                        "count": 15715,
                        "percentageSurvey": 75.18,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.84,
                        "interest": 0.9,
                        "usage": 0.59,
                        "retention": 0.94,
                        "positivity": 0.43,
                        "positivityRelative": 0.93,
                        "appreciation": 0.04
                      },
                      "completion": {
                        "count": 4582,
                        "percentageSurvey": 84.84,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.86,
                        "interest": 0.92,
                        "usage": 0.66,
                        "retention": 0.95,
                        "positivity": 0.43,
                        "positivityRelative": 0.95,
                        "appreciation": 0.03
                      },
                      "completion": {
                        "count": 5155,
                        "percentageSurvey": 82.84,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "accordion_element",
                "entity": {
                  "name": "`<details name>` (Exclusive Accordion)",
                  "nameClean": "<details name> (Exclusive Accordion)",
                  "nameHtml": "<code>&lt;details name&gt;</code> (Exclusive Accordion)",
                  "entityType": "feature",
                  "description": "Group `<details>` elements so that only up to one in the group can be open at a time.",
                  "descriptionClean": "Group <details> elements so that only up to one in the group can be open at a time.",
                  "descriptionHtml": "Group <code>&lt;details&gt;</code> elements so that only up to one in the group can be open at a time.",
                  "example": {
                    "language": "html",
                    "code": "<details open name=\"sidebar_panel\">\n\t<summary>Main info</summary>\n\t<!-- controls -->\n</details>\n<details name=\"sidebar_panel\">\n\t<summary>Style</summary>\n\t<!-- controls -->\n</details>",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">details</span> <span class=\"hljs-attr\">open</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;sidebar_panel&quot;</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">summary</span>&gt;</span>Main info<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">summary</span>&gt;</span>\n\t<span class=\"hljs-comment\">&lt;!-- controls --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">details</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">details</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;sidebar_panel&quot;</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">summary</span>&gt;</span>Style<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">summary</span>&gt;</span>\n\t<span class=\"hljs-comment\">&lt;!-- controls --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">details</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.21,
                        "interest": 0.9,
                        "usage": 0.01,
                        "retention": 0.84,
                        "positivity": 0.41,
                        "positivityRelative": 0.93,
                        "appreciation": -0.06
                      },
                      "completion": {
                        "count": 15614,
                        "percentageSurvey": 74.7,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.48,
                        "interest": 0.91,
                        "usage": 0.16,
                        "retention": 0.93,
                        "positivity": 0.42,
                        "positivityRelative": 0.94,
                        "appreciation": 0.02
                      },
                      "completion": {
                        "count": 4553,
                        "percentageSurvey": 84.3,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.53,
                        "interest": 0.9,
                        "usage": 0.22,
                        "retention": 0.96,
                        "positivity": 0.39,
                        "positivityRelative": 0.94,
                        "appreciation": 0.06
                      },
                      "completion": {
                        "count": 5111,
                        "percentageSurvey": 82.13,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "dialog_element",
                "entity": {
                  "name": "`<dialog>`",
                  "nameClean": "<dialog>",
                  "nameHtml": "<code>&lt;dialog&gt;</code>",
                  "entityType": "feature",
                  "description": "Creates a modal or non-modal dialog box, such as a confirmation prompt or a subwindow used to enter data.\n",
                  "descriptionClean": "Creates a modal or non-modal dialog box, such as a confirmation prompt or a subwindow used to enter data.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/dialog",
                    "title": "<dialog>: The Dialog element",
                    "summary": "The <dialog> HTML element represents a modal or non-modal dialog box or other interactive component, such as a dismissible alert, inspector, or subwindow."
                  },
                  "example": {
                    "language": "html",
                    "code": "<dialog id=\"confirm\">\n\t<form method=\"dialog\">\n\t\tAre you sure?\n\t\t<button value=\"1\">Yes</button>\n\t\t<button value=\"0\">No</button>\n\t</form>\n</dialog>",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dialog</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;confirm&quot;</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">method</span>=<span class=\"hljs-string\">&quot;dialog&quot;</span>&gt;</span>\n\t\tAre you sure?\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;1&quot;</span>&gt;</span>Yes<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;0&quot;</span>&gt;</span>No<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dialog</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.77,
                        "interest": 0.95,
                        "usage": 0.31,
                        "retention": 0.92,
                        "positivity": 0.47,
                        "positivityRelative": 0.94,
                        "appreciation": -0.04
                      },
                      "completion": {
                        "count": 15767,
                        "percentageSurvey": 75.43,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.86,
                        "interest": 0.94,
                        "usage": 0.47,
                        "retention": 0.93,
                        "positivity": 0.45,
                        "positivityRelative": 0.93,
                        "appreciation": -0.02
                      },
                      "completion": {
                        "count": 4584,
                        "percentageSurvey": 84.87,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.88,
                        "interest": 0.95,
                        "usage": 0.53,
                        "retention": 0.91,
                        "positivity": 0.41,
                        "positivityRelative": 0.93,
                        "appreciation": -0.05
                      },
                      "completion": {
                        "count": 5124,
                        "percentageSurvey": 82.34,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "dialog_closedby",
                "entity": {
                  "name": "`<dialog closedby=\"any\">`\n",
                  "nameClean": "<dialog closedby=\"any\">",
                  "nameHtml": "<code>&lt;dialog closedby=\"any\"&gt;</code>\n",
                  "entityType": "feature",
                  "description": "Allows the dialog to be closed by clicking outside of it (light dismiss).\n",
                  "descriptionClean": "Allows the dialog to be closed by clicking outside of it (light dismiss).\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/dialog",
                    "title": "<dialog>: The Dialog element",
                    "summary": "The <dialog> HTML element represents a modal or non-modal dialog box or other interactive component, such as a dismissible alert, inspector, or subwindow."
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.39,
                        "interest": 0.95,
                        "usage": 0.12,
                        "retention": 0.97,
                        "positivity": 0.39,
                        "positivityRelative": 0.97,
                        "appreciation": 0.02
                      },
                      "completion": {
                        "count": 5109,
                        "percentageSurvey": 82.1,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "dialog_requestclose",
                "entity": {
                  "name": "`dialog.requestClose()`",
                  "nameClean": "dialog.requestClose()",
                  "nameHtml": "<code>dialog.requestClose()</code>",
                  "entityType": "feature",
                  "description": "Closes the dialog in a way that can be cancelled (unlike `dialog.close()`).\n",
                  "descriptionClean": "Closes the dialog in a way that can be cancelled (unlike dialog.close()).",
                  "descriptionHtml": "Closes the dialog in a way that can be cancelled (unlike <code>dialog.close()</code>).\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/requestClose",
                    "title": "HTMLDialogElement: requestClose() method",
                    "summary": "The requestClose() method of the HTMLDialogElement interface requests to close the <dialog>.\nAn optional string may be passed as an argument, updating the returnValue of the dialog."
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.25,
                        "interest": 0.93,
                        "usage": 0.06,
                        "retention": 0.98,
                        "positivity": 0.32,
                        "positivityRelative": 0.93,
                        "appreciation": 0.04
                      },
                      "completion": {
                        "count": 5084,
                        "percentageSurvey": 81.7,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "popover_api",
                "entity": {
                  "name": "`popover` attribute (Popover API)",
                  "nameClean": "popover attribute (Popover API)",
                  "nameHtml": "<code>popover</code> attribute (Popover API)",
                  "entityType": "feature",
                  "description": "HTML syntax and JS API facilitating popovers such as overlays, popups, menus etc.",
                  "descriptionClean": "HTML syntax and JS API facilitating popovers such as overlays, popups, menus etc.",
                  "caniuse": {
                    "name": "mdn-html_global_attributes_popover",
                    "url": "https://caniuse.com/mdn-html_global_attributes_popover"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/Popover_API",
                    "title": "Popover API",
                    "summary": "The Popover API provides developers with a standard, consistent, flexible mechanism for displaying popover content on top of other page content. Popover content can be controlled either using HTML attributes, or via JavaScript."
                  },
                  "example": {
                    "language": "html",
                    "code": "<button popovertarget=\"foo\">Toggle the popover</button>\n<div id=\"foo\" popover>Popover content</div>",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">popovertarget</span>=<span class=\"hljs-string\">&quot;foo&quot;</span>&gt;</span>Toggle the popover<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;foo&quot;</span> <span class=\"hljs-attr\">popover</span>&gt;</span>Popover content<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.46,
                        "interest": 0.97,
                        "usage": 0.04,
                        "retention": 0.91,
                        "positivity": 0.48,
                        "positivityRelative": 0.96,
                        "appreciation": -0.07
                      },
                      "completion": {
                        "count": 15624,
                        "percentageSurvey": 74.75,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.65,
                        "interest": 0.97,
                        "usage": 0.16,
                        "retention": 0.88,
                        "positivity": 0.45,
                        "positivityRelative": 0.95,
                        "appreciation": -0.09
                      },
                      "completion": {
                        "count": 4549,
                        "percentageSurvey": 84.23,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.68,
                        "interest": 0.97,
                        "usage": 0.2,
                        "retention": 0.89,
                        "positivity": 0.41,
                        "positivityRelative": 0.95,
                        "appreciation": -0.08
                      },
                      "completion": {
                        "count": 5098,
                        "percentageSurvey": 81.92,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "popover_hint",
                "entity": {
                  "name": "`popover=\"hint\"`\n",
                  "nameClean": "popover=\"hint\"",
                  "nameHtml": "<code>popover=\"hint\"</code>\n",
                  "entityType": "feature",
                  "description": "A way to create less persistent popovers, such as tooltips.\n",
                  "descriptionClean": "A way to create less persistent popovers, such as tooltips.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Global_attributes/popover",
                    "title": "HTML popover global attribute",
                    "summary": "The popover global attribute is used to designate an element as a popover element."
                  },
                  "example": {
                    "language": "html",
                    "code": "<div id=\"tooltip\" popover=\"hint\">\n  Save this document\n</div>\n<button popovertarget=\"tooltip\">\n  Save\n</button>\n",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;tooltip&quot;</span> <span class=\"hljs-attr\">popover</span>=<span class=\"hljs-string\">&quot;hint&quot;</span>&gt;</span>\n  Save this document\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">popovertarget</span>=<span class=\"hljs-string\">&quot;tooltip&quot;</span>&gt;</span>\n  Save\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.39,
                        "interest": 0.96,
                        "usage": 0.05,
                        "retention": 0.92,
                        "positivity": 0.4,
                        "positivityRelative": 0.96,
                        "appreciation": -0.05
                      },
                      "completion": {
                        "count": 5077,
                        "percentageSurvey": 81.58,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "invokers",
                "entity": {
                  "name": "`command` and `commandfor` attributes (Command Invokers)\n",
                  "nameClean": "command and commandfor attributes (Command Invokers)",
                  "nameHtml": "<code>command</code> and <code>commandfor</code> attributes (Command Invokers)\n",
                  "entityType": "feature",
                  "description": "A declarative way for `<button>` to invoke predefined custom commands.\n",
                  "descriptionClean": "A declarative way for <button> to invoke predefined custom commands.",
                  "descriptionHtml": "A declarative way for <code>&lt;button&gt;</code> to invoke predefined custom commands.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/Invoker_Commands_API",
                    "title": "Invoker Commands API",
                    "summary": "The Invoker Commands API provides a way to declaratively assign behaviors to buttons, allowing control of interactive elements when the button is enacted (clicked or invoked via a keypress, such as the spacebar or return key)."
                  },
                  "example": {
                    "language": "html",
                    "code": "<button commandfor=\"mydialog\" command=\"show-modal\">\n  Show modal dialog\n</button>\n<dialog id=\"mydialog\">\n  <button commandfor=\"mydialog\" command=\"close\">\n    Close\n  </button>\n  *dialog content*\n</dialog>\n",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">commandfor</span>=<span class=\"hljs-string\">&quot;mydialog&quot;</span> <span class=\"hljs-attr\">command</span>=<span class=\"hljs-string\">&quot;show-modal&quot;</span>&gt;</span>\n  Show modal dialog\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dialog</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;mydialog&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">commandfor</span>=<span class=\"hljs-string\">&quot;mydialog&quot;</span> <span class=\"hljs-attr\">command</span>=<span class=\"hljs-string\">&quot;close&quot;</span>&gt;</span>\n    Close\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n  *dialog content*\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dialog</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.26,
                        "interest": 0.94,
                        "usage": 0.03,
                        "retention": 0.96,
                        "positivity": 0.4,
                        "positivityRelative": 0.93,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 5071,
                        "percentageSurvey": 81.49,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "element_before",
                "entity": {
                  "name": "`element.before()`\n",
                  "nameClean": "element.before()",
                  "nameHtml": "<code>element.before()</code>\n",
                  "entityType": "feature",
                  "description": "DOM method that moves an element before another.\n",
                  "descriptionClean": "DOM method that moves an element before another.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/before",
                    "title": "Element: before() method",
                    "summary": "The Element.before() method inserts a set of\nNode objects or strings in the children list of this\nElement's parent, just before this Element.\nStrings are inserted as equivalent Text nodes."
                  },
                  "example": {
                    "language": "js",
                    "code": "referenceElement.before(newElement);\n",
                    "codeHighlighted": "referenceElement.<span class=\"hljs-title function_\">before</span>(newElement);"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.42,
                        "interest": 0.86,
                        "usage": 0.19,
                        "retention": 0.98,
                        "positivity": 0.28,
                        "positivityRelative": 0.87,
                        "appreciation": 0.11
                      },
                      "completion": {
                        "count": 5076,
                        "percentageSurvey": 81.57,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "element_move_before",
                "entity": {
                  "name": "`element.moveBefore()`\n",
                  "nameClean": "element.moveBefore()",
                  "nameHtml": "<code>element.moveBefore()</code>\n",
                  "entityType": "feature",
                  "description": "Move an element before another while preserving state (focus, iframe loads, animation frame, etc).\n",
                  "descriptionClean": "Move an element before another while preserving state (focus, iframe loads, animation frame, etc).\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/moveBefore",
                    "title": "Element: moveBefore() method",
                    "summary": "The moveBefore() method of the Element interface moves a given Node inside the invoking node as a direct child, before a given reference node."
                  },
                  "example": {
                    "language": "js",
                    "code": "referenceElement.parentNode.moveBefore(newElement, referenceElement);\n",
                    "codeHighlighted": "referenceElement.<span class=\"hljs-property\">parentNode</span>.<span class=\"hljs-title function_\">moveBefore</span>(newElement, referenceElement);"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.25,
                        "interest": 0.87,
                        "usage": 0.06,
                        "retention": 0.96,
                        "positivity": 0.28,
                        "positivityRelative": 0.87,
                        "appreciation": 0.08
                      },
                      "completion": {
                        "count": 5059,
                        "percentageSurvey": 81.3,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "svg_element",
                "entity": {
                  "name": "`<svg>` (Inline SVG)",
                  "nameClean": "<svg> (Inline SVG)",
                  "nameHtml": "<code>&lt;svg&gt;</code> (Inline SVG)",
                  "entityType": "feature",
                  "description": "Embed SVG vector graphics directly in markup",
                  "descriptionClean": "Embed SVG vector graphics directly in markup",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/SVG/Reference/Element/svg",
                    "title": "<svg>",
                    "summary": "The <svg> SVG element is a container that defines a new coordinate system and viewport. It is used as the outermost element of SVG documents, but it can also be used to embed an SVG fragment inside an SVG or HTML document."
                  },
                  "example": {
                    "language": "html",
                    "code": "<svg>\n  <circle cx=\"50\" cy=\"50\" r=\"50\" />\n</svg>",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">svg</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">circle</span> <span class=\"hljs-attr\">cx</span>=<span class=\"hljs-string\">&quot;50&quot;</span> <span class=\"hljs-attr\">cy</span>=<span class=\"hljs-string\">&quot;50&quot;</span> <span class=\"hljs-attr\">r</span>=<span class=\"hljs-string\">&quot;50&quot;</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">svg</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.96,
                        "interest": 0.86,
                        "usage": 0.87,
                        "retention": 0.96,
                        "positivity": 0.38,
                        "positivityRelative": 0.95,
                        "appreciation": 0.09
                      },
                      "completion": {
                        "count": 4947,
                        "percentageSurvey": 79.5,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "canvas_element",
                "entity": {
                  "name": "`<canvas>`",
                  "nameClean": "<canvas>",
                  "nameHtml": "<code>&lt;canvas&gt;</code>",
                  "entityType": "feature",
                  "description": "Element for drawing dynamic 2D or 3D graphics using JavaScript.\n",
                  "descriptionClean": "Element for drawing dynamic 2D or 3D graphics using JavaScript.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/canvas",
                    "title": "<canvas>: The Graphics Canvas element",
                    "summary": "Use the HTML <canvas> element with either the canvas scripting API or the WebGL API to draw graphics and animations."
                  },
                  "example": {
                    "language": "html",
                    "code": "<canvas width=\"200\" height=\"200\"></canvas>",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">canvas</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">&quot;200&quot;</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">&quot;200&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">canvas</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.98,
                        "interest": 0.71,
                        "usage": 0.74,
                        "retention": 0.89,
                        "positivity": 0.28,
                        "positivityRelative": 0.85,
                        "appreciation": 0.17
                      },
                      "completion": {
                        "count": 4942,
                        "percentageSurvey": 79.42,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "canvas_colorspace",
                "entity": {
                  "name": "`colorSpace` for 2D canvas",
                  "nameClean": "colorSpace for 2D canvas",
                  "nameHtml": "<code>colorSpace</code> for 2D canvas",
                  "entityType": "feature",
                  "description": "Set the color space for the graphics being drawn on a  `<canvas>` element.\n",
                  "descriptionClean": "Set the color space for the graphics being drawn on a  <canvas> element.",
                  "descriptionHtml": "Set the color space for the graphics being drawn on a  <code>&lt;canvas&gt;</code> element.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext",
                    "title": "HTMLCanvasElement: getContext() method",
                    "summary": "The HTMLCanvasElement.getContext() method returns a drawing context on the canvas, or null if the context identifier is not supported, or the canvas has already been set to a different context mode."
                  },
                  "example": {
                    "language": "js",
                    "code": "const ctx = canvas.getContext(\"2d\", {colorSpace: \"display-p3\"});\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> ctx = canvas.<span class=\"hljs-title function_\">getContext</span>(<span class=\"hljs-string\">&quot;2d&quot;</span>, {<span class=\"hljs-attr\">colorSpace</span>: <span class=\"hljs-string\">&quot;display-p3&quot;</span>});"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.31,
                        "interest": 0.64,
                        "usage": 0.09,
                        "retention": 0.92,
                        "positivity": 0.16,
                        "positivityRelative": 0.65,
                        "appreciation": 0.27
                      },
                      "completion": {
                        "count": 4913,
                        "percentageSurvey": 78.95,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "canvas_drawelement",
                "entity": {
                  "name": "`ctx.drawElement()` (HTML in canvas)\n",
                  "nameClean": "ctx.drawElement() (HTML in canvas)",
                  "nameHtml": "<code>ctx.drawElement()</code> (HTML in canvas)\n",
                  "entityType": "feature",
                  "description": "Draw an HTML element on `<canvas>`,  with conveniences for redrawing and hit testing.\n",
                  "descriptionClean": "Draw an HTML element on <canvas>,  with conveniences for redrawing and hit testing.",
                  "descriptionHtml": "Draw an HTML element on <code>&lt;canvas&gt;</code>,  with conveniences for redrawing and hit testing.\n",
                  "example": {
                    "language": "html",
                    "code": "<canvas id=\"canvas\" layoutsubtree=\"true\">\n  <p>Hello world!</p>\n</canvas>\n<script type=\"module\">\n  const ctx = canvas.getContext(\"2d\");\n  const text = canvas.querySelector(\"p\");\n  ctx.drawElement(text, 30, 0);\n</script>\n",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">canvas</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;canvas&quot;</span> <span class=\"hljs-attr\">layoutsubtree</span>=<span class=\"hljs-string\">&quot;true&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Hello world!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">canvas</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;module&quot;</span>&gt;</span><span class=\"language-javascript\">\n  <span class=\"hljs-keyword\">const</span> ctx = canvas.<span class=\"hljs-title function_\">getContext</span>(<span class=\"hljs-string\">&quot;2d&quot;</span>);\n  <span class=\"hljs-keyword\">const</span> text = canvas.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">&quot;p&quot;</span>);\n  ctx.<span class=\"hljs-title function_\">drawElement</span>(text, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">0</span>);\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.49,
                        "interest": 0.75,
                        "usage": 0.28,
                        "retention": 0.86,
                        "positivity": 0.25,
                        "positivityRelative": 0.82,
                        "appreciation": 0.11
                      },
                      "completion": {
                        "count": 4906,
                        "percentageSurvey": 78.84,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "model_element",
                "entity": {
                  "name": "`<model>` (Inline AR/VR/3D content)",
                  "nameClean": "<model> (Inline AR/VR/3D content)",
                  "nameHtml": "<code>&lt;model&gt;</code> (Inline AR/VR/3D content)",
                  "entityType": "feature",
                  "description": "Allows embedding 3D models in HTML with built-in controls.\n",
                  "descriptionClean": "Allows embedding 3D models in HTML with built-in controls.\n",
                  "example": {
                    "language": "html",
                    "code": "<model src=\"3d-assets/car.glb\"></model>",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">model</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;3d-assets/car.glb&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">model</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.15,
                        "interest": 0.72,
                        "usage": 0,
                        "retention": 0.85,
                        "positivity": 0.24,
                        "positivityRelative": 0.7,
                        "appreciation": 0.12
                      },
                      "completion": {
                        "count": 14452,
                        "percentageSurvey": 69.14,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.22,
                        "interest": 0.62,
                        "usage": 0.02,
                        "retention": 0.76,
                        "positivity": 0.23,
                        "positivityRelative": 0.66,
                        "appreciation": 0.13
                      },
                      "completion": {
                        "count": 4275,
                        "percentageSurvey": 79.15,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.31,
                        "interest": 0.64,
                        "usage": 0.04,
                        "retention": 0.81,
                        "positivity": 0.22,
                        "positivityRelative": 0.71,
                        "appreciation": 0.17
                      },
                      "completion": {
                        "count": 4913,
                        "percentageSurvey": 78.95,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "webxr",
                "entity": {
                  "name": "`navigator.xr` (WebXR Device API)",
                  "nameClean": "navigator.xr (WebXR Device API)",
                  "nameHtml": "<code>navigator.xr</code> (WebXR Device API)",
                  "entityType": "feature",
                  "description": "Create AR/VR sessions with compatible output devices.\n",
                  "descriptionClean": "Create AR/VR sessions with compatible output devices.\n",
                  "caniuse": {
                    "name": "webxr",
                    "url": "https://caniuse.com/webxr"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/WebXR_Device_API",
                    "title": "WebXR Device API",
                    "summary": "WebXR is a group of standards which are used together to support rendering 3D scenes to hardware designed for presenting virtual worlds (virtual reality, or VR), or for adding graphical imagery to the real world, (augmented reality, or AR). The WebXR Device API implements the core of the WebXR feature set, managing the selection of output devices, render the 3D scene to the chosen device at the appropriate frame rate, and manage motion vectors created using input controllers."
                  },
                  "example": {
                    "language": "js",
                    "code": "const xr = navigator.xr;\nconst session = await xr?.requestSession(\"immersive-vr\");\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> xr = navigator.<span class=\"hljs-property\">xr</span>;\n<span class=\"hljs-keyword\">const</span> session = <span class=\"hljs-keyword\">await</span> xr?.<span class=\"hljs-title function_\">requestSession</span>(<span class=\"hljs-string\">&quot;immersive-vr&quot;</span>);"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.16,
                        "interest": 0.58,
                        "usage": 0.02,
                        "retention": 0.78,
                        "positivity": 0.14,
                        "positivityRelative": 0.53,
                        "appreciation": 0.2
                      },
                      "completion": {
                        "count": 4888,
                        "percentageSurvey": 78.55,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "webgpu",
                "entity": {
                  "name": "WebGPU",
                  "nameClean": "WebGPU",
                  "entityType": "feature",
                  "description": "A JavaScript API that provides low-level access to the GPU for high-performance graphics and parallel computation in the browser.\n",
                  "descriptionClean": "A JavaScript API that provides low-level access to the GPU for high-performance graphics and parallel computation in the browser.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGPU_API",
                    "title": "WebGPU API",
                    "summary": "The WebGPU API enables web developers to use the underlying system's GPU (Graphics Processing Unit) to carry out high-performance computations and draw complex images that can be rendered in the browser."
                  },
                  "example": {
                    "language": "js",
                    "code": "const adapter = await navigator.gpu.requestAdapter();\nconst device = await adapter?.requestDevice();\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> adapter = <span class=\"hljs-keyword\">await</span> navigator.<span class=\"hljs-property\">gpu</span>.<span class=\"hljs-title function_\">requestAdapter</span>();\n<span class=\"hljs-keyword\">const</span> device = <span class=\"hljs-keyword\">await</span> adapter?.<span class=\"hljs-title function_\">requestDevice</span>();"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.51,
                        "interest": 0.8,
                        "usage": 0.04,
                        "retention": 0.92,
                        "positivity": 0.23,
                        "positivityRelative": 0.76,
                        "appreciation": 0.11
                      },
                      "completion": {
                        "count": 4892,
                        "percentageSurvey": 78.61,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "webgl",
                "entity": {
                  "name": "WebGL",
                  "nameClean": "WebGL",
                  "entityType": "feature",
                  "description": "A low-level API for rendering 2D and 3D graphics with the GPU on `<canvas>` , based on OpenGL.\n",
                  "descriptionClean": "A low-level API for rendering 2D and 3D graphics with the GPU on <canvas> , based on OpenGL.",
                  "descriptionHtml": "A low-level API for rendering 2D and 3D graphics with the GPU on <code>&lt;canvas&gt;</code> , based on OpenGL.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial/Getting_started_with_WebGL",
                    "title": "Getting started with WebGL",
                    "summary": "WebGL enables web content to use an API based on OpenGL ES 2.0 to perform 2D and 3D rendering in an HTML canvas in browsers that support it without the use of plug-ins."
                  },
                  "example": {
                    "language": "js",
                    "code": "const gl = canvas.getContext(\"webgl\");\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> gl = canvas.<span class=\"hljs-title function_\">getContext</span>(<span class=\"hljs-string\">&quot;webgl&quot;</span>);"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.77,
                        "interest": 0.72,
                        "usage": 0.19,
                        "retention": 0.87,
                        "positivity": 0.2,
                        "positivityRelative": 0.73,
                        "appreciation": 0.15
                      },
                      "completion": {
                        "count": 4887,
                        "percentageSurvey": 78.53,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "jpeg_xl",
                "entity": {
                  "name": "JPEG XL",
                  "nameClean": "JPEG XL",
                  "entityType": "feature",
                  "description": "An image format optimized for web environments.\n",
                  "descriptionClean": "An image format optimized for web environments.\n",
                  "caniuse": {
                    "name": "jpegxl",
                    "url": "https://caniuse.com/jpegxl"
                  },
                  "example": {
                    "language": "html",
                    "code": "<img src=\"image.jxl\" />\n",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;image.jxl&quot;</span> /&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.4,
                        "interest": 0.76,
                        "usage": 0.03,
                        "retention": 0.91,
                        "positivity": 0.3,
                        "positivityRelative": 0.84,
                        "appreciation": 0.14
                      },
                      "completion": {
                        "count": 4902,
                        "percentageSurvey": 78.77,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "math_element",
                "entity": {
                  "name": "`<math>` (Inline MathML)",
                  "nameClean": "<math> (Inline MathML)",
                  "nameHtml": "<code>&lt;math&gt;</code> (Inline MathML)",
                  "entityType": "feature",
                  "description": "Display math directly in HTML, using MathML.",
                  "descriptionClean": "Display math directly in HTML, using MathML.",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/MathML/Reference/Element/math",
                    "title": "<math>",
                    "summary": "The <math> MathML element is the top-level MathML element, used to write a single mathematical formula. It can be placed in HTML content where flow content is permitted."
                  },
                  "example": {
                    "language": "html",
                    "code": "<!-- x² + 1 -->\n<math>\n  <msup><mi>x</mi><mn>2</mn></msup>\n  <mo>+</mo><mn>1</mn>\n</math>",
                    "codeHighlighted": "<span class=\"hljs-comment\">&lt;!-- x² + 1 --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">math</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">msup</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mi</span>&gt;</span>x<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mi</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mn</span>&gt;</span>2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mn</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">msup</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mo</span>&gt;</span>+<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mo</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mn</span>&gt;</span>1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mn</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">math</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.43,
                        "interest": 0.59,
                        "usage": 0.08,
                        "retention": 0.84,
                        "positivity": 0.24,
                        "positivityRelative": 0.75,
                        "appreciation": 0.25
                      },
                      "completion": {
                        "count": 4735,
                        "percentageSurvey": 76.09,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "mapviewer_element",
                "entity": {
                  "name": "`<mapviewer>` (Inline MapML)",
                  "nameClean": "<mapviewer> (Inline MapML)",
                  "nameHtml": "<code>&lt;mapviewer&gt;</code> (Inline MapML)",
                  "entityType": "feature",
                  "description": "Embed interactive maps in HTML.\n",
                  "descriptionClean": "Embed interactive maps in HTML.\n",
                  "example": {
                    "language": "html",
                    "code": "<mapviewer controls width=\"600\" height=\"400\">\n  <maplayer src=\"osm.mapml\"></maplayer>\n</mapviewer>\n",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mapviewer</span> <span class=\"hljs-attr\">controls</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">&quot;600&quot;</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">&quot;400&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maplayer</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;osm.mapml&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maplayer</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mapviewer</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.08,
                        "interest": 0.75,
                        "usage": 0,
                        "retention": 0.94,
                        "positivity": 0.36,
                        "positivityRelative": 0.9,
                        "appreciation": 0.19
                      },
                      "completion": {
                        "count": 4729,
                        "percentageSurvey": 75.99,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "content_security_policy",
                "entity": {
                  "name": "Content-Security Policy (CSP)",
                  "nameClean": "Content-Security Policy (CSP)",
                  "entityType": "feature",
                  "description": "A set of directives from a website to a browser, that helps to detect and mitigate XSS attacks.\n",
                  "descriptionClean": "A set of directives from a website to a browser, that helps to detect and mitigate XSS attacks.\n",
                  "caniuse": {
                    "name": "contentsecuritypolicy2",
                    "url": "https://caniuse.com/contentsecuritypolicy2"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CSP",
                    "title": "Content Security Policy (CSP)",
                    "summary": "Content Security Policy (CSP) is a feature that helps to prevent or minimize the risk of certain types of security threats. It consists of a series of instructions from a website to a browser, which instruct the browser to place restrictions on the things that the code comprising the site is allowed to do."
                  },
                  "example": {
                    "language": "http",
                    "code": "Content-Security-Policy: script-src 'self';\n",
                    "codeHighlighted": "<span class=\"hljs-attribute\">Content-Security-Policy</span><span class=\"hljs-punctuation\">: </span>script-src &#x27;self&#x27;;"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.65,
                        "interest": 0.89,
                        "usage": 0.39,
                        "retention": 0.71,
                        "positivity": 0.3,
                        "positivityRelative": 0.82,
                        "appreciation": -0.18
                      },
                      "completion": {
                        "count": 14470,
                        "percentageSurvey": 69.22,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.7,
                        "interest": 0.85,
                        "usage": 0.44,
                        "retention": 0.62,
                        "positivity": 0.27,
                        "positivityRelative": 0.74,
                        "appreciation": -0.24
                      },
                      "completion": {
                        "count": 4284,
                        "percentageSurvey": 79.32,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.79,
                        "interest": 0.83,
                        "usage": 0.54,
                        "retention": 0.63,
                        "positivity": 0.25,
                        "positivityRelative": 0.73,
                        "appreciation": -0.2
                      },
                      "completion": {
                        "count": 4728,
                        "percentageSurvey": 75.98,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "sanitizer_api",
                "entity": {
                  "name": "Sanitizer API",
                  "nameClean": "Sanitizer API",
                  "entityType": "feature",
                  "description": "`element.setHTML()` and `Document.parseHTML()`. API to prevent XSS attacks by sanitizing untrusted strings of HTML.\n",
                  "descriptionClean": "element.setHTML() and Document.parseHTML(). API to prevent XSS attacks by sanitizing untrusted strings of HTML.",
                  "descriptionHtml": "<code>element.setHTML()</code> and <code>Document.parseHTML()</code>. API to prevent XSS attacks by sanitizing untrusted strings of HTML.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTML_Sanitizer_API",
                    "title": "HTML Sanitizer API",
                    "summary": "The HTML Sanitizer API allows developers to take strings of HTML and filter out unwanted elements, attributes, and other HTML entities when they are inserted into the DOM or a shadow DOM."
                  },
                  "example": {
                    "language": "js",
                    "code": "greeting.setHTML('Hello ' + nameInput.value);\n",
                    "codeHighlighted": "greeting.<span class=\"hljs-title function_\">setHTML</span>(<span class=\"hljs-string\">&#x27;Hello &#x27;</span> + nameInput.<span class=\"hljs-property\">value</span>);"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.32,
                        "interest": 0.95,
                        "usage": 0.1,
                        "retention": 0.97,
                        "positivity": 0.43,
                        "positivityRelative": 0.96,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 4724,
                        "percentageSurvey": 75.91,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "hidden_until_found",
                "entity": {
                  "name": "`hidden=\"until-found\"`\n",
                  "nameClean": "hidden=\"until-found\"",
                  "nameHtml": "<code>hidden=\"until-found\"</code>\n",
                  "entityType": "feature",
                  "description": "Hide an element until it is found (e.g. via a find-in-page search or when targeted by the URL hash).\n",
                  "descriptionClean": "Hide an element until it is found (e.g. via a find-in-page search or when targeted by the URL hash).\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Global_attributes/hidden",
                    "title": "HTML hidden global attribute",
                    "summary": "The hidden global attribute is an enumerated attribute indicating that the browser should not render the contents of the element. For example, it can be used to hide elements of the page that can't be used until the login process has been completed."
                  },
                  "example": {
                    "language": "html",
                    "code": "<section class=\"drawer\" aria-expanded=\"false\" hidden=\"until-found\">\n  <!-- content -->\n</section>\n",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">section</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;drawer&quot;</span> <span class=\"hljs-attr\">aria-expanded</span>=<span class=\"hljs-string\">&quot;false&quot;</span> <span class=\"hljs-attr\">hidden</span>=<span class=\"hljs-string\">&quot;until-found&quot;</span>&gt;</span>\n  <span class=\"hljs-comment\">&lt;!-- content --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">section</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.2,
                        "interest": 0.94,
                        "usage": 0.02,
                        "retention": 0.92,
                        "positivity": 0.37,
                        "positivityRelative": 0.91,
                        "appreciation": -0.03
                      },
                      "completion": {
                        "count": 4713,
                        "percentageSurvey": 75.74,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "intl_segmenter",
                "entity": {
                  "name": "`Intl.Segmenter` API\n",
                  "nameClean": "Intl.Segmenter API",
                  "nameHtml": "<code>Intl.Segmenter</code> API\n",
                  "entityType": "feature",
                  "description": "Language-sensitive segmentation of text into graphemes, words or sentences.\n",
                  "descriptionClean": "Language-sensitive segmentation of text into graphemes, words or sentences.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter",
                    "title": "Intl.Segmenter",
                    "summary": "The Intl.Segmenter object enables locale-sensitive text segmentation, enabling you to get meaningful items (graphemes, words or sentences) from a string."
                  },
                  "example": {
                    "language": "js",
                    "code": "const segmenterFr = new Intl.Segmenter(\"fr\", { granularity: \"word\" });\nconst string1 = \"Que ma joie demeure\";\n\nconst iterator1 = segmenterFr.segment(string1)[Symbol.iterator]();\n\nconsole.log(iterator1.next().value.segment);\n// Expected output: 'Que'\n\nconsole.log(iterator1.next().value.segment);\n// Expected output: ' '\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> segmenterFr = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Intl</span>.<span class=\"hljs-title class_\">Segmenter</span>(<span class=\"hljs-string\">&quot;fr&quot;</span>, { <span class=\"hljs-attr\">granularity</span>: <span class=\"hljs-string\">&quot;word&quot;</span> });\n<span class=\"hljs-keyword\">const</span> string1 = <span class=\"hljs-string\">&quot;Que ma joie demeure&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> iterator1 = segmenterFr.<span class=\"hljs-title function_\">segment</span>(string1)[<span class=\"hljs-title class_\">Symbol</span>.<span class=\"hljs-property\">iterator</span>]();\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(iterator1.<span class=\"hljs-title function_\">next</span>().<span class=\"hljs-property\">value</span>.<span class=\"hljs-property\">segment</span>);\n<span class=\"hljs-comment\">// Expected output: &#x27;Que&#x27;</span>\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(iterator1.<span class=\"hljs-title function_\">next</span>().<span class=\"hljs-property\">value</span>.<span class=\"hljs-property\">segment</span>);\n<span class=\"hljs-comment\">// Expected output: &#x27; &#x27;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.14,
                        "interest": 0.92,
                        "usage": 0.03,
                        "retention": 0.88,
                        "positivity": 0.28,
                        "positivityRelative": 0.81,
                        "appreciation": -0.05
                      },
                      "completion": {
                        "count": 4255,
                        "percentageSurvey": 78.78,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.17,
                        "interest": 0.91,
                        "usage": 0.04,
                        "retention": 0.87,
                        "positivity": 0.25,
                        "positivityRelative": 0.79,
                        "appreciation": -0.05
                      },
                      "completion": {
                        "count": 4690,
                        "percentageSurvey": 75.37,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "intl_locale",
                "entity": {
                  "name": "`Intl.Locale` API\n",
                  "nameClean": "Intl.Locale API",
                  "nameHtml": "<code>Intl.Locale</code> API\n",
                  "entityType": "feature",
                  "description": "The `Intl.Locale` API parses Unicode locale identifiers, with language, region, and script codes, such as `zh-Hans-CN` or `en-GB`.\n",
                  "descriptionClean": "The Intl.Locale API parses Unicode locale identifiers, with language, region, and script codes, such as zh-Hans-CN or en-GB.",
                  "descriptionHtml": "The <code>Intl.Locale</code> API parses Unicode locale identifiers, with language, region, and script codes, such as <code>zh-Hans-CN</code> or <code>en-GB</code>.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale",
                    "title": "Intl.Locale",
                    "summary": "The Intl.Locale object is a standard built-in property of the Intl object that represents a Unicode locale identifier."
                  },
                  "example": {
                    "language": "js",
                    "code": "const us = new Intl.Locale(\"en-US\");\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> us = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Intl</span>.<span class=\"hljs-title class_\">Locale</span>(<span class=\"hljs-string\">&quot;en-US&quot;</span>);"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.57,
                        "interest": 0.93,
                        "usage": 0.29,
                        "retention": 0.96,
                        "positivity": 0.28,
                        "positivityRelative": 0.89,
                        "appreciation": 0.02
                      },
                      "completion": {
                        "count": 4695,
                        "percentageSurvey": 75.45,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "html_modules",
                "entity": {
                  "name": "HTML Modules",
                  "nameClean": "HTML Modules",
                  "entityType": "feature",
                  "description": "Import HTML files via JS imports and access their elements and JS exports.\n",
                  "descriptionClean": "Import HTML files via JS imports and access their elements and JS exports.\n",
                  "example": {
                    "language": "html",
                    "code": "<script type=\"module\">\n\timport { TabList } from \"./tablist.html\" with { type: 'html' };\n\tcustomElements.define(\"tab-list\", TabList);\n</script>",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;module&quot;</span>&gt;</span><span class=\"language-javascript\">\n\t<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">TabList</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./tablist.html&quot;</span> <span class=\"hljs-keyword\">with</span> { <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;html&#x27;</span> };\n\tcustomElements.<span class=\"hljs-title function_\">define</span>(<span class=\"hljs-string\">&quot;tab-list&quot;</span>, <span class=\"hljs-title class_\">TabList</span>);\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.33,
                        "interest": 0.9,
                        "usage": 0.04,
                        "retention": 0.91,
                        "positivity": 0.3,
                        "positivityRelative": 0.89,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 13385,
                        "percentageSurvey": 64.03,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.43,
                        "interest": 0.9,
                        "usage": 0.18,
                        "retention": 0.91,
                        "positivity": 0.34,
                        "positivityRelative": 0.9,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 3997,
                        "percentageSurvey": 74,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.48,
                        "interest": 0.88,
                        "usage": 0.19,
                        "retention": 0.92,
                        "positivity": 0.37,
                        "positivityRelative": 0.9,
                        "appreciation": 0.04
                      },
                      "completion": {
                        "count": 4715,
                        "percentageSurvey": 75.77,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "template_element",
                "entity": {
                  "name": "`<template>`",
                  "nameClean": "<template>",
                  "nameHtml": "<code>&lt;template&gt;</code>",
                  "entityType": "feature",
                  "description": "A mechanism for holding HTML that is not to be rendered immediately but may be utilized later via JS.",
                  "descriptionClean": "A mechanism for holding HTML that is not to be rendered immediately but may be utilized later via JS.",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/template",
                    "title": "<template>: The Content Template element",
                    "summary": "The <template> HTML element serves as a mechanism for holding HTML fragments, which can either be used later via JavaScript or generated immediately into shadow DOM."
                  },
                  "example": {
                    "language": "html",
                    "code": "<template id=\"counter\">\n\t<div class=\"counter\">Clicked {{ times }} times</div>\n</template>",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;counter&quot;</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;counter&quot;</span>&gt;</span>Clicked {{ times }} times<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.66,
                        "interest": 0.81,
                        "usage": 0.37,
                        "retention": 0.89,
                        "positivity": 0.33,
                        "positivityRelative": 0.87,
                        "appreciation": 0.08
                      },
                      "completion": {
                        "count": 13574,
                        "percentageSurvey": 64.94,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.75,
                        "interest": 0.8,
                        "usage": 0.45,
                        "retention": 0.89,
                        "positivity": 0.35,
                        "positivityRelative": 0.86,
                        "appreciation": 0.08
                      },
                      "completion": {
                        "count": 4050,
                        "percentageSurvey": 74.99,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.76,
                        "interest": 0.86,
                        "usage": 0.48,
                        "retention": 0.91,
                        "positivity": 0.34,
                        "positivityRelative": 0.9,
                        "appreciation": 0.05
                      },
                      "completion": {
                        "count": 4726,
                        "percentageSurvey": 75.94,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "lazy_loading",
                "entity": {
                  "name": "`loading=\"lazy\"`\n",
                  "nameClean": "loading=\"lazy\"",
                  "nameHtml": "<code>loading=\"lazy\"</code>\n",
                  "entityType": "feature",
                  "description": "Load certain resources only when needed.",
                  "descriptionClean": "Load certain resources only when needed.",
                  "caniuse": {
                    "name": "loading-lazy-attr",
                    "url": "https://caniuse.com/loading-lazy-attr"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/Performance/Guides/Lazy_loading",
                    "title": "Lazy loading",
                    "summary": "Lazy loading is a strategy to identify resources as non-blocking (non-critical) and load these only when needed. It's a way to shorten the length of the critical rendering path, which translates into reduced page load times."
                  },
                  "example": {
                    "language": "html",
                    "code": "<img src=\"picture.jpg\" loading=\"lazy\" />\n<iframe src=\"supplementary.html\" loading=\"lazy\"></iframe>",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;picture.jpg&quot;</span> <span class=\"hljs-attr\">loading</span>=<span class=\"hljs-string\">&quot;lazy&quot;</span> /&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">iframe</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;supplementary.html&quot;</span> <span class=\"hljs-attr\">loading</span>=<span class=\"hljs-string\">&quot;lazy&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">iframe</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.88,
                        "interest": 0.95,
                        "usage": 0.58,
                        "retention": 0.96,
                        "positivity": 0.44,
                        "positivityRelative": 0.96,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 14556,
                        "percentageSurvey": 69.64,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.9,
                        "interest": 0.93,
                        "usage": 0.64,
                        "retention": 0.95,
                        "positivity": 0.43,
                        "positivityRelative": 0.95,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 4293,
                        "percentageSurvey": 79.49,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.93,
                        "interest": 0.93,
                        "usage": 0.71,
                        "retention": 0.95,
                        "positivity": 0.38,
                        "positivityRelative": 0.95,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 4636,
                        "percentageSurvey": 74.5,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "respimg_attributes",
                "entity": {
                  "name": "`srcset` and `sizes` attributes",
                  "nameClean": "srcset and sizes attributes",
                  "nameHtml": "<code>srcset</code> and <code>sizes</code> attributes",
                  "entityType": "feature",
                  "description": "Attributes that allow providing several source images with hints to help the browser pick the right one.",
                  "descriptionClean": "Attributes that allow providing several source images with hints to help the browser pick the right one.",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/img",
                    "title": "<img>: The Image Embed element",
                    "summary": "The <img> HTML element embeds an image into the document."
                  },
                  "example": {
                    "language": "html",
                    "code": "<img\n  srcset=\"fairy-med.jpg 480w, fairy-large.jpg 800w\"\n  sizes=\"(max-width: 600px) 480px, 800px\"\n  src=\"fairy-large.jpg\"\n  alt=\"Elva dressed as a fairy\" />",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span>\n  <span class=\"hljs-attr\">srcset</span>=<span class=\"hljs-string\">&quot;fairy-med.jpg 480w, fairy-large.jpg 800w&quot;</span>\n  <span class=\"hljs-attr\">sizes</span>=<span class=\"hljs-string\">&quot;(max-width: 600px) 480px, 800px&quot;</span>\n  <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;fairy-large.jpg&quot;</span>\n  <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;Elva dressed as a fairy&quot;</span> /&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.84,
                        "interest": 0.89,
                        "usage": 0.53,
                        "retention": 0.82,
                        "positivity": 0.36,
                        "positivityRelative": 0.86,
                        "appreciation": -0.07
                      },
                      "completion": {
                        "count": 14526,
                        "percentageSurvey": 69.49,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.89,
                        "interest": 0.85,
                        "usage": 0.62,
                        "retention": 0.78,
                        "positivity": 0.34,
                        "positivityRelative": 0.81,
                        "appreciation": -0.07
                      },
                      "completion": {
                        "count": 4297,
                        "percentageSurvey": 79.56,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.9,
                        "interest": 0.84,
                        "usage": 0.68,
                        "retention": 0.79,
                        "positivity": 0.29,
                        "positivityRelative": 0.81,
                        "appreciation": -0.05
                      },
                      "completion": {
                        "count": 4627,
                        "percentageSurvey": 74.35,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "img_sizes_auto",
                "entity": {
                  "name": "`<img sizes=\"auto\" loading=\"lazy\">`\n",
                  "nameClean": "<img sizes=\"auto\" loading=\"lazy\">",
                  "nameHtml": "<code>&lt;img sizes=\"auto\" loading=\"lazy\"&gt;</code>\n",
                  "entityType": "feature",
                  "description": "The `sizes=\"auto\"` attribute reserves layout space for an image before it loads, avoiding some layout shifts.\n",
                  "descriptionClean": "The sizes=\"auto\" attribute reserves layout space for an image before it loads, avoiding some layout shifts.",
                  "descriptionHtml": "The <code>sizes=\"auto\"</code> attribute reserves layout space for an image before it loads, avoiding some layout shifts.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/img",
                    "title": "<img>: The Image Embed element",
                    "summary": "The <img> HTML element embeds an image into the document."
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.4,
                        "interest": 0.95,
                        "usage": 0.19,
                        "retention": 0.9,
                        "positivity": 0.4,
                        "positivityRelative": 0.96,
                        "appreciation": -0.05
                      },
                      "completion": {
                        "count": 4624,
                        "percentageSurvey": 74.3,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "fetchpriority_attribute",
                "entity": {
                  "name": "`fetchpriority` attribute\n",
                  "nameClean": "fetchpriority attribute",
                  "nameHtml": "<code>fetchpriority</code> attribute\n",
                  "entityType": "feature",
                  "description": "Allows specifying a hint to help the browser prioritize fetching various resources.",
                  "descriptionClean": "Allows specifying a hint to help the browser prioritize fetching various resources.",
                  "caniuse": {
                    "name": "mdn-html_elements_script_fetchpriority",
                    "url": "https://caniuse.com/mdn-html_elements_script_fetchpriority"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/fetchPriority",
                    "title": "HTMLImageElement: fetchPriority property",
                    "summary": "The fetchPriority property of the HTMLImageElement interface represents a hint to the browser indicating how it should prioritize fetching a particular image relative to other images.\nIt reflects the fetchpriority attribute of the corresponding <img> element."
                  },
                  "example": {
                    "language": "html",
                    "code": "<img src=\"logo.svg\" fetchpriority=\"high\" />",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;logo.svg&quot;</span> <span class=\"hljs-attr\">fetchpriority</span>=<span class=\"hljs-string\">&quot;high&quot;</span> /&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.35,
                        "interest": 0.91,
                        "usage": 0.1,
                        "retention": 0.96,
                        "positivity": 0.37,
                        "positivityRelative": 0.93,
                        "appreciation": 0.05
                      },
                      "completion": {
                        "count": 14455,
                        "percentageSurvey": 69.15,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.46,
                        "interest": 0.9,
                        "usage": 0.17,
                        "retention": 0.93,
                        "positivity": 0.36,
                        "positivityRelative": 0.93,
                        "appreciation": 0.03
                      },
                      "completion": {
                        "count": 4279,
                        "percentageSurvey": 79.23,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.56,
                        "interest": 0.9,
                        "usage": 0.25,
                        "retention": 0.96,
                        "positivity": 0.33,
                        "positivityRelative": 0.93,
                        "appreciation": 0.05
                      },
                      "completion": {
                        "count": 4613,
                        "percentageSurvey": 74.13,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "blocking_render",
                "entity": {
                  "name": "`blocking=\"render\"`",
                  "nameClean": "blocking=\"render\"",
                  "nameHtml": "<code>blocking=\"render\"</code>",
                  "entityType": "feature",
                  "description": "Block rendering (but not parsing) until certain resources have been loaded. Available on `<link>`, `<script>` and `<style>`.\n",
                  "descriptionClean": "Block rendering (but not parsing) until certain resources have been loaded. Available on <link>, <script> and <style>.",
                  "descriptionHtml": "Block rendering (but not parsing) until certain resources have been loaded. Available on <code>&lt;link&gt;</code>, <code>&lt;script&gt;</code> and <code>&lt;style&gt;</code>.\n",
                  "caniuse": {
                    "name": "mdn-html_elements_link_blocking",
                    "url": "https://caniuse.com/mdn-html_elements_link_blocking"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/script",
                    "title": "<script>: The Script element",
                    "summary": "The <script> HTML element is used to embed executable code or data; this is typically used to embed or refer to JavaScript code. The <script> element can also be used with other languages, such as WebGL's GLSL shader programming language and JSON."
                  },
                  "example": {
                    "language": "html",
                    "code": "<script blocking=\"render\" async src=\"async-script.js\"></script>",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">blocking</span>=<span class=\"hljs-string\">&quot;render&quot;</span> <span class=\"hljs-attr\">async</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;async-script.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.2,
                        "interest": 0.83,
                        "usage": 0.03,
                        "retention": 0.85,
                        "positivity": 0.32,
                        "positivityRelative": 0.86,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 14438,
                        "percentageSurvey": 69.07,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.31,
                        "interest": 0.78,
                        "usage": 0.05,
                        "retention": 0.89,
                        "positivity": 0.31,
                        "positivityRelative": 0.85,
                        "appreciation": 0.1
                      },
                      "completion": {
                        "count": 4278,
                        "percentageSurvey": 79.21,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.31,
                        "interest": 0.86,
                        "usage": 0.06,
                        "retention": 0.92,
                        "positivity": 0.3,
                        "positivityRelative": 0.9,
                        "appreciation": 0.05
                      },
                      "completion": {
                        "count": 4607,
                        "percentageSurvey": 74.03,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "link_rel_expect",
                "entity": {
                  "name": "`<link rel=\"expect\">`\n",
                  "nameClean": "<link rel=\"expect\">",
                  "nameHtml": "<code>&lt;link rel=\"expect\"&gt;</code>\n",
                  "entityType": "feature",
                  "description": "Block rendering until the element referenced by the `href` value is connected and fully parsed.\n",
                  "descriptionClean": "Block rendering until the element referenced by the href value is connected and fully parsed.",
                  "descriptionHtml": "Block rendering until the element referenced by the <code>href</code> value is connected and fully parsed.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Attributes/rel",
                    "title": "HTML attribute: rel",
                    "summary": "The rel attribute defines the relationship between a linked resource and the current document. Valid on <link>, <a>, <area>, and <form>, the supported values depend on the element on which the attribute is found."
                  },
                  "example": {
                    "language": "html",
                    "code": "<link rel=\"expect\" href=\"#hero\" blocking=\"render\">\n",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;expect&quot;</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;#hero&quot;</span> <span class=\"hljs-attr\">blocking</span>=<span class=\"hljs-string\">&quot;render&quot;</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.1,
                        "interest": 0.92,
                        "usage": 0.02,
                        "retention": 0.93,
                        "positivity": 0.3,
                        "positivityRelative": 0.89,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 4592,
                        "percentageSurvey": 73.79,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "speculation_rules",
                "entity": {
                  "name": "Speculation Rules",
                  "nameClean": "Speculation Rules",
                  "entityType": "feature",
                  "description": "Hints for the browser to proactively download pages in the background to improve performance.\n",
                  "descriptionClean": "Hints for the browser to proactively download pages in the background to improve performance.\n",
                  "example": {
                    "language": "html",
                    "code": "<script type=\"speculationrules\">\n  {\n    \"prefetch\": [{ \"urls\": [\"/about\", \"/pricing\"] }],\n    \"prerender\": [\n      {\n        \"where\": {\n          \"href_matches\": \"^/product/\\\\d+$\",\n          \"selector_matches\": \"a.nav-link\"\n        }\n      }\n    ]\n  }\n</script>\n",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;speculationrules&quot;</span>&gt;</span><span class=\"language-javascript\">\n  {\n    <span class=\"hljs-string\">&quot;prefetch&quot;</span>: [{ <span class=\"hljs-string\">&quot;urls&quot;</span>: [<span class=\"hljs-string\">&quot;/about&quot;</span>, <span class=\"hljs-string\">&quot;/pricing&quot;</span>] }],\n    <span class=\"hljs-string\">&quot;prerender&quot;</span>: [\n      {\n        <span class=\"hljs-string\">&quot;where&quot;</span>: {\n          <span class=\"hljs-string\">&quot;href_matches&quot;</span>: <span class=\"hljs-string\">&quot;^/product/\\\\d+$&quot;</span>,\n          <span class=\"hljs-string\">&quot;selector_matches&quot;</span>: <span class=\"hljs-string\">&quot;a.nav-link&quot;</span>\n        }\n      }\n    ]\n  }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.26,
                        "interest": 0.89,
                        "usage": 0.04,
                        "retention": 0.84,
                        "positivity": 0.34,
                        "positivityRelative": 0.88,
                        "appreciation": -0.05
                      },
                      "completion": {
                        "count": 4610,
                        "percentageSurvey": 74.08,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "custom_elements_using",
                "entity": {
                  "name": "Using Custom Elements",
                  "nameClean": "Using Custom Elements",
                  "entityType": "feature",
                  "description": "Using custom elements, that you or someone else defined.",
                  "descriptionClean": "Using custom elements, that you or someone else defined.",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_custom_elements",
                    "title": "Using custom elements",
                    "summary": "One of the key features of web components is the ability to create custom elements: that is, HTML elements whose behavior is defined by the web developer, that extend the set of elements available in the browser."
                  },
                  "example": {
                    "language": "html",
                    "code": "<my-switch start=\"On\" end=\"Off\">Wi-Fi</my-switch>\n",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">my-switch</span> <span class=\"hljs-attr\">start</span>=<span class=\"hljs-string\">&quot;On&quot;</span> <span class=\"hljs-attr\">end</span>=<span class=\"hljs-string\">&quot;Off&quot;</span>&gt;</span>Wi-Fi<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">my-switch</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.79,
                        "interest": 0.77,
                        "usage": 0.42,
                        "retention": 0.86,
                        "positivity": 0.31,
                        "positivityRelative": 0.82,
                        "appreciation": 0.08
                      },
                      "completion": {
                        "count": 13552,
                        "percentageSurvey": 64.83,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.86,
                        "interest": 0.75,
                        "usage": 0.51,
                        "retention": 0.87,
                        "positivity": 0.33,
                        "positivityRelative": 0.82,
                        "appreciation": 0.12
                      },
                      "completion": {
                        "count": 4044,
                        "percentageSurvey": 74.88,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.89,
                        "interest": 0.7,
                        "usage": 0.53,
                        "retention": 0.87,
                        "positivity": 0.31,
                        "positivityRelative": 0.81,
                        "appreciation": 0.16
                      },
                      "completion": {
                        "count": 4457,
                        "percentageSurvey": 71.62,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "custom_elements_defining",
                "entity": {
                  "name": "Defining Custom Elements",
                  "nameClean": "Defining Custom Elements",
                  "entityType": "feature",
                  "description": "Defining custom elements for use by others.",
                  "descriptionClean": "Defining custom elements for use by others.",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/CustomElementRegistry/define",
                    "title": "CustomElementRegistry: define() method",
                    "summary": "The define() method of the CustomElementRegistry interface adds a definition for a custom element to the custom element registry, mapping its name to the constructor which will be used to create it."
                  },
                  "example": {
                    "language": "js",
                    "code": "class MyElement extends HTMLElement { … }\ncustomElements.define(\"my-element\", MyElement);",
                    "codeHighlighted": "<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MyElement</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">HTMLElement</span> { … }\ncustomElements.<span class=\"hljs-title function_\">define</span>(<span class=\"hljs-string\">&quot;my-element&quot;</span>, <span class=\"hljs-title class_\">MyElement</span>);"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.72,
                        "interest": 0.75,
                        "usage": 0.32,
                        "retention": 0.79,
                        "positivity": 0.27,
                        "positivityRelative": 0.78,
                        "appreciation": 0.03
                      },
                      "completion": {
                        "count": 13514,
                        "percentageSurvey": 64.65,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.8,
                        "interest": 0.71,
                        "usage": 0.41,
                        "retention": 0.8,
                        "positivity": 0.29,
                        "positivityRelative": 0.77,
                        "appreciation": 0.09
                      },
                      "completion": {
                        "count": 4033,
                        "percentageSurvey": 74.67,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.85,
                        "interest": 0.68,
                        "usage": 0.47,
                        "retention": 0.8,
                        "positivity": 0.26,
                        "positivityRelative": 0.76,
                        "appreciation": 0.12
                      },
                      "completion": {
                        "count": 4445,
                        "percentageSurvey": 71.43,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "declarative_custom_elements",
                "entity": {
                  "name": "Declarative Custom Elements",
                  "nameClean": "Declarative Custom Elements",
                  "entityType": "feature",
                  "description": "Create web components declaratively through HTML, with or without JS.\n",
                  "descriptionClean": "Create web components declaratively through HTML, with or without JS.\n",
                  "example": {
                    "language": "html",
                    "code": "<definition name=\"progress-ring\">\n  <template shadowmode=\"open\">\n    <div id=\"base\" role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-valuenow=\"{{root.attributes.percentage.value}}\">\n      <slot>{{ root.attributes.percentage.value }}%</slot>\n    </div>\n    <style>#base { /* ... */ }</style>\n  </template>\n</definition>\n\n<progress-ring value=\"50\"></progress-ring>\n",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">definition</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;progress-ring&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">shadowmode</span>=<span class=\"hljs-string\">&quot;open&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;base&quot;</span> <span class=\"hljs-attr\">role</span>=<span class=\"hljs-string\">&quot;progressbar&quot;</span> <span class=\"hljs-attr\">aria-valuemin</span>=<span class=\"hljs-string\">&quot;0&quot;</span> <span class=\"hljs-attr\">aria-valuemax</span>=<span class=\"hljs-string\">&quot;100&quot;</span> <span class=\"hljs-attr\">aria-valuenow</span>=<span class=\"hljs-string\">&quot;{{root.attributes.percentage.value}}&quot;</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">slot</span>&gt;</span>{{ root.attributes.percentage.value }}%<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">slot</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"language-css\"><span class=\"hljs-selector-id\">#base</span> { <span class=\"hljs-comment\">/* ... */</span> }</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">definition</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">progress-ring</span> <span class=\"hljs-attr\">value</span>=<span class=\"hljs-string\">&quot;50&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">progress-ring</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.39,
                        "interest": 0.79,
                        "usage": 0.09,
                        "retention": 0.78,
                        "positivity": 0.33,
                        "positivityRelative": 0.85,
                        "appreciation": -0.01
                      },
                      "completion": {
                        "count": 4425,
                        "percentageSurvey": 71.11,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "scoped_element_registries",
                "entity": {
                  "name": "Scoped Custom Element Registries",
                  "nameClean": "Scoped Custom Element Registries",
                  "entityType": "feature",
                  "description": "Allow multiple custom element definitions for a single tag name to exist within a page.",
                  "descriptionClean": "Allow multiple custom element definitions for a single tag name to exist within a page.",
                  "example": {
                    "language": "js",
                    "code": "const registry = new CustomElementRegistry();\nregistry.define('sub-element', SubElement);",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> registry = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">CustomElementRegistry</span>();\nregistry.<span class=\"hljs-title function_\">define</span>(<span class=\"hljs-string\">&#x27;sub-element&#x27;</span>, <span class=\"hljs-title class_\">SubElement</span>);"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.14,
                        "interest": 0.71,
                        "usage": 0.01,
                        "retention": 0.89,
                        "positivity": 0.19,
                        "positivityRelative": 0.71,
                        "appreciation": 0.17
                      },
                      "completion": {
                        "count": 13418,
                        "percentageSurvey": 64.19,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.25,
                        "interest": 0.69,
                        "usage": 0.06,
                        "retention": 0.78,
                        "positivity": 0.23,
                        "positivityRelative": 0.73,
                        "appreciation": 0.09
                      },
                      "completion": {
                        "count": 4019,
                        "percentageSurvey": 74.41,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.22,
                        "interest": 0.69,
                        "usage": 0.04,
                        "retention": 0.79,
                        "positivity": 0.21,
                        "positivityRelative": 0.73,
                        "appreciation": 0.09
                      },
                      "completion": {
                        "count": 4402,
                        "percentageSurvey": 70.74,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "shadow_dom",
                "entity": {
                  "name": "Shadow DOM",
                  "nameClean": "Shadow DOM",
                  "entityType": "feature",
                  "description": "Encapsulate elements not visible from the outside, and style them with CSS not affecting the rest of the page.",
                  "descriptionClean": "Encapsulate elements not visible from the outside, and style them with CSS not affecting the rest of the page.",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_shadow_DOM",
                    "title": "Using shadow DOM",
                    "summary": "An important aspect of custom elements is encapsulation, because a custom element, by definition, is a piece of reusable functionality: it might be dropped into any web page and be expected to work. So it's important that code running in the page should not be able to accidentally break a custom element by modifying its internal implementation. Shadow DOM enables you to attach a DOM tree to an element, and have the internals of this tree hidden from JavaScript and CSS running in the page."
                  },
                  "example": {
                    "language": "js",
                    "code": "this.shadowRoot = this.attachShadow({mode: \"open\"});",
                    "codeHighlighted": "<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">shadowRoot</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">attachShadow</span>({<span class=\"hljs-attr\">mode</span>: <span class=\"hljs-string\">&quot;open&quot;</span>});"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.72,
                        "interest": 0.7,
                        "usage": 0.27,
                        "retention": 0.68,
                        "positivity": 0.22,
                        "positivityRelative": 0.7,
                        "appreciation": -0.02
                      },
                      "completion": {
                        "count": 13488,
                        "percentageSurvey": 64.53,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.79,
                        "interest": 0.71,
                        "usage": 0.34,
                        "retention": 0.65,
                        "positivity": 0.24,
                        "positivityRelative": 0.69,
                        "appreciation": -0.06
                      },
                      "completion": {
                        "count": 4016,
                        "percentageSurvey": 74.36,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.84,
                        "interest": 0.71,
                        "usage": 0.4,
                        "retention": 0.65,
                        "positivity": 0.22,
                        "positivityRelative": 0.69,
                        "appreciation": -0.06
                      },
                      "completion": {
                        "count": 4437,
                        "percentageSurvey": 71.3,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "declarative_shadow_dom",
                "entity": {
                  "name": "Declarative Shadow DOM",
                  "nameClean": "Declarative Shadow DOM",
                  "entityType": "feature",
                  "description": "Define shadow trees with HTML, such as when server-side-rendering web components.\n",
                  "descriptionClean": "Define shadow trees with HTML, such as when server-side-rendering web components.\n",
                  "caniuse": {
                    "name": "declarative-shadow-dom",
                    "url": "https://caniuse.com/declarative-shadow-dom"
                  },
                  "example": {
                    "language": "html",
                    "code": "<host-element>\n    <template shadowrootmode=\"open\">\n        <!-- Shadow content -->\n    </template>\n</host-element>",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">host-element</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span> <span class=\"hljs-attr\">shadowrootmode</span>=<span class=\"hljs-string\">&quot;open&quot;</span>&gt;</span>\n        <span class=\"hljs-comment\">&lt;!-- Shadow content --&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">host-element</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.35,
                        "interest": 0.72,
                        "usage": 0.07,
                        "retention": 0.72,
                        "positivity": 0.21,
                        "positivityRelative": 0.73,
                        "appreciation": -0.01
                      },
                      "completion": {
                        "count": 13455,
                        "percentageSurvey": 64.37,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.5,
                        "interest": 0.75,
                        "usage": 0.12,
                        "retention": 0.72,
                        "positivity": 0.24,
                        "positivityRelative": 0.75,
                        "appreciation": -0.04
                      },
                      "completion": {
                        "count": 4011,
                        "percentageSurvey": 74.26,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.47,
                        "interest": 0.72,
                        "usage": 0.12,
                        "retention": 0.73,
                        "positivity": 0.22,
                        "positivityRelative": 0.75,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 4404,
                        "percentageSurvey": 70.77,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "slot_attribute",
                "entity": {
                  "name": "`slot` attribute\n",
                  "nameClean": "slot attribute",
                  "nameHtml": "<code>slot</code> attribute\n",
                  "entityType": "feature",
                  "description": "Replacing predefined parts of a component UI with your own elements.\n",
                  "descriptionClean": "Replacing predefined parts of a component UI with your own elements.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Global_attributes/slot",
                    "title": "HTML slot global attribute",
                    "summary": "The slot global attribute assigns a slot in a shadow DOM shadow tree to an element: An element with a slot attribute is assigned to the slot created by the <slot> element whose name attribute's value matches that slot attribute's value. You can have multiple elements assigned to the same slot by using the same slot name. Elements without a slot attribute are assigned to the unnamed slot, if one exists."
                  },
                  "example": {
                    "language": "html",
                    "code": "<my-switch>\n  Wi-Fi\n  <i slot=\"start\" class=\"icon-on\">On</i>\n  <i slot=\"end\" class=\"icon-off\">Off</i>\n</my-switch>\n",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">my-switch</span>&gt;</span>\n  Wi-Fi\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\">&quot;start&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;icon-on&quot;</span>&gt;</span>On<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">slot</span>=<span class=\"hljs-string\">&quot;end&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;icon-off&quot;</span>&gt;</span>Off<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">i</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">my-switch</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.49,
                        "interest": 0.83,
                        "usage": 0.22,
                        "retention": 0.91,
                        "positivity": 0.23,
                        "positivityRelative": 0.82,
                        "appreciation": 0.07
                      },
                      "completion": {
                        "count": 13404,
                        "percentageSurvey": 64.12,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.6,
                        "interest": 0.81,
                        "usage": 0.29,
                        "retention": 0.9,
                        "positivity": 0.26,
                        "positivityRelative": 0.83,
                        "appreciation": 0.09
                      },
                      "completion": {
                        "count": 4001,
                        "percentageSurvey": 74.08,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.62,
                        "interest": 0.81,
                        "usage": 0.31,
                        "retention": 0.91,
                        "positivity": 0.27,
                        "positivityRelative": 0.85,
                        "appreciation": 0.09
                      },
                      "completion": {
                        "count": 4430,
                        "percentageSurvey": 71.19,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "imperative_slot",
                "entity": {
                  "name": "`slotAssignment: \"manual\"` (Imperative slot assignment)",
                  "nameClean": "slotAssignment: \"manual\" (Imperative slot assignment)",
                  "nameHtml": "<code>slotAssignment: \"manual\"</code> (Imperative slot assignment)",
                  "entityType": "feature",
                  "description": "A way to assign elements to slots manually via JS, so that slot assignment does not have to be managed by the component consumers.",
                  "descriptionClean": "A way to assign elements to slots manually via JS, so that slot assignment does not have to be managed by the component consumers.",
                  "caniuse": {
                    "name": "mdn-api_shadowroot_slotassignment",
                    "url": "https://caniuse.com/mdn-api_shadowroot_slotassignment"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assign",
                    "title": "HTMLSlotElement: assign() method",
                    "summary": "The assign() method of the HTMLSlotElement interface sets the slot's manually assigned nodes to an ordered set of slottables. The manually assigned nodes set is initially empty until nodes are assigned using assign()."
                  },
                  "example": {
                    "language": "js",
                    "code": "this.attachShadow({mode: \"open\", slotAssignment: \"manual\" });\nlet headerSlot = this.shadowRoot.querySelector(\"slot[name=header]\");\nlet header = this.querySelector(\"header\");\nif (header) headerSlot.assign(header);",
                    "codeHighlighted": "<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">attachShadow</span>({<span class=\"hljs-attr\">mode</span>: <span class=\"hljs-string\">&quot;open&quot;</span>, <span class=\"hljs-attr\">slotAssignment</span>: <span class=\"hljs-string\">&quot;manual&quot;</span> });\n<span class=\"hljs-keyword\">let</span> headerSlot = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">shadowRoot</span>.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">&quot;slot[name=header]&quot;</span>);\n<span class=\"hljs-keyword\">let</span> header = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">&quot;header&quot;</span>);\n<span class=\"hljs-keyword\">if</span> (header) headerSlot.<span class=\"hljs-title function_\">assign</span>(header);"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.17,
                        "interest": 0.71,
                        "usage": 0.04,
                        "retention": 0.8,
                        "positivity": 0.17,
                        "positivityRelative": 0.72,
                        "appreciation": 0.08
                      },
                      "completion": {
                        "count": 13351,
                        "percentageSurvey": 63.87,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.25,
                        "interest": 0.71,
                        "usage": 0.07,
                        "retention": 0.79,
                        "positivity": 0.2,
                        "positivityRelative": 0.72,
                        "appreciation": 0.08
                      },
                      "completion": {
                        "count": 3989,
                        "percentageSurvey": 73.86,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.24,
                        "interest": 0.7,
                        "usage": 0.07,
                        "retention": 0.87,
                        "positivity": 0.19,
                        "positivityRelative": 0.76,
                        "appreciation": 0.16
                      },
                      "completion": {
                        "count": 4387,
                        "percentageSurvey": 70.5,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "element_internals",
                "entity": {
                  "name": "`ElementInternals`",
                  "nameClean": "ElementInternals",
                  "nameHtml": "<code>ElementInternals</code>",
                  "entityType": "feature",
                  "description": "Assign hidden semantics to custom elements, facilitating accessibility and allowing them to participate fully in forms.",
                  "descriptionClean": "Assign hidden semantics to custom elements, facilitating accessibility and allowing them to participate fully in forms.",
                  "caniuse": {
                    "name": "mdn-api_elementinternals",
                    "url": "https://caniuse.com/mdn-api_elementinternals"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/ElementInternals",
                    "title": "ElementInternals",
                    "summary": "The ElementInternals interface of the Document Object Model gives web developers a way to allow custom elements to fully participate in HTML forms. It provides utilities for working with these elements in the same way you would work with any standard HTML form element, and also exposes the Accessibility Object Model to the element."
                  },
                  "example": {
                    "language": "js",
                    "code": "this._internals = this.attachInternals();\nthis._internals.role = \"progressbar\";",
                    "codeHighlighted": "<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_internals</span> = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">attachInternals</span>();\n<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">_internals</span>.<span class=\"hljs-property\">role</span> = <span class=\"hljs-string\">&quot;progressbar&quot;</span>;"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.09,
                        "interest": 0.83,
                        "usage": 0.02,
                        "retention": 0.83,
                        "positivity": 0.19,
                        "positivityRelative": 0.77,
                        "appreciation": 0
                      },
                      "completion": {
                        "count": 13317,
                        "percentageSurvey": 63.71,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.15,
                        "interest": 0.84,
                        "usage": 0.04,
                        "retention": 0.73,
                        "positivity": 0.23,
                        "positivityRelative": 0.76,
                        "appreciation": -0.12
                      },
                      "completion": {
                        "count": 3982,
                        "percentageSurvey": 73.73,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.17,
                        "interest": 0.83,
                        "usage": 0.05,
                        "retention": 0.83,
                        "positivity": 0.23,
                        "positivityRelative": 0.8,
                        "appreciation": -0.01
                      },
                      "completion": {
                        "count": 4372,
                        "percentageSurvey": 70.26,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "reference_target_api",
                "entity": {
                  "name": "Reference Target API",
                  "nameClean": "Reference Target API",
                  "entityType": "feature",
                  "description": "A way to “redirect” id references to a component to elements in its shadow DOM (for ARIA, labels, popovers etc).\n",
                  "descriptionClean": "A way to “redirect” id references to a component to elements in its shadow DOM (for ARIA, labels, popovers etc).\n",
                  "example": {
                    "language": "js",
                    "code": "this.attachShadow({ \n  mode: \"open\",\n  referenceTarget: \"real-input\",\n});\nthis.shadowRoot.innerHTML = `<input id=\"real-input\">`;\n",
                    "codeHighlighted": "<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-title function_\">attachShadow</span>({ \n  <span class=\"hljs-attr\">mode</span>: <span class=\"hljs-string\">&quot;open&quot;</span>,\n  <span class=\"hljs-attr\">referenceTarget</span>: <span class=\"hljs-string\">&quot;real-input&quot;</span>,\n});\n<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">shadowRoot</span>.<span class=\"hljs-property\">innerHTML</span> = <span class=\"hljs-string\">`&lt;input id=&quot;real-input&quot;&gt;`</span>;"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.1,
                        "interest": 0.82,
                        "usage": 0.01,
                        "retention": 0.84,
                        "positivity": 0.21,
                        "positivityRelative": 0.77,
                        "appreciation": 0.02
                      },
                      "completion": {
                        "count": 4364,
                        "percentageSurvey": 70.13,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "has_slotted",
                "entity": {
                  "name": "`:has-slotted`\n",
                  "nameClean": ":has-slotted",
                  "nameHtml": "<code>:has-slotted</code>\n",
                  "entityType": "feature",
                  "description": "CSS pseudo-class that allows targeting `<slot>` elements only when they have slotted nodes.\n",
                  "descriptionClean": "CSS pseudo-class that allows targeting <slot> elements only when they have slotted nodes.",
                  "descriptionHtml": "CSS pseudo-class that allows targeting <code>&lt;slot&gt;</code> elements only when they have slotted nodes.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/:has-slotted",
                    "title": ":has-slotted",
                    "summary": "The :has-slotted CSS pseudo-class matches when the content of a <slot> element is not empty or not using the default value (see Using templates and slots for more information)."
                  },
                  "example": {
                    "language": "css",
                    "code": "slot[name=icon]:not(:has-slotted) + .icon-label {\n  display: none;\n}\n",
                    "codeHighlighted": "slot<span class=\"hljs-selector-attr\">[name=icon]</span><span class=\"hljs-selector-pseudo\">:not</span>(<span class=\"hljs-selector-pseudo\">:has</span>-slotted) + <span class=\"hljs-selector-class\">.icon-label</span> {\n  <span class=\"hljs-attribute\">display</span>: none;\n}"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.2,
                        "interest": 0.89,
                        "usage": 0.05,
                        "retention": 0.85,
                        "positivity": 0.2,
                        "positivityRelative": 0.78,
                        "appreciation": -0.04
                      },
                      "completion": {
                        "count": 4366,
                        "percentageSurvey": 70.16,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "landmark_elements",
                "entity": {
                  "name": "Landmark elements",
                  "nameClean": "Landmark elements",
                  "entityType": "feature",
                  "description": "`<main>`, `<nav>`, `<aside>`, `<header>`, `<footer>`, `<section>`",
                  "descriptionClean": "<main>, <nav>, <aside>, <header>, <footer>, <section>",
                  "descriptionHtml": "<code>&lt;main&gt;</code>, <code>&lt;nav&gt;</code>, <code>&lt;aside&gt;</code>, <code>&lt;header&gt;</code>, <code>&lt;footer&gt;</code>, <code>&lt;section&gt;</code>"
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.99,
                        "interest": 0.89,
                        "usage": 0.95,
                        "retention": 0.98,
                        "positivity": 0.44,
                        "positivityRelative": 0.98,
                        "appreciation": 0.09
                      },
                      "completion": {
                        "count": 13190,
                        "percentageSurvey": 63.1,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.99,
                        "interest": 0.81,
                        "usage": 0.96,
                        "retention": 0.98,
                        "positivity": 0.46,
                        "positivityRelative": 0.98,
                        "appreciation": 0.16
                      },
                      "completion": {
                        "count": 3951,
                        "percentageSurvey": 73.15,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.99,
                        "interest": 0.78,
                        "usage": 0.97,
                        "retention": 0.98,
                        "positivity": 0.42,
                        "positivityRelative": 0.98,
                        "appreciation": 0.2
                      },
                      "completion": {
                        "count": 4383,
                        "percentageSurvey": 70.43,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "tabindex_attribute",
                "entity": {
                  "name": "`tabindex` attribute",
                  "nameClean": "tabindex attribute",
                  "nameHtml": "<code>tabindex</code> attribute",
                  "entityType": "feature",
                  "description": "Make HTML elements focusable, allow or prevent them from being sequentially focusable.",
                  "descriptionClean": "Make HTML elements focusable, allow or prevent them from being sequentially focusable.",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Global_attributes/tabindex",
                    "title": "HTML tabindex global attribute",
                    "summary": "The tabindex global attribute allows developers to make HTML elements focusable, allow or prevent them from being sequentially focusable (usually with the Tab key, hence the name) and determine their relative ordering for sequential focus navigation."
                  },
                  "example": {
                    "language": "html",
                    "code": "<div role=\"button\" tabindex=\"0\">I’m Tabbable</div>",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">role</span>=<span class=\"hljs-string\">&quot;button&quot;</span> <span class=\"hljs-attr\">tabindex</span>=<span class=\"hljs-string\">&quot;0&quot;</span>&gt;</span>I’m Tabbable<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.93,
                        "interest": 0.87,
                        "usage": 0.82,
                        "retention": 0.89,
                        "positivity": 0.34,
                        "positivityRelative": 0.89,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 13163,
                        "percentageSurvey": 62.97,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.96,
                        "interest": 0.84,
                        "usage": 0.88,
                        "retention": 0.89,
                        "positivity": 0.35,
                        "positivityRelative": 0.88,
                        "appreciation": 0.04
                      },
                      "completion": {
                        "count": 3954,
                        "percentageSurvey": 73.21,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.97,
                        "interest": 0.81,
                        "usage": 0.89,
                        "retention": 0.88,
                        "positivity": 0.31,
                        "positivityRelative": 0.87,
                        "appreciation": 0.06
                      },
                      "completion": {
                        "count": 4381,
                        "percentageSurvey": 70.4,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "focusgroup_attribute",
                "entity": {
                  "name": "`focusgroup` attribute",
                  "nameClean": "focusgroup attribute",
                  "nameHtml": "<code>focusgroup</code> attribute",
                  "entityType": "feature",
                  "description": "Facilitate keyboard focus navigation using the keyboard arrow keys among a set of focusable elements.",
                  "descriptionClean": "Facilitate keyboard focus navigation using the keyboard arrow keys among a set of focusable elements.",
                  "example": {
                    "language": "html",
                    "code": "<div focusgroup=\"wrap horizontal\">\n\t<!-- child elements -->\n</div>",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">focusgroup</span>=<span class=\"hljs-string\">&quot;wrap horizontal&quot;</span>&gt;</span>\n\t<span class=\"hljs-comment\">&lt;!-- child elements --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.2,
                        "interest": 0.94,
                        "usage": 0.01,
                        "retention": 0.92,
                        "positivity": 0.35,
                        "positivityRelative": 0.95,
                        "appreciation": -0.02
                      },
                      "completion": {
                        "count": 13107,
                        "percentageSurvey": 62.7,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.32,
                        "interest": 0.95,
                        "usage": 0.12,
                        "retention": 0.99,
                        "positivity": 0.41,
                        "positivityRelative": 0.97,
                        "appreciation": 0.04
                      },
                      "completion": {
                        "count": 3939,
                        "percentageSurvey": 72.93,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.35,
                        "interest": 0.96,
                        "usage": 0.13,
                        "retention": 0.96,
                        "positivity": 0.39,
                        "positivityRelative": 0.96,
                        "appreciation": -0.01
                      },
                      "completion": {
                        "count": 4378,
                        "percentageSurvey": 70.35,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "search_element",
                "entity": {
                  "name": "`<search>`",
                  "nameClean": "<search>",
                  "nameHtml": "<code>&lt;search&gt;</code>",
                  "entityType": "feature",
                  "description": "Semantic element for wrapping search UI.",
                  "descriptionClean": "Semantic element for wrapping search UI.",
                  "caniuse": {
                    "name": "mdn-html_elements_search",
                    "url": "https://caniuse.com/mdn-html_elements_search"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/search",
                    "title": "<search>: The generic search element",
                    "summary": "The <search> HTML element is a container representing the parts of the document or application with form controls or other content related to performing a search or filtering operation. The <search> element semantically identifies the purpose of the element's contents as having search or filtering capabilities. The search or filtering functionality can be for the website or application, the current web page or document, or the entire Internet or subsection thereof."
                  },
                  "example": {
                    "language": "html",
                    "code": "<search>\n  <form action=\"search.php\">\n    <label>Find: <input name=\"q\" type=\"search\"></label>\n    <button>Go!</button>\n  </form>\n</search>",
                    "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">search</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">&quot;search.php&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Find: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;q&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;search&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span>&gt;</span>Go!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">search</span>&gt;</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.39,
                        "interest": 0.94,
                        "usage": 0.11,
                        "retention": 0.96,
                        "positivity": 0.38,
                        "positivityRelative": 0.96,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 13155,
                        "percentageSurvey": 62.93,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.56,
                        "interest": 0.94,
                        "usage": 0.24,
                        "retention": 0.96,
                        "positivity": 0.37,
                        "positivityRelative": 0.95,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 3946,
                        "percentageSurvey": 73.06,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.58,
                        "interest": 0.92,
                        "usage": 0.29,
                        "retention": 0.95,
                        "positivity": 0.36,
                        "positivityRelative": 0.94,
                        "appreciation": 0.02
                      },
                      "completion": {
                        "count": 4377,
                        "percentageSurvey": 70.34,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "filesystem_access",
                "entity": {
                  "name": "File System Access API",
                  "nameClean": "File System Access API",
                  "entityType": "feature",
                  "description": "Access files and directories on the user's local device and create writable files that can be updated.\n",
                  "descriptionClean": "Access files and directories on the user's local device and create writable files that can be updated.",
                  "descriptionHtml": "Access files and directories on the user's local device and create writable files that can be updated.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/File_System_API",
                    "title": "File System API",
                    "summary": "The File System API — with extensions provided via the File System Access API to access files on the device file system — allows read, write and file management capabilities."
                  },
                  "example": {
                    "language": "js",
                    "code": "const handle = await window.showSaveFilePicker();\nconst writable = await handle.createWritable();\nawait writable.write(\"Hello, world!\");\nawait writable.close();\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> handle = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">showSaveFilePicker</span>();\n<span class=\"hljs-keyword\">const</span> writable = <span class=\"hljs-keyword\">await</span> handle.<span class=\"hljs-title function_\">createWritable</span>();\n<span class=\"hljs-keyword\">await</span> writable.<span class=\"hljs-title function_\">write</span>(<span class=\"hljs-string\">&quot;Hello, world!&quot;</span>);\n<span class=\"hljs-keyword\">await</span> writable.<span class=\"hljs-title function_\">close</span>();"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.37,
                        "interest": 0.93,
                        "usage": 0.09,
                        "retention": 0.91,
                        "positivity": 0.32,
                        "positivityRelative": 0.93,
                        "appreciation": -0.02
                      },
                      "completion": {
                        "count": 12789,
                        "percentageSurvey": 61.18,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.45,
                        "interest": 0.91,
                        "usage": 0.12,
                        "retention": 0.93,
                        "positivity": 0.32,
                        "positivityRelative": 0.93,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 3802,
                        "percentageSurvey": 70.39,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.51,
                        "interest": 0.88,
                        "usage": 0.13,
                        "retention": 0.86,
                        "positivity": 0.31,
                        "positivityRelative": 0.89,
                        "appreciation": -0.02
                      },
                      "completion": {
                        "count": 4254,
                        "percentageSurvey": 68.36,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "web_share_api",
                "entity": {
                  "name": "Web Share API",
                  "nameClean": "Web Share API",
                  "entityType": "feature",
                  "description": "Exposes a mechanism for sharing content to various user-selected targets.",
                  "descriptionClean": "Exposes a mechanism for sharing content to various user-selected targets.",
                  "caniuse": {
                    "name": "web-share",
                    "url": "https://caniuse.com/web-share"
                  },
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/Web_Share_API",
                    "title": "Web Share API",
                    "summary": "The Web Share API provides a mechanism for sharing text, links, files, and other content to an arbitrary share target selected by the user."
                  },
                  "example": {
                    "language": "js",
                    "code": "navigator.share(shareData)",
                    "codeHighlighted": "navigator.<span class=\"hljs-title function_\">share</span>(shareData)"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.32,
                        "interest": 0.92,
                        "usage": 0.12,
                        "retention": 0.9,
                        "positivity": 0.3,
                        "positivityRelative": 0.89,
                        "appreciation": -0.02
                      },
                      "completion": {
                        "count": 12744,
                        "percentageSurvey": 60.97,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.39,
                        "interest": 0.92,
                        "usage": 0.17,
                        "retention": 0.87,
                        "positivity": 0.32,
                        "positivityRelative": 0.88,
                        "appreciation": -0.06
                      },
                      "completion": {
                        "count": 3780,
                        "percentageSurvey": 69.99,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.44,
                        "interest": 0.88,
                        "usage": 0.19,
                        "retention": 0.83,
                        "positivity": 0.3,
                        "positivityRelative": 0.86,
                        "appreciation": -0.06
                      },
                      "completion": {
                        "count": 4248,
                        "percentageSurvey": 68.26,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "app_manifest_share_target",
                "entity": {
                  "name": "`share_target` manifest field\n",
                  "nameClean": "share_target manifest field",
                  "nameHtml": "<code>share_target</code> manifest field\n",
                  "entityType": "feature",
                  "description": "Lets a PWA receive data (text, files, URLs) shared from other apps via the system share dialog.\n",
                  "descriptionClean": "Lets a PWA receive data (text, files, URLs) shared from other apps via the system share dialog.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps/Manifest/Reference/share_target",
                    "title": "share_target",
                    "summary": "The share_target manifest member allows installed Progressive Web Apps (PWAs) to be registered as a share target in the system's share dialog."
                  },
                  "example": {
                    "language": "json",
                    "code": "\"share_target\": {\n  \"action\": \"/share\",\n  \"method\": \"POST\",\n  \"enctype\": \"multipart/form-data\",\n  \"params\": {\n    \"title\": \"title\",\n    \"text\": \"text\",\n    \"url\": \"url\",\n    \"files\": [{ \"name\": \"image\", \"accept\": [\"image/*\"] }]\n  }\n}\n",
                    "codeHighlighted": "<span class=\"hljs-attr\">&quot;share_target&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">&quot;action&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;/share&quot;</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;method&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;POST&quot;</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;enctype&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;multipart/form-data&quot;</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;params&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;title&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;title&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;text&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;text&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;url&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;url&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;files&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">{</span> <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;image&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-attr\">&quot;accept&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-string\">&quot;image/*&quot;</span><span class=\"hljs-punctuation\">]</span> <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">]</span>\n  <span class=\"hljs-punctuation\">}</span>\n<span class=\"hljs-punctuation\">}</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.17,
                        "interest": 0.91,
                        "usage": 0.05,
                        "retention": 0.86,
                        "positivity": 0.25,
                        "positivityRelative": 0.83,
                        "appreciation": -0.06
                      },
                      "completion": {
                        "count": 4228,
                        "percentageSurvey": 67.94,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "file_handling_api",
                "entity": {
                  "name": "`file_handlers` manifest field\n",
                  "nameClean": "file_handlers manifest field",
                  "nameHtml": "<code>file_handlers</code> manifest field\n",
                  "entityType": "feature",
                  "description": "Allows PWAs to register themselves as handlers for certain file types.",
                  "descriptionClean": "Allows PWAs to register themselves as handlers for certain file types.",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps/Manifest/Reference/file_handlers",
                    "title": "file_handlers",
                    "summary": "The file_handlers member specifies an array of objects representing the types of files an installed progressive web app (PWA) can handle."
                  },
                  "example": {
                    "label": "manifest.json",
                    "language": "json",
                    "code": "\"file_handlers\": [{\n    \"action\": \"/open-file\",\n    \"accept\": {\n      \"image/svg+xml\": \".svg\",\n      \"image/png\": \".png\"\n    }\n  }]\n",
                    "codeHighlighted": "<span class=\"hljs-attr\">&quot;file_handlers&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span><span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;action&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;/open-file&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;accept&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n      <span class=\"hljs-attr\">&quot;image/svg+xml&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;.svg&quot;</span><span class=\"hljs-punctuation\">,</span>\n      <span class=\"hljs-attr\">&quot;image/png&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;.png&quot;</span>\n    <span class=\"hljs-punctuation\">}</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">]</span>"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2023,
                      "editionId": "html2023",
                      "ratios": {
                        "awareness": 0.21,
                        "interest": 0.92,
                        "usage": 0.04,
                        "retention": 0.93,
                        "positivity": 0.24,
                        "positivityRelative": 0.88,
                        "appreciation": 0.01
                      },
                      "completion": {
                        "count": 12691,
                        "percentageSurvey": 60.71,
                        "total": 20903
                      }
                    },
                    {
                      "year": 2024,
                      "editionId": "html2024",
                      "ratios": {
                        "awareness": 0.26,
                        "interest": 0.9,
                        "usage": 0.05,
                        "retention": 0.88,
                        "positivity": 0.25,
                        "positivityRelative": 0.85,
                        "appreciation": -0.02
                      },
                      "completion": {
                        "count": 3776,
                        "percentageSurvey": 69.91,
                        "total": 5401
                      }
                    },
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.24,
                        "interest": 0.91,
                        "usage": 0.04,
                        "retention": 0.88,
                        "positivity": 0.25,
                        "positivityRelative": 0.85,
                        "appreciation": -0.04
                      },
                      "completion": {
                        "count": 4223,
                        "percentageSurvey": 67.86,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "register_protocol_handler",
                "entity": {
                  "name": "`navigator.registerProtocolHandler()`\n",
                  "nameClean": "navigator.registerProtocolHandler()",
                  "nameHtml": "<code>navigator.registerProtocolHandler()</code>\n",
                  "entityType": "feature",
                  "description": "Lets a web app register itself as the handler for certain protocols (like `mailto:` or `web+custom:`).\n",
                  "descriptionClean": "Lets a web app register itself as the handler for certain protocols (like mailto: or web+custom:).",
                  "descriptionHtml": "Lets a web app register itself as the handler for certain protocols (like <code>mailto:</code> or <code>web+custom:</code>).\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/registerProtocolHandler",
                    "title": "Navigator: registerProtocolHandler() method",
                    "summary": "The Navigator method registerProtocolHandler() lets websites register their ability to open or handle particular URL schemes (also known as protocols)."
                  },
                  "example": {
                    "language": "js",
                    "code": "navigator.registerProtocolHandler(\"mailto\", \"https://fancywebmail.com/?compose=%s\");\n",
                    "codeHighlighted": "navigator.<span class=\"hljs-title function_\">registerProtocolHandler</span>(<span class=\"hljs-string\">&quot;mailto&quot;</span>, <span class=\"hljs-string\">&quot;https://fancywebmail.com/?compose=%s&quot;</span>);"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.2,
                        "interest": 0.88,
                        "usage": 0.03,
                        "retention": 0.81,
                        "positivity": 0.24,
                        "positivityRelative": 0.83,
                        "appreciation": -0.07
                      },
                      "completion": {
                        "count": 4203,
                        "percentageSurvey": 67.54,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "web_bluetooth_api",
                "entity": {
                  "name": "Web Bluetooth",
                  "nameClean": "Web Bluetooth",
                  "entityType": "feature",
                  "description": "Connect to and communicate with nearby Bluetooth Low Energy (BLE) devices.\n",
                  "descriptionClean": "Connect to and communicate with nearby Bluetooth Low Energy (BLE) devices.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/Web_Bluetooth_API",
                    "title": "Web Bluetooth API",
                    "summary": "The Web Bluetooth API provides the ability to connect and interact with Bluetooth Low Energy peripherals."
                  },
                  "example": {
                    "language": "js",
                    "code": "const device = await navigator.bluetooth.requestDevice({ filters: [{ services: [\"heart_rate\"] }] });\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> device = <span class=\"hljs-keyword\">await</span> navigator.<span class=\"hljs-property\">bluetooth</span>.<span class=\"hljs-title function_\">requestDevice</span>({ <span class=\"hljs-attr\">filters</span>: [{ <span class=\"hljs-attr\">services</span>: [<span class=\"hljs-string\">&quot;heart_rate&quot;</span>] }] });"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.36,
                        "interest": 0.78,
                        "usage": 0.03,
                        "retention": 0.76,
                        "positivity": 0.22,
                        "positivityRelative": 0.78,
                        "appreciation": -0.02
                      },
                      "completion": {
                        "count": 4235,
                        "percentageSurvey": 68.05,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "web_usb_api",
                "entity": {
                  "name": "WebUSB API",
                  "nameClean": "WebUSB API",
                  "entityType": "feature",
                  "description": "Directly communicate with USB devices, enabling data exchange without drivers or native apps.\n",
                  "descriptionClean": "Directly communicate with USB devices, enabling data exchange without drivers or native apps.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/WebUSB_API",
                    "title": "WebUSB API",
                    "summary": "The WebUSB API provides a way to expose non-standard Universal Serial Bus (USB) compatible devices services to the web, to make USB safer and easier to use."
                  },
                  "example": {
                    "language": "js",
                    "code": "const device = await navigator.usb.requestDevice({ filters: [{ vendorId: 0x2341 }] });\nawait device.open();\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> device = <span class=\"hljs-keyword\">await</span> navigator.<span class=\"hljs-property\">usb</span>.<span class=\"hljs-title function_\">requestDevice</span>({ <span class=\"hljs-attr\">filters</span>: [{ <span class=\"hljs-attr\">vendorId</span>: <span class=\"hljs-number\">0x2341</span> }] });\n<span class=\"hljs-keyword\">await</span> device.<span class=\"hljs-title function_\">open</span>();"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.35,
                        "interest": 0.76,
                        "usage": 0.02,
                        "retention": 0.8,
                        "positivity": 0.21,
                        "positivityRelative": 0.77,
                        "appreciation": 0.03
                      },
                      "completion": {
                        "count": 4226,
                        "percentageSurvey": 67.91,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "speech_recognition_api",
                "entity": {
                  "name": "`SpeechRecognition`\n",
                  "nameClean": "SpeechRecognition",
                  "nameHtml": "<code>SpeechRecognition</code>\n",
                  "entityType": "feature",
                  "description": "API that converts microphone input to text.\n",
                  "descriptionClean": "API that converts microphone input to text.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition",
                    "title": "SpeechRecognition",
                    "summary": "The SpeechRecognition interface of the Web Speech API is the controller interface for the recognition service; this also handles the SpeechRecognitionEvent sent from the recognition service."
                  },
                  "example": {
                    "language": "js",
                    "code": "const rec = new SpeechRecognition();\nrec.lang = \"en-US\";\nrec.addEventListener(\"result\", e => console.log(e.results[0][0].transcript));\nrec.start();\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> rec = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">SpeechRecognition</span>();\nrec.<span class=\"hljs-property\">lang</span> = <span class=\"hljs-string\">&quot;en-US&quot;</span>;\nrec.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&quot;result&quot;</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(e.<span class=\"hljs-property\">results</span>[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>].<span class=\"hljs-property\">transcript</span>));\nrec.<span class=\"hljs-title function_\">start</span>();"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.36,
                        "interest": 0.83,
                        "usage": 0.08,
                        "retention": 0.75,
                        "positivity": 0.27,
                        "positivityRelative": 0.85,
                        "appreciation": -0.08
                      },
                      "completion": {
                        "count": 4236,
                        "percentageSurvey": 68.07,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "payment_request_api",
                "entity": {
                  "name": "`PaymentRequest` API\n",
                  "nameClean": "PaymentRequest API",
                  "nameHtml": "<code>PaymentRequest</code> API\n",
                  "entityType": "feature",
                  "description": "Enables a consistent, secure way for websites to request payments using the browser’s native UI.\n",
                  "descriptionClean": "Enables a consistent, secure way for websites to request payments using the browser’s native UI.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest",
                    "title": "PaymentRequest",
                    "summary": "The Payment Request API's PaymentRequest interface is the primary access point into the API, and lets web content and apps accept payments from the end user on behalf of the operator of the site or the publisher of the app."
                  },
                  "example": {
                    "language": "js",
                    "code": "const request = new PaymentRequest(\n  [{ supportedMethods: \"basic-card\" }], \n  { total: { label: \"Total\", amount: { currency: \"USD\", value: \"9.99\" } } }\n);\nlet response = await request.show();\nresponse.complete(\"success\"));\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> request = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">PaymentRequest</span>(\n  [{ <span class=\"hljs-attr\">supportedMethods</span>: <span class=\"hljs-string\">&quot;basic-card&quot;</span> }], \n  { <span class=\"hljs-attr\">total</span>: { <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&quot;Total&quot;</span>, <span class=\"hljs-attr\">amount</span>: { <span class=\"hljs-attr\">currency</span>: <span class=\"hljs-string\">&quot;USD&quot;</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">&quot;9.99&quot;</span> } } }\n);\n<span class=\"hljs-keyword\">let</span> response = <span class=\"hljs-keyword\">await</span> request.<span class=\"hljs-title function_\">show</span>();\nresponse.<span class=\"hljs-title function_\">complete</span>(<span class=\"hljs-string\">&quot;success&quot;</span>));"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.29,
                        "interest": 0.84,
                        "usage": 0.01,
                        "retention": 0.76,
                        "positivity": 0.28,
                        "positivityRelative": 0.87,
                        "appreciation": -0.09
                      },
                      "completion": {
                        "count": 4234,
                        "percentageSurvey": 68.04,
                        "total": 6223
                      }
                    }
                  ]
                }
              },
              {
                "id": "web_nfc_api",
                "entity": {
                  "name": "Web NFC",
                  "nameClean": "Web NFC",
                  "entityType": "feature",
                  "description": "Read from and write to NFC tags using a device’s built-in NFC reader.\n",
                  "descriptionClean": "Read from and write to NFC tags using a device’s built-in NFC reader.\n",
                  "mdn": {
                    "locale": "en-US",
                    "url": "https://developer.mozilla.org/en-US/docs/Web/API/Web_NFC_API",
                    "title": "Web NFC API",
                    "summary": "The Web NFC API allows exchanging data over NFC via light-weight NFC Data Exchange Format (NDEF) messages."
                  },
                  "example": {
                    "language": "js",
                    "code": "const reader = new NDEFReader();\nawait reader.scan();\nreader.onreading = e => console.log(e.message.records);\n",
                    "codeHighlighted": "<span class=\"hljs-keyword\">const</span> reader = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">NDEFReader</span>();\n<span class=\"hljs-keyword\">await</span> reader.<span class=\"hljs-title function_\">scan</span>();\nreader.<span class=\"hljs-property\">onreading</span> = <span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(e.<span class=\"hljs-property\">message</span>.<span class=\"hljs-property\">records</span>);"
                  }
                },
                "responses": {
                  "allEditions": [
                    {
                      "year": 2025,
                      "editionId": "html2025",
                      "ratios": {
                        "awareness": 0.23,
                        "interest": 0.78,
                        "usage": 0.01,
                        "retention": 0.89,
                        "positivity": 0.23,
                        "positivityRelative": 0.79,
                        "appreciation": 0.11
                      },
                      "completion": {
                        "count": 4228,
                        "percentageSurvey": 67.94,
                        "total": 6223
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      }
    }
  }
}