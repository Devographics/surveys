{
  "dataAPI": {
    "surveys": {
      "state_of_html": {
        "html2025": {
          "reading_list": {
            "reading_list": {
              "id": "reading_list",
              "combined": {
                "allEditions": [
                  {
                    "_metadata": {
                      "axis1Sort": {
                        "property": "count",
                        "order": "desc"
                      },
                      "limit": 20,
                      "cutoff": 10
                    },
                    "editionId": "html2024",
                    "year": 2024,
                    "completion": {
                      "count": 1898,
                      "percentageSurvey": 35.14,
                      "total": 5401
                    },
                    "buckets": [
                      {
                        "count": 907,
                        "id": "customizable_select",
                        "index": 0,
                        "percentageQuestion": 47.79,
                        "percentageSurvey": 16.79,
                        "entity": {
                          "name": "Customizable Select",
                          "nameClean": "Customizable Select",
                          "description": "Stylable, customizable dropdown control. Previously `<selectlist>` and `<selectmenu>`.\n",
                          "descriptionHtml": "Stylable, customizable dropdown control. Previously <code>&lt;selectlist&gt;</code> and <code>&lt;selectmenu&gt;</code>.\n",
                          "descriptionClean": "Stylable, customizable dropdown control. Previously <selectlist> and <selectmenu>.",
                          "id": "customizable_select",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "select,\n::picker(select) {\n  appearance: base-select;\n}",
                            "codeHighlighted": "<span class=\"hljs-selector-tag\">select</span>,\n::<span class=\"hljs-built_in\">picker</span>(select) {\n  <span class=\"hljs-attribute\">appearance</span>: base-select;\n}"
                          },
                          "resources": [
                            {
                              "url": "https://open-ui.org/components/customizableselect/",
                              "title": "Customizable Select Element (Explainer)"
                            },
                            {
                              "url": "https://web.dev/state-of-css-2022/#customizing-select-elements",
                              "title": "State of CSS 2022"
                            },
                            {
                              "url": "https://css-tricks.com/the-selectmenu-element/",
                              "title": "The selectmenu HTML Tag | CSS-Tricks - CSS-Tricks"
                            },
                            {
                              "url": "https://www.smashingmagazine.com/2023/06/advanced-form-control-styling-selectmenu-anchoring-api/",
                              "title": "Advanced Form Control Styling With Selectmenu And Anchoring API â€” Smashing Magazine"
                            },
                            {
                              "url": "https://hidde.blog/custom-select-with-selectmenu/",
                              "title": "Two levels of customising <selectlist>\n"
                            },
                            {
                              "url": "https://microsoftedge.github.io/Demos/selectmenu/",
                              "title": "Open UI's selectmenu demos"
                            }
                          ],
                          "webFeature": {
                            "id": "customizable-select",
                            "description_html": "The <code>&#x3C;select></code> element's appearance, including the button, selected option, picker dropdown, and options, can be customized using CSS.",
                            "group": [
                              "forms",
                              "html-elements"
                            ],
                            "name": "Customizable <select>",
                            "spec": [
                              "https://open-ui.org/components/customizableselect/"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/customizable-select/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "135",
                                "chrome_android": "135",
                                "edge": "135"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 830,
                        "id": "focusgroup_attribute",
                        "index": 1,
                        "percentageQuestion": 43.73,
                        "percentageSurvey": 15.37,
                        "entity": {
                          "name": "`focusgroup` attribute",
                          "nameHtml": "<code>focusgroup</code> attribute",
                          "nameClean": "focusgroup attribute",
                          "description": "Facilitate keyboard focus navigation using the keyboard arrow keys among a set of focusable elements.",
                          "descriptionClean": "Facilitate keyboard focus navigation using the keyboard arrow keys among a set of focusable elements.",
                          "id": "focusgroup_attribute",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<div focusgroup=\"wrap horizontal\">\n\t<!-- child elements -->\n</div>",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">focusgroup</span>=<span class=\"hljs-string\">&quot;wrap horizontal&quot;</span>&gt;</span>\n\t<span class=\"hljs-comment\">&lt;!-- child elements --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>"
                          },
                          "resources": [
                            {
                              "url": "https://open-ui.org/components/focusgroup.explainer/",
                              "title": "focusgroup (Explainer) | Open UI"
                            },
                            {
                              "url": "https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/Focusgroup/explainer.md?rgh-link-date=2022-02-20T23%3A49%3A02Z",
                              "title": "focusgroup for HTML and CSS"
                            },
                            {
                              "url": "https://chromestatus.com/feature/5637601087193088",
                              "title": "Chrome Platform Status"
                            },
                            {
                              "url": "https://bugs.chromium.org/p/chromium/issues/detail?id=1286127",
                              "title": "1286127 -       chromium -      An open-source project to help move the web forward. -     Monorail"
                            }
                          ]
                        }
                      },
                      {
                        "count": 698,
                        "id": "popover_api",
                        "index": 2,
                        "percentageQuestion": 36.78,
                        "percentageSurvey": 12.92,
                        "entity": {
                          "name": "`popover` attribute (Popover API)",
                          "nameHtml": "<code>popover</code> attribute (Popover API)",
                          "nameClean": "popover attribute (Popover API)",
                          "description": "HTML syntax and JS API facilitating popovers such as overlays, popups, menus etc.",
                          "descriptionClean": "HTML syntax and JS API facilitating popovers such as overlays, popups, menus etc.",
                          "id": "popover_api",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<button popovertarget=\"foo\">Toggle the popover</button>\n<div id=\"foo\" popover>Popover content</div>",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">popovertarget</span>=<span class=\"hljs-string\">&quot;foo&quot;</span>&gt;</span>Toggle the popover<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;foo&quot;</span> <span class=\"hljs-attr\">popover</span>&gt;</span>Popover content<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/Popover_API"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/mdn-html_global_attributes_popover"
                          },
                          "resources": [
                            {
                              "url": "https://html.spec.whatwg.org/multipage/popover.html#dom-popover",
                              "title": "HTML Standard"
                            },
                            {
                              "url": "https://github.com/w3ctag/design-reviews/issues/743",
                              "title": "The Popover API (previously Popup) Â· Issue #743 Â· w3ctag/design-reviews Â· GitHub"
                            },
                            {
                              "url": "https://open-ui.org/components/popover.research.explainer/",
                              "title": "Popover API (Explainer) | Open UI"
                            }
                          ],
                          "webFeature": {
                            "id": "popover",
                            "description_html": "The <code>popover</code> HTML attribute creates an overlay to display content on top of other page content. Popovers can be shown declaratively using HTML, or using the <code>showPopover()</code> method.",
                            "group": [
                              "html"
                            ],
                            "name": "Popover",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/popover.html"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/popover/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2025-01-27",
                              "support": {
                                "chrome": "116",
                                "chrome_android": "116",
                                "edge": "116",
                                "firefox": "125",
                                "firefox_android": "125",
                                "safari": "17",
                                "safari_ios": "18.3"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 696,
                        "id": "edit_context",
                        "index": 3,
                        "percentageQuestion": 36.67,
                        "percentageSurvey": 12.89,
                        "entity": {
                          "name": "`EditContext`\n",
                          "nameHtml": "<code>EditContext</code>\n",
                          "nameClean": "EditContext",
                          "description": "The EditContext interface represents the text edit context of an element that was made editable by using the EditContext API.\n",
                          "descriptionClean": "The EditContext interface represents the text edit context of an element that was made editable by using the EditContext API.\n",
                          "id": "edit_context",
                          "entityType": "feature",
                          "example": {
                            "language": "js",
                            "code": "const canvas = document.createElement(\"canvas\");\nconst editContext = new EditContext();\ncanvas.editContext = editContext;\n",
                            "codeHighlighted": "<span class=\"hljs-keyword\">const</span> canvas = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">&quot;canvas&quot;</span>);\n<span class=\"hljs-keyword\">const</span> editContext = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">EditContext</span>();\ncanvas.<span class=\"hljs-property\">editContext</span> = editContext;"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/EditContext"
                          },
                          "webFeature": {
                            "id": "edit-context",
                            "description_html": "The <code>EditContext</code> API allows you to build rich text editors that support advanced text input, such as Input Method Editor (IME) composition, an emoji picker, or other platform-specific editing UI.",
                            "name": "EditContext",
                            "spec": [
                              "https://w3c.github.io/edit-context/"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/edit-context/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "121",
                                "chrome_android": "121",
                                "edge": "121"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 666,
                        "id": "custom_highlight_api",
                        "index": 4,
                        "percentageQuestion": 35.09,
                        "percentageSurvey": 12.33,
                        "entity": {
                          "name": "CSS Custom Highlight API",
                          "nameClean": "CSS Custom Highlight API",
                          "description": "Provides a mechanism for styling arbitrary text ranges on a document by using JavaScript to create the ranges, and CSS to style them.\n",
                          "descriptionClean": "Provides a mechanism for styling arbitrary text ranges on a document by using JavaScript to create the ranges, and CSS to style them.\n",
                          "id": "custom_highlight_api",
                          "entityType": "feature",
                          "example": {
                            "language": "js",
                            "code": "\n// css\n::highlight(my-custom-highlight) {\n  background-color: blue;\n}\n\n// js\nconst parentNode = document.getElementById(\"foo\");\nconst range1 = new Range();\nrange1.setStart(parentNode, 10);\nrange1.setEnd(parentNode, 20);\nconst highlight = new Highlight(range1);\nCSS.highlights.set(\"my-custom-highlight\", highlight);\n",
                            "codeHighlighted": "<span class=\"hljs-comment\">// css</span>\n::<span class=\"hljs-title function_\">highlight</span>(<span class=\"hljs-params\">my-custom-highlight</span>) {\n  background-<span class=\"hljs-attr\">color</span>: blue;\n}\n\n<span class=\"hljs-comment\">// js</span>\n<span class=\"hljs-keyword\">const</span> parentNode = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&quot;foo&quot;</span>);\n<span class=\"hljs-keyword\">const</span> range1 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Range</span>();\nrange1.<span class=\"hljs-title function_\">setStart</span>(parentNode, <span class=\"hljs-number\">10</span>);\nrange1.<span class=\"hljs-title function_\">setEnd</span>(parentNode, <span class=\"hljs-number\">20</span>);\n<span class=\"hljs-keyword\">const</span> highlight = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Highlight</span>(range1);\n<span class=\"hljs-variable constant_\">CSS</span>.<span class=\"hljs-property\">highlights</span>.<span class=\"hljs-title function_\">set</span>(<span class=\"hljs-string\">&quot;my-custom-highlight&quot;</span>, highlight);"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/CSS_Custom_Highlight_API"
                          },
                          "webFeature": {
                            "id": "highlight",
                            "description_html": "Custom highlights style arbitrary text ranges, without adding extra elements to the DOM.",
                            "name": "Custom highlights",
                            "spec": [
                              "https://drafts.csswg.org/css-highlight-api-1/"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/highlight/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "105",
                                "chrome_android": "105",
                                "edge": "105",
                                "safari": "17.2",
                                "safari_ios": "17.2"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 620,
                        "id": "dom_parts",
                        "index": 5,
                        "percentageQuestion": 32.67,
                        "percentageSurvey": 11.48,
                        "entity": {
                          "name": "DOM Parts",
                          "nameClean": "DOM Parts",
                          "description": "A cacheable representation of a part of the DOM that can be updated performantly.",
                          "descriptionClean": "A cacheable representation of a part of the DOM that can be updated performantly.",
                          "id": "dom_parts",
                          "entityType": "feature",
                          "resources": [
                            {
                              "url": "https://github.com/WICG/webcomponents/blob/gh-pages/proposals/DOM-Parts.md",
                              "title": "DOM Part API"
                            },
                            {
                              "url": "https://github.com/tbondwilkinson/dom-parts#readme",
                              "title": "GitHub - tbondwilkinson/dom-parts"
                            },
                            {
                              "url": "https://groups.google.com/a/chromium.org/g/blink-dev/c/wIADRnljZDA/m/Ghfv2jyRAgAJ"
                            }
                          ]
                        }
                      },
                      {
                        "count": 612,
                        "id": "accordion_element",
                        "index": 6,
                        "percentageQuestion": 32.24,
                        "percentageSurvey": 11.33,
                        "entity": {
                          "name": "`<details name>` (Exclusive Accordion)",
                          "nameHtml": "<code>&lt;details name&gt;</code> (Exclusive Accordion)",
                          "nameClean": "<details name> (Exclusive Accordion)",
                          "description": "Group `<details>` elements so that only up to one in the group can be open at a time.",
                          "descriptionHtml": "Group <code>&lt;details&gt;</code> elements so that only up to one in the group can be open at a time.",
                          "descriptionClean": "Group <details> elements so that only up to one in the group can be open at a time.",
                          "id": "accordion_element",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<details open name=\"sidebar_panel\">\n\t<summary>Main info</summary>\n\t<!-- controls -->\n</details>\n<details name=\"sidebar_panel\">\n\t<summary>Style</summary>\n\t<!-- controls -->\n</details>",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">details</span> <span class=\"hljs-attr\">open</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;sidebar_panel&quot;</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">summary</span>&gt;</span>Main info<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">summary</span>&gt;</span>\n\t<span class=\"hljs-comment\">&lt;!-- controls --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">details</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">details</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;sidebar_panel&quot;</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">summary</span>&gt;</span>Style<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">summary</span>&gt;</span>\n\t<span class=\"hljs-comment\">&lt;!-- controls --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">details</span>&gt;</span>"
                          },
                          "resources": [
                            {
                              "url": "https://github.com/whatwg/html/pull/9400",
                              "title": "Add name attribute for grouping details elements into an exclusive accordion by dbaron Â· Pull Request #9400 Â· whatwg/html Â· GitHub"
                            },
                            {
                              "url": "https://github.com/w3ctag/design-reviews/issues/866#issuecomment-1661272254",
                              "title": "Exclusive accordion (&lt;details name=&quot;&quot;&gt;) Â· Issue #866 Â· w3ctag/design-reviews Â· GitHub"
                            },
                            {
                              "url": "https://open-ui.org/components/accordion.explainer/",
                              "title": "Exclusive Accordion (Explainer) | Open UI"
                            },
                            {
                              "url": "https://chromestatus.com/feature/6710427028815872",
                              "title": "Chrome Platform Status"
                            }
                          ],
                          "webFeature": {
                            "id": "details-name",
                            "description_html": "Multiple <code>&#x3C;details></code> elements which use the same <code>name</code> attribute are mutually exclusive. When one member of the group is opened, all other members are closed.",
                            "group": [
                              "html-elements"
                            ],
                            "name": "Mutually exclusive <details> elements",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/interactive-elements.html#attr-details-name"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/details-name/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2024-09-03",
                              "support": {
                                "chrome": "120",
                                "chrome_android": "120",
                                "edge": "120",
                                "firefox": "130",
                                "firefox_android": "130",
                                "safari": "17.2",
                                "safari_ios": "17.2"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 612,
                        "id": "badging_api",
                        "index": 7,
                        "percentageQuestion": 32.24,
                        "percentageSurvey": 11.33,
                        "entity": {
                          "name": "Badging API",
                          "nameClean": "Badging API",
                          "description": "Set a badge on the web applicationâ€™s icon to notify about updated state in a less intrusive, persistent way.",
                          "descriptionClean": "Set a badge on the web applicationâ€™s icon to notify about updated state in a less intrusive, persistent way.",
                          "id": "badging_api",
                          "entityType": "feature",
                          "example": {
                            "language": "js",
                            "code": "navigator.setAppBadge(unreadCount)",
                            "codeHighlighted": "navigator.<span class=\"hljs-title function_\">setAppBadge</span>(unreadCount)"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/Badging_API"
                          },
                          "resources": [
                            {
                              "url": "https://developer.chrome.com/articles/badging-api/",
                              "title": "Badging for app icons - Chrome Developers"
                            }
                          ]
                        }
                      },
                      {
                        "count": 608,
                        "id": "inert_attribute",
                        "index": 8,
                        "percentageQuestion": 32.03,
                        "percentageSurvey": 11.26,
                        "entity": {
                          "name": "`inert` attribute",
                          "nameHtml": "<code>inert</code> attribute",
                          "nameClean": "inert attribute",
                          "description": "Attribute to make an element and its descendants non-interactive, and invisible to assistive technology.",
                          "descriptionClean": "Attribute to make an element and its descendants non-interactive, and invisible to assistive technology.",
                          "id": "inert_attribute",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<div id=app inert class=loading>\n  ...\n</div>",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">app</span> <span class=\"hljs-attr\">inert</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">loading</span>&gt;</span>\n  ...\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Global_attributes/inert"
                          },
                          "resources": [
                            {
                              "url": "https://html.spec.whatwg.org/multipage/interaction.html#the-inert-attribute",
                              "title": "HTML Standard"
                            },
                            {
                              "url": "https://developer.chrome.com/articles/inert/",
                              "title": "Introducing inert - Chrome Developers"
                            },
                            {
                              "url": "https://www.stefanjudis.com/blog/the-inert-attribute-is-finally-coming-to-the-web/",
                              "title": "The \"inert\" attribute is finally coming to the web | Stefan Judis Web Development"
                            }
                          ],
                          "webFeature": {
                            "id": "inert",
                            "description_html": "The <code>inert</code> HTML attribute marks an element and its descendants as non-interactive. Inert elements don't get focus or fire <code>click</code> events.",
                            "group": [
                              "html"
                            ],
                            "name": "inert",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/interaction.html#inert-subtrees"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/inert/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2023-04-11",
                              "support": {
                                "chrome": "102",
                                "chrome_android": "102",
                                "edge": "102",
                                "firefox": "112",
                                "firefox_android": "112",
                                "safari": "15.5",
                                "safari_ios": "15.5"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 606,
                        "id": "set_html_unsafe",
                        "index": 9,
                        "percentageQuestion": 31.93,
                        "percentageSurvey": 11.22,
                        "entity": {
                          "name": "`setHtmlUnsafe()`",
                          "nameHtml": "<code>setHtmlUnsafe()</code>",
                          "nameClean": "setHtmlUnsafe()",
                          "description": "Used to parse a string of HTML into a DocumentFragment, which then replaces the element's subtree in the DOM.\n",
                          "descriptionHtml": "Used to parse a string of HTML into a DocumentFragment, which then replaces the element's subtree in the DOM.\n",
                          "descriptionClean": "Used to parse a string of HTML into a DocumentFragment, which then replaces the element's subtree in the DOM.",
                          "id": "set_html_unsafe",
                          "entityType": "feature",
                          "example": {
                            "language": "js",
                            "code": "const value = \"<p>This is a string of text</p>\";\ndocument.getElementById(\"target\").setHTMLUnsafe(value);\n",
                            "codeHighlighted": "<span class=\"hljs-keyword\">const</span> value = <span class=\"hljs-string\">&quot;&lt;p&gt;This is a string of text&lt;/p&gt;&quot;</span>;\n<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&quot;target&quot;</span>).<span class=\"hljs-title function_\">setHTMLUnsafe</span>(value);"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/setHTMLUnsafe"
                          },
                          "webFeature": {
                            "id": "parse-html-unsafe",
                            "description_html": "The <code>Document.parseHTMLUnsafe()</code> static method parses HTML into a DOM tree, while the <code>setHTMLUnsafe()</code> method of <code>Element</code> and <code>ShadowRoot</code> parses and inserts HTML into an existing tree. No sanitization applies to these methods, so never call them with user-provided HTML strings.",
                            "name": "Unsanitized HTML parsing methods",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#unsafe-html-parsing-methods"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/parse-html-unsafe/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2024-07-09",
                              "support": {
                                "chrome": "124",
                                "chrome_android": "124",
                                "edge": "124",
                                "firefox": "128",
                                "firefox_android": "128",
                                "safari": "17.4",
                                "safari_ios": "17.4"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 583,
                        "id": "caret_position_from_point",
                        "index": 10,
                        "percentageQuestion": 30.72,
                        "percentageSurvey": 10.79,
                        "entity": {
                          "name": "`caretPositionFromPoint`\n",
                          "nameHtml": "<code>caretPositionFromPoint</code>\n",
                          "nameClean": "caretPositionFromPoint",
                          "description": "The caretPositionFromPoint() method returns the caret's character offset.\n",
                          "descriptionHtml": "The caretPositionFromPoint() method returns the caret's character offset.\n",
                          "descriptionClean": "The caretPositionFromPoint() method returns the caret's character offset.",
                          "id": "caret_position_from_point",
                          "entityType": "feature",
                          "example": {
                            "language": "js",
                            "code": "const range = document.caretPositionFromPoint(e.clientX, e.clientY);\nconst textNode = range.offsetNode;\nconst offset = range.offset;",
                            "codeHighlighted": "<span class=\"hljs-keyword\">const</span> range = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">caretPositionFromPoint</span>(e.<span class=\"hljs-property\">clientX</span>, e.<span class=\"hljs-property\">clientY</span>);\n<span class=\"hljs-keyword\">const</span> textNode = range.<span class=\"hljs-property\">offsetNode</span>;\n<span class=\"hljs-keyword\">const</span> offset = range.<span class=\"hljs-property\">offset</span>;"
                          },
                          "webFeature": {
                            "id": "document-caretpositionfrompoint",
                            "description_html": "The <code>document.caretPositionFromPoint()</code> method finds an insertion point, represented by a DOM node and an offset within that node, for given coordinates in the viewport.",
                            "name": "document.caretPositionFromPoint()",
                            "spec": [
                              "https://drafts.csswg.org/cssom-view-1/#dom-document-caretpositionfrompoint"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/document-caretpositionfrompoint/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "128",
                                "chrome_android": "128",
                                "edge": "128",
                                "firefox": "20",
                                "firefox_android": "20"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 579,
                        "id": "intl_segmenter",
                        "index": 11,
                        "percentageQuestion": 30.51,
                        "percentageSurvey": 10.72,
                        "entity": {
                          "name": "`Intl.Segmenter` API\n",
                          "nameHtml": "<code>Intl.Segmenter</code> API\n",
                          "nameClean": "Intl.Segmenter API",
                          "description": "Language-sensitive segmentation of text into graphemes, words or sentences.\n",
                          "descriptionClean": "Language-sensitive segmentation of text into graphemes, words or sentences.\n",
                          "id": "intl_segmenter",
                          "entityType": "feature",
                          "example": {
                            "language": "js",
                            "code": "const segmenterFr = new Intl.Segmenter(\"fr\", { granularity: \"word\" });\nconst string1 = \"Que ma joie demeure\";\n\nconst iterator1 = segmenterFr.segment(string1)[Symbol.iterator]();\n\nconsole.log(iterator1.next().value.segment);\n// Expected output: 'Que'\n\nconsole.log(iterator1.next().value.segment);\n// Expected output: ' '\n",
                            "codeHighlighted": "<span class=\"hljs-keyword\">const</span> segmenterFr = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Intl</span>.<span class=\"hljs-title class_\">Segmenter</span>(<span class=\"hljs-string\">&quot;fr&quot;</span>, { <span class=\"hljs-attr\">granularity</span>: <span class=\"hljs-string\">&quot;word&quot;</span> });\n<span class=\"hljs-keyword\">const</span> string1 = <span class=\"hljs-string\">&quot;Que ma joie demeure&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> iterator1 = segmenterFr.<span class=\"hljs-title function_\">segment</span>(string1)[<span class=\"hljs-title class_\">Symbol</span>.<span class=\"hljs-property\">iterator</span>]();\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(iterator1.<span class=\"hljs-title function_\">next</span>().<span class=\"hljs-property\">value</span>.<span class=\"hljs-property\">segment</span>);\n<span class=\"hljs-comment\">// Expected output: &#x27;Que&#x27;</span>\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(iterator1.<span class=\"hljs-title function_\">next</span>().<span class=\"hljs-property\">value</span>.<span class=\"hljs-property\">segment</span>);\n<span class=\"hljs-comment\">// Expected output: &#x27; &#x27;</span>"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Segmenter"
                          },
                          "webFeature": {
                            "id": "intl-segmenter",
                            "description_html": "The <code>Intl.Segmenter</code> API creates a locale-aware text splitter that can separate a string into meaningful graphemes, words, or sentences.",
                            "group": [
                              "intl"
                            ],
                            "name": "Intl.Segmenter",
                            "spec": [
                              "https://tc39.es/ecma402/#segmenter-objects"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/intl-segmenter/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2024-04-16",
                              "support": {
                                "chrome": "87",
                                "chrome_android": "87",
                                "edge": "87",
                                "firefox": "125",
                                "firefox_android": "125",
                                "safari": "14.1",
                                "safari_ios": "14.5"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 577,
                        "id": "html_modules",
                        "index": 12,
                        "percentageQuestion": 30.4,
                        "percentageSurvey": 10.68,
                        "entity": {
                          "name": "HTML Modules",
                          "nameClean": "HTML Modules",
                          "description": "Import HTML files via JS imports and access their elements and JS exports.\n",
                          "descriptionClean": "Import HTML files via JS imports and access their elements and JS exports.\n",
                          "id": "html_modules",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<script type=\"module\">\n\timport { TabList } from \"./tablist.html\" with { type: 'html' };\n\tcustomElements.define(\"tab-list\", TabList);\n</script>",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;module&quot;</span>&gt;</span><span class=\"language-javascript\">\n\t<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">TabList</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./tablist.html&quot;</span> <span class=\"hljs-keyword\">with</span> { <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;html&#x27;</span> };\n\tcustomElements.<span class=\"hljs-title function_\">define</span>(<span class=\"hljs-string\">&quot;tab-list&quot;</span>, <span class=\"hljs-title class_\">TabList</span>);\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>"
                          },
                          "resources": [
                            {
                              "url": "https://github.com/WICG/webcomponents/blob/gh-pages/proposals/html-modules-explainer.md",
                              "title": "HTML Modules Explainer"
                            },
                            {
                              "url": "https://chromestatus.com/feature/4854408103854080",
                              "title": "Chrome Platform Status"
                            },
                            {
                              "url": "https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/HTMLModules/designDoc.md"
                            }
                          ]
                        }
                      },
                      {
                        "count": 576,
                        "id": "search_element",
                        "index": 13,
                        "percentageQuestion": 30.35,
                        "percentageSurvey": 10.66,
                        "entity": {
                          "name": "`<search>`",
                          "nameHtml": "<code>&lt;search&gt;</code>",
                          "nameClean": "<search>",
                          "description": "Semantic element for wrapping search UI.",
                          "descriptionClean": "Semantic element for wrapping search UI.",
                          "id": "search_element",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<search>\n  <form action=\"search.php\">\n    <label>Find: <input name=\"q\" type=\"search\"></label>\n    <button>Go!</button>\n  </form>\n</search>",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">search</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">action</span>=<span class=\"hljs-string\">&quot;search.php&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span>&gt;</span>Find: <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;q&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;search&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span>&gt;</span>Go!<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">search</span>&gt;</span>"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/search"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/mdn-html_elements_search"
                          },
                          "resources": [
                            {
                              "url": "https://html.spec.whatwg.org/multipage/grouping-content.html#the-search-element",
                              "title": "HTML Standard"
                            },
                            {
                              "url": "https://www.scottohara.me/blog/2023/03/24/search-element.html",
                              "title": "The search element | scottohara.me"
                            },
                            {
                              "url": "https://github.com/w3ctag/design-reviews/issues/714",
                              "title": "&lt;search&gt; HTML element Â· Issue #714 Â· w3ctag/design-reviews Â· GitHub"
                            }
                          ],
                          "webFeature": {
                            "id": "search",
                            "description_html": "The <code>&#x3C;search></code> HTML element is a container that represents the parts of the web page with search functionality.",
                            "group": [
                              "html-elements"
                            ],
                            "name": "<search>",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/grouping-content.html#the-search-element"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/search/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2023-10-13",
                              "support": {
                                "chrome": "118",
                                "chrome_android": "118",
                                "edge": "118",
                                "firefox": "118",
                                "firefox_android": "118",
                                "safari": "17",
                                "safari_ios": "17"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 570,
                        "id": "contenteditable_plaintext",
                        "index": 14,
                        "percentageQuestion": 30.03,
                        "percentageSurvey": 10.55,
                        "entity": {
                          "name": "`contenteditable=\"plaintext-only\"`",
                          "nameHtml": "<code>contenteditable=\"plaintext-only\"</code>",
                          "nameClean": "contenteditable=\"plaintext-only\"",
                          "description": "Permits editing of the element's raw text, but not rich text formatting.",
                          "descriptionHtml": "Permits editing of the element's raw text, but not rich text formatting.",
                          "descriptionClean": "Permits editing of the element's raw text, but not rich text formatting.",
                          "id": "contenteditable_plaintext",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<h2 class=\"title\" contenteditable=\"plaintext-only\"></h2>",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;title&quot;</span> <span class=\"hljs-attr\">contenteditable</span>=<span class=\"hljs-string\">&quot;plaintext-only&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Global_attributes/contenteditable"
                          },
                          "resources": [
                            {
                              "url": "https://html.spec.whatwg.org/multipage/interaction.html#attr-contenteditable",
                              "title": "HTML Standard"
                            }
                          ],
                          "webFeature": {
                            "id": "contenteditable-plaintextonly",
                            "description_html": "The <code>contenteditable=\"plaintext-only\"</code> global HTML attribute allows the user to edit the content of an element, but prevents rich-text formatting.",
                            "name": "contenteditable=\"plaintext-only\"",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/interaction.html#attr-contenteditable-plaintextonly-state"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/contenteditable-plaintextonly/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2025-03-04",
                              "support": {
                                "chrome": "51",
                                "chrome_android": "51",
                                "edge": "12",
                                "firefox": "136",
                                "firefox_android": "136",
                                "safari": "5.1",
                                "safari_ios": "5"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 560,
                        "id": "blocking_render",
                        "index": 15,
                        "percentageQuestion": 29.5,
                        "percentageSurvey": 10.37,
                        "entity": {
                          "name": "`blocking=\"render\"`",
                          "nameHtml": "<code>blocking=\"render\"</code>",
                          "nameClean": "blocking=\"render\"",
                          "description": "Block rendering (but not parsing) until certain resources have been loaded. Available on `<link>`, `<script>` and `<style>`.\n",
                          "descriptionHtml": "Block rendering (but not parsing) until certain resources have been loaded. Available on <code>&lt;link&gt;</code>, <code>&lt;script&gt;</code> and <code>&lt;style&gt;</code>.\n",
                          "descriptionClean": "Block rendering (but not parsing) until certain resources have been loaded. Available on <link>, <script> and <style>.",
                          "id": "blocking_render",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<script blocking=\"render\" async src=\"async-script.js\"></script>",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">blocking</span>=<span class=\"hljs-string\">&quot;render&quot;</span> <span class=\"hljs-attr\">async</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;async-script.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/script"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/mdn-html_elements_link_blocking"
                          },
                          "resources": [
                            {
                              "url": "https://html.spec.whatwg.org/multipage/urls-and-fetching.html#blocking-attributes",
                              "title": "HTML Standard"
                            },
                            {
                              "url": "https://gist.github.com/xiaochengh/9404abbecdc3b45c0e9f3d5e99fbc65d",
                              "title": "proposal-v3.md Â· GitHub"
                            },
                            {
                              "url": "https://github.com/w3ctag/design-reviews/issues/727",
                              "title": "Review request on `blocking=render` attribute for scripts and stylesheets Â· Issue #727 Â· w3ctag/design-reviews Â· GitHub"
                            }
                          ],
                          "webFeature": {
                            "id": "blocking-render",
                            "description_html": "The <code>blocking=\"render\"</code> attribute for <code>&#x3C;link></code>, <code>&#x3C;script></code>, and <code>&#x3C;style></code> elements blocks rendering until the external script or stylesheet has been loaded. For <code>&#x3C;link rel=\"expect\"></code>, rendering is blocked until a specific element is in the DOM.",
                            "group": [
                              "html"
                            ],
                            "name": "blocking=\"render\"",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/urls-and-fetching.html#blocking-attributes"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/blocking-render/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "105",
                                "chrome_android": "105",
                                "edge": "105",
                                "safari": "18.2",
                                "safari_ios": "18.2"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 538,
                        "id": "showpicker",
                        "index": 16,
                        "percentageQuestion": 28.35,
                        "percentageSurvey": 9.96,
                        "entity": {
                          "name": "`input.showPicker()`",
                          "nameHtml": "<code>input.showPicker()</code>",
                          "nameClean": "input.showPicker()",
                          "description": "Programmatically open the picker of form controls that have one (color pickers, date inputs etc).",
                          "descriptionClean": "Programmatically open the picker of form controls that have one (color pickers, date inputs etc).",
                          "id": "showpicker",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<input id=\"dateInput\" type=\"date\">\n<button onclick=\"dateInput.showPicker()\">Select date</button>",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;dateInput&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;date&quot;</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onclick</span>=<span class=\"hljs-string\">&quot;dateInput.showPicker()&quot;</span>&gt;</span>Select date<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/showPicker"
                          },
                          "resources": [
                            {
                              "url": "https://html.spec.whatwg.org/multipage/input.html#dom-input-showpicker",
                              "title": "HTML Standard"
                            },
                            {
                              "url": "https://github.com/w3ctag/design-reviews/issues/688",
                              "title": "HTMLInputElement showPicker() Â· Issue #688 Â· w3ctag/design-reviews Â· GitHub"
                            }
                          ],
                          "webFeature": {
                            "id": "show-picker-input",
                            "description_html": "The <code>showPicker()</code> method for <code>&#x3C;input></code> elements shows the user interface for picking a value. For example, for <code>&#x3C;input type=\"date\"></code> it shows the interface for picking a date.",
                            "group": [
                              "forms"
                            ],
                            "name": "showPicker() for <input>",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/input.html#dom-input-showpicker"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/show-picker-input/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "99",
                                "chrome_android": "99",
                                "edge": "99",
                                "firefox": "101",
                                "firefox_android": "101",
                                "safari": "17.4"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 534,
                        "id": "datalist_element",
                        "index": 17,
                        "percentageQuestion": 28.13,
                        "percentageSurvey": 9.89,
                        "entity": {
                          "name": "`<datalist>`",
                          "nameHtml": "<code>&lt;datalist&gt;</code>",
                          "nameClean": "<datalist>",
                          "description": "Method of providing a list of presets for a user to select in a form control, while still allowing custom options.",
                          "descriptionClean": "Method of providing a list of presets for a user to select in a form control, while still allowing custom options.",
                          "id": "datalist_element",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<input name=\"country\" list=\"countries\">\n<datalist id=\"countries\">\n  <option>Afghanistan</option>\n  ...\n</datalist>",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;country&quot;</span> <span class=\"hljs-attr\">list</span>=<span class=\"hljs-string\">&quot;countries&quot;</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">datalist</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;countries&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span>&gt;</span>Afghanistan<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n  ...\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">datalist</span>&gt;</span>"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/datalist"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/datalist"
                          },
                          "resources": [
                            {
                              "url": "https://html.spec.whatwg.org/multipage/form-elements.html#the-datalist-element",
                              "title": "The datalist element"
                            }
                          ],
                          "webFeature": {
                            "id": "datalist",
                            "description_html": "The <code>&#x3C;datalist></code> element sets recommended values for an <code>&#x3C;input></code> element. Browsers may show a dropdown menu of all values or match values as the user types.",
                            "group": [
                              "forms"
                            ],
                            "name": "<datalist>",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/form-elements.html#the-datalist-element"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/datalist/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "69",
                                "chrome_android": "69",
                                "edge": "12",
                                "firefox": "110",
                                "safari": "12.1",
                                "safari_ios": "12.2"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 518,
                        "id": "parse_html_unsafe",
                        "index": 18,
                        "percentageQuestion": 27.29,
                        "percentageSurvey": 9.59,
                        "entity": {
                          "name": "`parseHtmlUnsafe()`",
                          "nameHtml": "<code>parseHtmlUnsafe()</code>",
                          "nameClean": "parseHtmlUnsafe()",
                          "description": "Used to parse a string of HTML, which may contain declarative shadow roots, in order to create a new Document instance.\n",
                          "descriptionClean": "Used to parse a string of HTML, which may contain declarative shadow roots, in order to create a new Document instance.\n",
                          "id": "parse_html_unsafe",
                          "entityType": "feature",
                          "example": {
                            "language": "js",
                            "code": "Document.parseHTMLUnsafe(input)\n",
                            "codeHighlighted": "<span class=\"hljs-title class_\">Document</span>.<span class=\"hljs-title function_\">parseHTMLUnsafe</span>(input)"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/Document/parseHTMLUnsafe_static"
                          }
                        }
                      },
                      {
                        "count": 497,
                        "id": "fetchpriority_attribute",
                        "index": 19,
                        "percentageQuestion": 26.19,
                        "percentageSurvey": 9.2,
                        "entity": {
                          "name": "`fetchpriority` attribute\n",
                          "nameHtml": "<code>fetchpriority</code> attribute\n",
                          "nameClean": "fetchpriority attribute",
                          "description": "Allows specifying a hint to help the browser prioritize fetching various resources.",
                          "descriptionClean": "Allows specifying a hint to help the browser prioritize fetching various resources.",
                          "id": "fetchpriority_attribute",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<img src=\"logo.svg\" fetchpriority=\"high\" />",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;logo.svg&quot;</span> <span class=\"hljs-attr\">fetchpriority</span>=<span class=\"hljs-string\">&quot;high&quot;</span> /&gt;</span>"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/fetchPriority"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/mdn-html_elements_script_fetchpriority"
                          },
                          "resources": [
                            {
                              "url": "https://wicg.github.io/priority-hints/",
                              "title": "Priority Hints (obsolete)"
                            },
                            {
                              "url": "https://github.com/w3ctag/design-reviews/issues/704",
                              "title": "Priority Hints API Â· Issue #704 Â· w3ctag/design-reviews Â· GitHub"
                            },
                            {
                              "url": "https://github.com/WICG/priority-hints/blob/main/EXPLAINER.md",
                              "title": "Priority Hints"
                            },
                            {
                              "url": "https://chromestatus.com/feature/5273474901737472",
                              "title": "Chrome Platform Status"
                            },
                            {
                              "url": "https://web.dev/fetch-priority/",
                              "title": "Optimizing resource loading with the Fetch Priority API"
                            }
                          ],
                          "webFeature": {
                            "id": "fetch-priority",
                            "description_html": "The <code>fetch()</code> <code>priority</code> option and the <code>fetchpriority</code> HTML attribute give hints to the browser about which requests to do before other requests of the same type.",
                            "name": "Fetch priority",
                            "spec": [
                              "https://fetch.spec.whatwg.org/#request-priority",
                              "https://html.spec.whatwg.org/multipage/urls-and-fetching.html#fetch-priority-attributes"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/fetch-priority/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2024-10-29",
                              "support": {
                                "chrome": "103",
                                "chrome_android": "103",
                                "edge": "103",
                                "firefox": "132",
                                "firefox_android": "132",
                                "safari": "17.2",
                                "safari_ios": "17.2"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 3503,
                        "id": "no_answer",
                        "index": 20,
                        "percentageQuestion": 0,
                        "percentageSurvey": 64.86
                      },
                      {
                        "count": 13914,
                        "id": "other_answers",
                        "index": 21,
                        "percentageQuestion": 733.11,
                        "percentageSurvey": 257.63
                      }
                    ]
                  },
                  {
                    "_metadata": {
                      "axis1Sort": {
                        "property": "count",
                        "order": "desc"
                      },
                      "limit": 20,
                      "cutoff": 10
                    },
                    "editionId": "html2025",
                    "year": 2025,
                    "completion": {
                      "count": 3739,
                      "percentageSurvey": 60.08,
                      "total": 6223
                    },
                    "buckets": [
                      {
                        "count": 2073,
                        "id": "customizable_select",
                        "index": 0,
                        "percentageQuestion": 55.44,
                        "percentageSurvey": 33.31,
                        "entity": {
                          "name": "Customizable Select",
                          "nameClean": "Customizable Select",
                          "description": "Stylable, customizable dropdown control. Previously `<selectlist>` and `<selectmenu>`.\n",
                          "descriptionHtml": "Stylable, customizable dropdown control. Previously <code>&lt;selectlist&gt;</code> and <code>&lt;selectmenu&gt;</code>.\n",
                          "descriptionClean": "Stylable, customizable dropdown control. Previously <selectlist> and <selectmenu>.",
                          "id": "customizable_select",
                          "entityType": "feature",
                          "example": {
                            "language": "css",
                            "code": "select,\n::picker(select) {\n  appearance: base-select;\n}",
                            "codeHighlighted": "<span class=\"hljs-selector-tag\">select</span>,\n::<span class=\"hljs-built_in\">picker</span>(select) {\n  <span class=\"hljs-attribute\">appearance</span>: base-select;\n}"
                          },
                          "resources": [
                            {
                              "url": "https://open-ui.org/components/customizableselect/",
                              "title": "Customizable Select Element (Explainer)"
                            },
                            {
                              "url": "https://web.dev/state-of-css-2022/#customizing-select-elements",
                              "title": "State of CSS 2022"
                            },
                            {
                              "url": "https://css-tricks.com/the-selectmenu-element/",
                              "title": "The selectmenu HTML Tag | CSS-Tricks - CSS-Tricks"
                            },
                            {
                              "url": "https://www.smashingmagazine.com/2023/06/advanced-form-control-styling-selectmenu-anchoring-api/",
                              "title": "Advanced Form Control Styling With Selectmenu And Anchoring API â€” Smashing Magazine"
                            },
                            {
                              "url": "https://hidde.blog/custom-select-with-selectmenu/",
                              "title": "Two levels of customising <selectlist>\n"
                            },
                            {
                              "url": "https://microsoftedge.github.io/Demos/selectmenu/",
                              "title": "Open UI's selectmenu demos"
                            }
                          ],
                          "webFeature": {
                            "id": "customizable-select",
                            "description_html": "The <code>&#x3C;select></code> element's appearance, including the button, selected option, picker dropdown, and options, can be customized using CSS.",
                            "group": [
                              "forms",
                              "html-elements"
                            ],
                            "name": "Customizable <select>",
                            "spec": [
                              "https://open-ui.org/components/customizableselect/"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/customizable-select/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "135",
                                "chrome_android": "135",
                                "edge": "135"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1804,
                        "id": "showpicker",
                        "index": 1,
                        "percentageQuestion": 48.25,
                        "percentageSurvey": 28.99,
                        "entity": {
                          "name": "`input.showPicker()`",
                          "nameHtml": "<code>input.showPicker()</code>",
                          "nameClean": "input.showPicker()",
                          "description": "Programmatically open the picker of form controls that have one (color pickers, date inputs etc).",
                          "descriptionClean": "Programmatically open the picker of form controls that have one (color pickers, date inputs etc).",
                          "id": "showpicker",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<input id=\"dateInput\" type=\"date\">\n<button onclick=\"dateInput.showPicker()\">Select date</button>",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;dateInput&quot;</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;date&quot;</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onclick</span>=<span class=\"hljs-string\">&quot;dateInput.showPicker()&quot;</span>&gt;</span>Select date<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/showPicker"
                          },
                          "resources": [
                            {
                              "url": "https://html.spec.whatwg.org/multipage/input.html#dom-input-showpicker",
                              "title": "HTML Standard"
                            },
                            {
                              "url": "https://github.com/w3ctag/design-reviews/issues/688",
                              "title": "HTMLInputElement showPicker() Â· Issue #688 Â· w3ctag/design-reviews Â· GitHub"
                            }
                          ],
                          "webFeature": {
                            "id": "show-picker-input",
                            "description_html": "The <code>showPicker()</code> method for <code>&#x3C;input></code> elements shows the user interface for picking a value. For example, for <code>&#x3C;input type=\"date\"></code> it shows the interface for picking a date.",
                            "group": [
                              "forms"
                            ],
                            "name": "showPicker() for <input>",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/input.html#dom-input-showpicker"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/show-picker-input/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "99",
                                "chrome_android": "99",
                                "edge": "99",
                                "firefox": "101",
                                "firefox_android": "101",
                                "safari": "17.4"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1789,
                        "id": "datalist_element",
                        "index": 2,
                        "percentageQuestion": 47.85,
                        "percentageSurvey": 28.75,
                        "entity": {
                          "name": "`<datalist>`",
                          "nameHtml": "<code>&lt;datalist&gt;</code>",
                          "nameClean": "<datalist>",
                          "description": "Method of providing a list of presets for a user to select in a form control, while still allowing custom options.",
                          "descriptionClean": "Method of providing a list of presets for a user to select in a form control, while still allowing custom options.",
                          "id": "datalist_element",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<input name=\"country\" list=\"countries\">\n<datalist id=\"countries\">\n  <option>Afghanistan</option>\n  ...\n</datalist>",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;country&quot;</span> <span class=\"hljs-attr\">list</span>=<span class=\"hljs-string\">&quot;countries&quot;</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">datalist</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;countries&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span>&gt;</span>Afghanistan<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n  ...\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">datalist</span>&gt;</span>"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/datalist"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/datalist"
                          },
                          "resources": [
                            {
                              "url": "https://html.spec.whatwg.org/multipage/form-elements.html#the-datalist-element",
                              "title": "The datalist element"
                            }
                          ],
                          "webFeature": {
                            "id": "datalist",
                            "description_html": "The <code>&#x3C;datalist></code> element sets recommended values for an <code>&#x3C;input></code> element. Browsers may show a dropdown menu of all values or match values as the user types.",
                            "group": [
                              "forms"
                            ],
                            "name": "<datalist>",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/form-elements.html#the-datalist-element"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/datalist/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "69",
                                "chrome_android": "69",
                                "edge": "12",
                                "firefox": "110",
                                "safari": "12.1",
                                "safari_ios": "12.2"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1707,
                        "id": "invokers",
                        "index": 3,
                        "percentageQuestion": 45.65,
                        "percentageSurvey": 27.43,
                        "entity": {
                          "name": "`command` and `commandfor` attributes (Command Invokers)\n",
                          "nameHtml": "<code>command</code> and <code>commandfor</code> attributes (Command Invokers)\n",
                          "nameClean": "command and commandfor attributes (Command Invokers)",
                          "description": "A declarative way for `<button>` to invoke predefined custom commands.\n",
                          "descriptionHtml": "A declarative way for <code>&lt;button&gt;</code> to invoke predefined custom commands.\n",
                          "descriptionClean": "A declarative way for <button> to invoke predefined custom commands.",
                          "id": "invokers",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<button commandfor=\"mydialog\" command=\"show-modal\">\n  Show modal dialog\n</button>\n<dialog id=\"mydialog\">\n  <button commandfor=\"mydialog\" command=\"close\">\n    Close\n  </button>\n  *dialog content*\n</dialog>\n",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">commandfor</span>=<span class=\"hljs-string\">&quot;mydialog&quot;</span> <span class=\"hljs-attr\">command</span>=<span class=\"hljs-string\">&quot;show-modal&quot;</span>&gt;</span>\n  Show modal dialog\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dialog</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;mydialog&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">commandfor</span>=<span class=\"hljs-string\">&quot;mydialog&quot;</span> <span class=\"hljs-attr\">command</span>=<span class=\"hljs-string\">&quot;close&quot;</span>&gt;</span>\n    Close\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n  *dialog content*\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dialog</span>&gt;</span>"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/Invoker_Commands_API"
                          },
                          "resources": [
                            {
                              "url": "https://open-ui.org/components/invokers.explainer/",
                              "title": "Invoker Commands (Explainer) | Open UI"
                            },
                            {
                              "url": "https://css-tricks.com/invoker-commands-additional-ways-to-work-with-dialog-popover-and-more/",
                              "title": "Invoker Commands: Additional Ways to Work With Dialog, Popoverâ€¦ and More?"
                            }
                          ],
                          "webFeature": {
                            "id": "invoker-commands",
                            "description_html": "The <code>command</code> and <code>commandfor</code> attributes for the <code>&#x3C;button></code> HTML element dispatch an action to an element when the button is invoked (by click or keystroke), as a declarative alternative to <code>addEventListener()</code> calls or <code>onclick</code> attribute handlers.",
                            "name": "Invoker commands",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/form-elements.html#attr-button-command"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/invoker-commands/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "135",
                                "chrome_android": "135",
                                "edge": "135"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1691,
                        "id": "popover_hint",
                        "index": 4,
                        "percentageQuestion": 45.23,
                        "percentageSurvey": 27.17,
                        "entity": {
                          "name": "`popover=\"hint\"`\n",
                          "nameHtml": "<code>popover=\"hint\"</code>\n",
                          "nameClean": "popover=\"hint\"",
                          "description": "A way to create less persistent popovers, such as tooltips.\n",
                          "descriptionClean": "A way to create less persistent popovers, such as tooltips.\n",
                          "id": "popover_hint",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<div id=\"tooltip\" popover=\"hint\">\n  Save this document\n</div>\n<button popovertarget=\"tooltip\">\n  Save\n</button>\n",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;tooltip&quot;</span> <span class=\"hljs-attr\">popover</span>=<span class=\"hljs-string\">&quot;hint&quot;</span>&gt;</span>\n  Save this document\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">popovertarget</span>=<span class=\"hljs-string\">&quot;tooltip&quot;</span>&gt;</span>\n  Save\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Global_attributes/popover"
                          },
                          "resources": [
                            {
                              "url": "https://open-ui.org/components/popover-hint.research.explainer/",
                              "title": "Popover=hint (Explainer) | Open UI"
                            },
                            {
                              "url": "https://developer.chrome.com/blog/popover-hint",
                              "title": "Popover = hint"
                            },
                            {
                              "url": "https://una.im/popover-hint/",
                              "title": "What is popover=hint?"
                            },
                            {
                              "url": "https://html.spec.whatwg.org/multipage/popover.html#attr-popover-hint",
                              "title": "HTML Standard"
                            }
                          ],
                          "webFeature": {
                            "id": "popover-hint",
                            "description_html": "The <code>popover=\"hint\"</code> global HTML attribute creates a popover that is subordinate to popovers with a <code>popover=\"auto\"</code> attribute. You can use this to create tooltips that don't dismiss <code>auto</code> popovers.",
                            "group": [
                              "html"
                            ],
                            "name": "popover=\"hint\"",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/popover.html#attr-popover-hint"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/popover-hint/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "133",
                                "chrome_android": "133",
                                "edge": "133"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1687,
                        "id": "sanitizer_api",
                        "index": 5,
                        "percentageQuestion": 45.12,
                        "percentageSurvey": 27.11,
                        "entity": {
                          "name": "Sanitizer API",
                          "nameClean": "Sanitizer API",
                          "description": "`element.setHTML()` and `Document.parseHTML()`. API to prevent XSS attacks by sanitizing untrusted strings of HTML.\n",
                          "descriptionHtml": "<code>element.setHTML()</code> and <code>Document.parseHTML()</code>. API to prevent XSS attacks by sanitizing untrusted strings of HTML.\n",
                          "descriptionClean": "element.setHTML() and Document.parseHTML(). API to prevent XSS attacks by sanitizing untrusted strings of HTML.",
                          "id": "sanitizer_api",
                          "entityType": "feature",
                          "example": {
                            "language": "js",
                            "code": "greeting.setHTML('Hello ' + nameInput.value);\n",
                            "codeHighlighted": "greeting.<span class=\"hljs-title function_\">setHTML</span>(<span class=\"hljs-string\">&#x27;Hello &#x27;</span> + nameInput.<span class=\"hljs-property\">value</span>);"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTML_Sanitizer_API"
                          }
                        }
                      },
                      {
                        "count": 1556,
                        "id": "mapviewer_element",
                        "index": 6,
                        "percentageQuestion": 41.62,
                        "percentageSurvey": 25,
                        "entity": {
                          "name": "`<mapviewer>` (Inline MapML)",
                          "nameHtml": "<code>&lt;mapviewer&gt;</code> (Inline MapML)",
                          "nameClean": "<mapviewer> (Inline MapML)",
                          "description": "Embed interactive maps in HTML.\n",
                          "descriptionClean": "Embed interactive maps in HTML.\n",
                          "id": "mapviewer_element",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<mapviewer controls width=\"600\" height=\"400\">\n  <maplayer src=\"osm.mapml\"></maplayer>\n</mapviewer>\n",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">mapviewer</span> <span class=\"hljs-attr\">controls</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">&quot;600&quot;</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">&quot;400&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">maplayer</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;osm.mapml&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">maplayer</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">mapviewer</span>&gt;</span>"
                          }
                        }
                      },
                      {
                        "count": 1530,
                        "id": "dialog_closedby",
                        "index": 7,
                        "percentageQuestion": 40.92,
                        "percentageSurvey": 24.59,
                        "entity": {
                          "name": "`<dialog closedby=\"any\">`\n",
                          "nameHtml": "<code>&lt;dialog closedby=\"any\"&gt;</code>\n",
                          "nameClean": "<dialog closedby=\"any\">",
                          "description": "Allows the dialog to be closed by clicking outside of it (light dismiss).\n",
                          "descriptionClean": "Allows the dialog to be closed by clicking outside of it (light dismiss).\n",
                          "id": "dialog_closedby",
                          "entityType": "feature",
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/dialog"
                          },
                          "resources": [
                            {
                              "url": "https://html.spec.whatwg.org/multipage/interactive-elements.html#attr-dialog-closedby",
                              "title": "HTML Standard"
                            }
                          ],
                          "webFeature": {
                            "id": "dialog-closedby",
                            "description_html": "The <code>closedby</code> HTML attribute for <code>&#x3C;dialog></code> sets which user actions close a dialog. For example, <code>closedby=\"any\"</code> allows the dialog to be closed by clicking outside of it.",
                            "group": [
                              "html-elements"
                            ],
                            "name": "<dialog closedby>",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/interactive-elements.html#attr-dialog-closedby"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/dialog-closedby/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "134",
                                "chrome_android": "134",
                                "edge": "134"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1530,
                        "id": "hidden_until_found",
                        "index": 8,
                        "percentageQuestion": 40.92,
                        "percentageSurvey": 24.59,
                        "entity": {
                          "name": "`hidden=\"until-found\"`\n",
                          "nameHtml": "<code>hidden=\"until-found\"</code>\n",
                          "nameClean": "hidden=\"until-found\"",
                          "description": "Hide an element until it is found (e.g. via a find-in-page search or when targeted by the URL hash).\n",
                          "descriptionClean": "Hide an element until it is found (e.g. via a find-in-page search or when targeted by the URL hash).\n",
                          "id": "hidden_until_found",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<section class=\"drawer\" aria-expanded=\"false\" hidden=\"until-found\">\n  <!-- content -->\n</section>\n",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">section</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;drawer&quot;</span> <span class=\"hljs-attr\">aria-expanded</span>=<span class=\"hljs-string\">&quot;false&quot;</span> <span class=\"hljs-attr\">hidden</span>=<span class=\"hljs-string\">&quot;until-found&quot;</span>&gt;</span>\n  <span class=\"hljs-comment\">&lt;!-- content --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">section</span>&gt;</span>"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Global_attributes/hidden"
                          },
                          "resources": [
                            {
                              "url": "https://developer.chrome.com/docs/css-ui/hidden-until-found",
                              "title": "Making collapsed content accessible with hidden=until-found"
                            }
                          ],
                          "webFeature": {
                            "id": "hidden-until-found",
                            "description_html": "The <code>hidden=\"until-found\"</code> attribute hides an element until it is found using the browser's find-in-page search or it is directly navigated to by following a URL fragment.",
                            "group": [
                              "html"
                            ],
                            "name": "hidden=\"until-found\"",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/interaction.html#attr-hidden-until-found"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/hidden-until-found/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "102",
                                "chrome_android": "102",
                                "edge": "102",
                                "firefox": "139",
                                "firefox_android": "139"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1505,
                        "id": "popover_api",
                        "index": 9,
                        "percentageQuestion": 40.25,
                        "percentageSurvey": 24.18,
                        "entity": {
                          "name": "`popover` attribute (Popover API)",
                          "nameHtml": "<code>popover</code> attribute (Popover API)",
                          "nameClean": "popover attribute (Popover API)",
                          "description": "HTML syntax and JS API facilitating popovers such as overlays, popups, menus etc.",
                          "descriptionClean": "HTML syntax and JS API facilitating popovers such as overlays, popups, menus etc.",
                          "id": "popover_api",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<button popovertarget=\"foo\">Toggle the popover</button>\n<div id=\"foo\" popover>Popover content</div>",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">popovertarget</span>=<span class=\"hljs-string\">&quot;foo&quot;</span>&gt;</span>Toggle the popover<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;foo&quot;</span> <span class=\"hljs-attr\">popover</span>&gt;</span>Popover content<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/Popover_API"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/mdn-html_global_attributes_popover"
                          },
                          "resources": [
                            {
                              "url": "https://html.spec.whatwg.org/multipage/popover.html#dom-popover",
                              "title": "HTML Standard"
                            },
                            {
                              "url": "https://github.com/w3ctag/design-reviews/issues/743",
                              "title": "The Popover API (previously Popup) Â· Issue #743 Â· w3ctag/design-reviews Â· GitHub"
                            },
                            {
                              "url": "https://open-ui.org/components/popover.research.explainer/",
                              "title": "Popover API (Explainer) | Open UI"
                            }
                          ],
                          "webFeature": {
                            "id": "popover",
                            "description_html": "The <code>popover</code> HTML attribute creates an overlay to display content on top of other page content. Popovers can be shown declaratively using HTML, or using the <code>showPopover()</code> method.",
                            "group": [
                              "html"
                            ],
                            "name": "Popover",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/popover.html"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/popover/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2025-01-27",
                              "support": {
                                "chrome": "116",
                                "chrome_android": "116",
                                "edge": "116",
                                "firefox": "125",
                                "firefox_android": "125",
                                "safari": "17",
                                "safari_ios": "18.3"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1476,
                        "id": "contenteditable_plaintext",
                        "index": 10,
                        "percentageQuestion": 39.48,
                        "percentageSurvey": 23.72,
                        "entity": {
                          "name": "`contenteditable=\"plaintext-only\"`",
                          "nameHtml": "<code>contenteditable=\"plaintext-only\"</code>",
                          "nameClean": "contenteditable=\"plaintext-only\"",
                          "description": "Permits editing of the element's raw text, but not rich text formatting.",
                          "descriptionHtml": "Permits editing of the element's raw text, but not rich text formatting.",
                          "descriptionClean": "Permits editing of the element's raw text, but not rich text formatting.",
                          "id": "contenteditable_plaintext",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<h2 class=\"title\" contenteditable=\"plaintext-only\"></h2>",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;title&quot;</span> <span class=\"hljs-attr\">contenteditable</span>=<span class=\"hljs-string\">&quot;plaintext-only&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Global_attributes/contenteditable"
                          },
                          "resources": [
                            {
                              "url": "https://html.spec.whatwg.org/multipage/interaction.html#attr-contenteditable",
                              "title": "HTML Standard"
                            }
                          ],
                          "webFeature": {
                            "id": "contenteditable-plaintextonly",
                            "description_html": "The <code>contenteditable=\"plaintext-only\"</code> global HTML attribute allows the user to edit the content of an element, but prevents rich-text formatting.",
                            "name": "contenteditable=\"plaintext-only\"",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/interaction.html#attr-contenteditable-plaintextonly-state"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/contenteditable-plaintextonly/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2025-03-04",
                              "support": {
                                "chrome": "51",
                                "chrome_android": "51",
                                "edge": "12",
                                "firefox": "136",
                                "firefox_android": "136",
                                "safari": "5.1",
                                "safari_ios": "5"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1404,
                        "id": "focusgroup_attribute",
                        "index": 11,
                        "percentageQuestion": 37.55,
                        "percentageSurvey": 22.56,
                        "entity": {
                          "name": "`focusgroup` attribute",
                          "nameHtml": "<code>focusgroup</code> attribute",
                          "nameClean": "focusgroup attribute",
                          "description": "Facilitate keyboard focus navigation using the keyboard arrow keys among a set of focusable elements.",
                          "descriptionClean": "Facilitate keyboard focus navigation using the keyboard arrow keys among a set of focusable elements.",
                          "id": "focusgroup_attribute",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<div focusgroup=\"wrap horizontal\">\n\t<!-- child elements -->\n</div>",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">focusgroup</span>=<span class=\"hljs-string\">&quot;wrap horizontal&quot;</span>&gt;</span>\n\t<span class=\"hljs-comment\">&lt;!-- child elements --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>"
                          },
                          "resources": [
                            {
                              "url": "https://open-ui.org/components/focusgroup.explainer/",
                              "title": "focusgroup (Explainer) | Open UI"
                            },
                            {
                              "url": "https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/Focusgroup/explainer.md?rgh-link-date=2022-02-20T23%3A49%3A02Z",
                              "title": "focusgroup for HTML and CSS"
                            },
                            {
                              "url": "https://chromestatus.com/feature/5637601087193088",
                              "title": "Chrome Platform Status"
                            },
                            {
                              "url": "https://bugs.chromium.org/p/chromium/issues/detail?id=1286127",
                              "title": "1286127 -       chromium -      An open-source project to help move the web forward. -     Monorail"
                            }
                          ]
                        }
                      },
                      {
                        "count": 1396,
                        "id": "speculation_rules",
                        "index": 12,
                        "percentageQuestion": 37.34,
                        "percentageSurvey": 22.43,
                        "entity": {
                          "name": "Speculation Rules",
                          "nameClean": "Speculation Rules",
                          "description": "Hints for the browser to proactively download pages in the background to improve performance.\n",
                          "descriptionClean": "Hints for the browser to proactively download pages in the background to improve performance.\n",
                          "id": "speculation_rules",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<script type=\"speculationrules\">\n  {\n    \"prefetch\": [{ \"urls\": [\"/about\", \"/pricing\"] }],\n    \"prerender\": [\n      {\n        \"where\": {\n          \"href_matches\": \"^/product/\\\\d+$\",\n          \"selector_matches\": \"a.nav-link\"\n        }\n      }\n    ]\n  }\n</script>\n",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;speculationrules&quot;</span>&gt;</span><span class=\"language-javascript\">\n  {\n    <span class=\"hljs-string\">&quot;prefetch&quot;</span>: [{ <span class=\"hljs-string\">&quot;urls&quot;</span>: [<span class=\"hljs-string\">&quot;/about&quot;</span>, <span class=\"hljs-string\">&quot;/pricing&quot;</span>] }],\n    <span class=\"hljs-string\">&quot;prerender&quot;</span>: [\n      {\n        <span class=\"hljs-string\">&quot;where&quot;</span>: {\n          <span class=\"hljs-string\">&quot;href_matches&quot;</span>: <span class=\"hljs-string\">&quot;^/product/\\\\d+$&quot;</span>,\n          <span class=\"hljs-string\">&quot;selector_matches&quot;</span>: <span class=\"hljs-string\">&quot;a.nav-link&quot;</span>\n        }\n      }\n    ]\n  }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>"
                          },
                          "webFeature": {
                            "id": "speculation-rules",
                            "description_html": "Speculation rules are hints to the browser to proactively download pages in the background so they appear instantly when the user navigates to them.",
                            "name": "Speculation rules",
                            "spec": [
                              "https://wicg.github.io/nav-speculation/speculation-rules.html",
                              "https://wicg.github.io/nav-speculation/prerendering.html"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/speculation-rules/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "109",
                                "chrome_android": "109",
                                "edge": "109"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1395,
                        "id": "img_sizes_auto",
                        "index": 13,
                        "percentageQuestion": 37.31,
                        "percentageSurvey": 22.42,
                        "entity": {
                          "name": "`<img sizes=\"auto\" loading=\"lazy\">`\n",
                          "nameHtml": "<code>&lt;img sizes=\"auto\" loading=\"lazy\"&gt;</code>\n",
                          "nameClean": "<img sizes=\"auto\" loading=\"lazy\">",
                          "description": "The `sizes=\"auto\"` attribute reserves layout space for an image before it loads, avoiding some layout shifts.\n",
                          "descriptionHtml": "The <code>sizes=\"auto\"</code> attribute reserves layout space for an image before it loads, avoiding some layout shifts.\n",
                          "descriptionClean": "The sizes=\"auto\" attribute reserves layout space for an image before it loads, avoiding some layout shifts.",
                          "id": "img_sizes_auto",
                          "entityType": "feature",
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/img"
                          },
                          "webFeature": {
                            "id": "sizes-auto",
                            "description_html": "The <code>sizes=\"auto\"</code> attribute for the <code>&#x3C;img></code> HTML element reserves layout space for an image before it loads, avoiding some layout shifts. This attribute only applies to images with the <code>loading=\"lazy\"</code> attribute.",
                            "group": [
                              "images"
                            ],
                            "name": "<img sizes=\"auto\" loading=\"lazy\">",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/images.html#valdef-sizes-auto"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/sizes-auto/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "126",
                                "chrome_android": "126",
                                "edge": "126"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1356,
                        "id": "input_type_color_alpha",
                        "index": 14,
                        "percentageQuestion": 36.27,
                        "percentageSurvey": 21.79,
                        "entity": {
                          "name": "`<input type=\"color\" alpha>`\n",
                          "nameHtml": "<code>&lt;input type=\"color\" alpha&gt;</code>\n",
                          "nameClean": "<input type=\"color\" alpha>",
                          "description": "Creates a color picker which allows the user to select a semi-transparent color.\n",
                          "descriptionClean": "Creates a color picker which allows the user to select a semi-transparent color.\n",
                          "id": "input_type_color_alpha",
                          "entityType": "feature",
                          "resources": [
                            {
                              "url": "https://webkit.org/blog/16900/p3-and-alpha-color-pickers/",
                              "title": "Add wide gamut P3 and alpha transparency to your color picker in HTML | WebKit"
                            },
                            {
                              "url": "https://html.spec.whatwg.org/multipage/input.html#attr-input-alpha",
                              "title": "HTML Standard"
                            }
                          ]
                        }
                      },
                      {
                        "count": 1342,
                        "id": "dialog_requestclose",
                        "index": 15,
                        "percentageQuestion": 35.89,
                        "percentageSurvey": 21.57,
                        "entity": {
                          "name": "`dialog.requestClose()`",
                          "nameHtml": "<code>dialog.requestClose()</code>",
                          "nameClean": "dialog.requestClose()",
                          "description": "Closes the dialog in a way that can be cancelled (unlike `dialog.close()`).\n",
                          "descriptionHtml": "Closes the dialog in a way that can be cancelled (unlike <code>dialog.close()</code>).\n",
                          "descriptionClean": "Closes the dialog in a way that can be cancelled (unlike dialog.close()).",
                          "id": "dialog_requestclose",
                          "entityType": "feature",
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/requestClose"
                          },
                          "resources": [
                            {
                              "url": "https://html.spec.whatwg.org/multipage/interactive-elements.html#dom-dialog-requestclose",
                              "title": "HTML Standard"
                            }
                          ],
                          "webFeature": {
                            "id": "requestclose",
                            "description_html": "The <code>requestClose()</code> method of a <code>&#x3C;dialog></code> HTML element closes the dialog, firing a <code>cancel</code> event first, which listeners can use to prevent the dialog from closing. This differs from the <code>close()</code> method, which only fires the non-cancelable <code>close</code> event.",
                            "group": [
                              "html-elements"
                            ],
                            "name": "dialog.requestClose()",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/interactive-elements.html#dom-dialog-requestclose"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/requestclose/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2025-05-27",
                              "support": {
                                "chrome": "134",
                                "chrome_android": "134",
                                "edge": "134",
                                "firefox": "139",
                                "firefox_android": "139",
                                "safari": "18.4",
                                "safari_ios": "18.4"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1335,
                        "id": "accordion_element",
                        "index": 16,
                        "percentageQuestion": 35.7,
                        "percentageSurvey": 21.45,
                        "entity": {
                          "name": "`<details name>` (Exclusive Accordion)",
                          "nameHtml": "<code>&lt;details name&gt;</code> (Exclusive Accordion)",
                          "nameClean": "<details name> (Exclusive Accordion)",
                          "description": "Group `<details>` elements so that only up to one in the group can be open at a time.",
                          "descriptionHtml": "Group <code>&lt;details&gt;</code> elements so that only up to one in the group can be open at a time.",
                          "descriptionClean": "Group <details> elements so that only up to one in the group can be open at a time.",
                          "id": "accordion_element",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<details open name=\"sidebar_panel\">\n\t<summary>Main info</summary>\n\t<!-- controls -->\n</details>\n<details name=\"sidebar_panel\">\n\t<summary>Style</summary>\n\t<!-- controls -->\n</details>",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">details</span> <span class=\"hljs-attr\">open</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;sidebar_panel&quot;</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">summary</span>&gt;</span>Main info<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">summary</span>&gt;</span>\n\t<span class=\"hljs-comment\">&lt;!-- controls --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">details</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">details</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;sidebar_panel&quot;</span>&gt;</span>\n\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">summary</span>&gt;</span>Style<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">summary</span>&gt;</span>\n\t<span class=\"hljs-comment\">&lt;!-- controls --&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">details</span>&gt;</span>"
                          },
                          "resources": [
                            {
                              "url": "https://github.com/whatwg/html/pull/9400",
                              "title": "Add name attribute for grouping details elements into an exclusive accordion by dbaron Â· Pull Request #9400 Â· whatwg/html Â· GitHub"
                            },
                            {
                              "url": "https://github.com/w3ctag/design-reviews/issues/866#issuecomment-1661272254",
                              "title": "Exclusive accordion (&lt;details name=&quot;&quot;&gt;) Â· Issue #866 Â· w3ctag/design-reviews Â· GitHub"
                            },
                            {
                              "url": "https://open-ui.org/components/accordion.explainer/",
                              "title": "Exclusive Accordion (Explainer) | Open UI"
                            },
                            {
                              "url": "https://chromestatus.com/feature/6710427028815872",
                              "title": "Chrome Platform Status"
                            }
                          ],
                          "webFeature": {
                            "id": "details-name",
                            "description_html": "Multiple <code>&#x3C;details></code> elements which use the same <code>name</code> attribute are mutually exclusive. When one member of the group is opened, all other members are closed.",
                            "group": [
                              "html-elements"
                            ],
                            "name": "Mutually exclusive <details> elements",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/interactive-elements.html#attr-details-name"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/details-name/",
                            "status": {
                              "baseline": "low",
                              "baseline_low_date": "2024-09-03",
                              "support": {
                                "chrome": "120",
                                "chrome_android": "120",
                                "edge": "120",
                                "firefox": "130",
                                "firefox_android": "130",
                                "safari": "17.2",
                                "safari_ios": "17.2"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 1324,
                        "id": "html_modules",
                        "index": 17,
                        "percentageQuestion": 35.41,
                        "percentageSurvey": 21.28,
                        "entity": {
                          "name": "HTML Modules",
                          "nameClean": "HTML Modules",
                          "description": "Import HTML files via JS imports and access their elements and JS exports.\n",
                          "descriptionClean": "Import HTML files via JS imports and access their elements and JS exports.\n",
                          "id": "html_modules",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<script type=\"module\">\n\timport { TabList } from \"./tablist.html\" with { type: 'html' };\n\tcustomElements.define(\"tab-list\", TabList);\n</script>",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;module&quot;</span>&gt;</span><span class=\"language-javascript\">\n\t<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">TabList</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./tablist.html&quot;</span> <span class=\"hljs-keyword\">with</span> { <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">&#x27;html&#x27;</span> };\n\tcustomElements.<span class=\"hljs-title function_\">define</span>(<span class=\"hljs-string\">&quot;tab-list&quot;</span>, <span class=\"hljs-title class_\">TabList</span>);\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>"
                          },
                          "resources": [
                            {
                              "url": "https://github.com/WICG/webcomponents/blob/gh-pages/proposals/html-modules-explainer.md",
                              "title": "HTML Modules Explainer"
                            },
                            {
                              "url": "https://chromestatus.com/feature/4854408103854080",
                              "title": "Chrome Platform Status"
                            },
                            {
                              "url": "https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/HTMLModules/designDoc.md"
                            }
                          ]
                        }
                      },
                      {
                        "count": 1253,
                        "id": "jpeg_xl",
                        "index": 18,
                        "percentageQuestion": 33.51,
                        "percentageSurvey": 20.13,
                        "entity": {
                          "name": "JPEG XL",
                          "nameClean": "JPEG XL",
                          "description": "An image format optimized for web environments.\n",
                          "descriptionClean": "An image format optimized for web environments.\n",
                          "id": "jpeg_xl",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<img src=\"image.jxl\" />\n",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;image.jxl&quot;</span> /&gt;</span>"
                          },
                          "caniuse": {
                            "url": "https://caniuse.com/jpegxl"
                          },
                          "resources": [
                            {
                              "url": "https://jpeg.org/jpegxl/",
                              "title": "JPEG - JPEG XL"
                            }
                          ]
                        }
                      },
                      {
                        "count": 1252,
                        "id": "link_rel_expect",
                        "index": 19,
                        "percentageQuestion": 33.48,
                        "percentageSurvey": 20.12,
                        "entity": {
                          "name": "`<link rel=\"expect\">`\n",
                          "nameHtml": "<code>&lt;link rel=\"expect\"&gt;</code>\n",
                          "nameClean": "<link rel=\"expect\">",
                          "description": "Block rendering until the element referenced by the `href` value is connected and fully parsed.\n",
                          "descriptionHtml": "Block rendering until the element referenced by the <code>href</code> value is connected and fully parsed.\n",
                          "descriptionClean": "Block rendering until the element referenced by the href value is connected and fully parsed.",
                          "id": "link_rel_expect",
                          "entityType": "feature",
                          "example": {
                            "language": "html",
                            "code": "<link rel=\"expect\" href=\"#hero\" blocking=\"render\">\n",
                            "codeHighlighted": "<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;expect&quot;</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;#hero&quot;</span> <span class=\"hljs-attr\">blocking</span>=<span class=\"hljs-string\">&quot;render&quot;</span>&gt;</span>"
                          },
                          "mdn": {
                            "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Attributes/rel"
                          },
                          "webFeature": {
                            "id": "link-rel-expect",
                            "description_html": "The <code>rel=\"expect\"</code> attribute for the <code>&#x3C;link></code> HTML element is a hint to the browser to block rendering until the element that the <code>href</code> value references is connected to the document and fully parsed.",
                            "name": "<link rel=\"expect\">",
                            "spec": [
                              "https://html.spec.whatwg.org/multipage/links.html#link-type-expect"
                            ],
                            "url": "https://web-platform-dx.github.io/web-features-explorer/features/link-rel-expect/",
                            "status": {
                              "baseline": "false",
                              "support": {
                                "chrome": "124",
                                "chrome_android": "124",
                                "edge": "124"
                              }
                            }
                          }
                        }
                      },
                      {
                        "count": 2484,
                        "id": "no_answer",
                        "index": 20,
                        "percentageQuestion": 0,
                        "percentageSurvey": 39.92
                      },
                      {
                        "count": 38244,
                        "id": "other_answers",
                        "index": 21,
                        "percentageQuestion": 1022.8,
                        "percentageSurvey": 614.52
                      }
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    }
  }
}